{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1","program":"/Users/kalomidin/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","bindgen","/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata,link","-C","debuginfo=2","-C","metadata=68e53081c86cf734","-C","extra-filename=-68e53081c86cf734","--out-dir","/Users/kalomidin/Desktop/raft_example/raft_example/target/rls/debug/deps","-L","dependency=/Users/kalomidin/Desktop/raft_example/raft_example/target/rls/debug/deps","--extern","bitflags=/Users/kalomidin/Desktop/raft_example/raft_example/target/rls/debug/deps/libbitflags-2c0302f34bfd4e01.rmeta","--extern","cexpr=/Users/kalomidin/Desktop/raft_example/raft_example/target/rls/debug/deps/libcexpr-42249ed32b53d0e3.rmeta","--extern","cfg_if=/Users/kalomidin/Desktop/raft_example/raft_example/target/rls/debug/deps/libcfg_if-6904a76a2d2ebc4e.rmeta","--extern","clang_sys=/Users/kalomidin/Desktop/raft_example/raft_example/target/rls/debug/deps/libclang_sys-dd9cb602d8d2159a.rmeta","--extern","lazy_static=/Users/kalomidin/Desktop/raft_example/raft_example/target/rls/debug/deps/liblazy_static-02e854c2514733cb.rmeta","--extern","peeking_take_while=/Users/kalomidin/Desktop/raft_example/raft_example/target/rls/debug/deps/libpeeking_take_while-e5a3a521fd833eb2.rmeta","--extern","proc_macro2=/Users/kalomidin/Desktop/raft_example/raft_example/target/rls/debug/deps/libproc_macro2-c828520eaebdf40a.rmeta","--extern","quote=/Users/kalomidin/Desktop/raft_example/raft_example/target/rls/debug/deps/libquote-752114b10cdf8e40.rmeta","--extern","regex=/Users/kalomidin/Desktop/raft_example/raft_example/target/rls/debug/deps/libregex-45839de0d30677cc.rmeta","--extern","rustc_hash=/Users/kalomidin/Desktop/raft_example/raft_example/target/rls/debug/deps/librustc_hash-8041067448839ef3.rmeta","--extern","shlex=/Users/kalomidin/Desktop/raft_example/raft_example/target/rls/debug/deps/libshlex-c59962e021012799.rmeta","--cap-lints","allow","-L","native=/Users/kalomidin/Desktop/raft_example/raft_example/target/rls/debug/build/libloading-5ea02d9d9b250d29/out","--error-format=json","--sysroot","/Users/kalomidin/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/kalomidin/Desktop/raft_example/raft_example/target/rls/debug/deps/libbindgen-68e53081c86cf734.rmeta"},"prelude":{"crate_id":{"name":"bindgen","disambiguator":[4099770263323395525,17251560534573575535]},"crate_root":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src","external_crates":[{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12480940028815742386,17133840292323062676]}},{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[12740277115278631702,12640810556085455126]}},{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[9032649326521538135,12667967411968509476]}},{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10009283058736322418,8662397509334631840]}},{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3924216512132021142,13433065908605684942]}},{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[3030377414627030993,4885163689723098329]}},{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[13235301763130876389,11956675772311029582]}},{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5839480494490908876,4697973287732230237]}},{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[1041246640194432752,18216372201816767321]}},{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[4759184321302818619,12022396673976004994]}},{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[1295962249923865998,4753204618089216455]}},{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[11309261669264167917,12633313349437080871]}},{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[11563747115584760512,7975991426192958756]}},{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[2660116328215505580,9545010463301493925]}},{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","num":15,"id":{"name":"bitflags","disambiguator":[12702907766833140372,15027095729471997695]}},{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","num":16,"id":{"name":"cexpr","disambiguator":[337907729393764693,16231014300946431309]}},{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","num":17,"id":{"name":"nom","disambiguator":[8158299492696860769,13273995793030368780]}},{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[5408396219233045458,13533598537536613933]}},{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","num":19,"id":{"name":"cfg_if","disambiguator":[9789769183403167050,1356255228041714304]}},{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","num":20,"id":{"name":"clang_sys","disambiguator":[11637017181848750859,10350537840273961193]}},{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","num":21,"id":{"name":"glob","disambiguator":[11303898339912697858,12455298042994130107]}},{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","num":22,"id":{"name":"libc","disambiguator":[15784313901948042526,16253696719628766765]}},{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","num":23,"id":{"name":"libloading","disambiguator":[11176119825946994351,9005971302381472785]}},{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","num":24,"id":{"name":"rustc_hash","disambiguator":[1532403786841414091,15926653919832219797]}},{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","num":25,"id":{"name":"byteorder","disambiguator":[12464012464440790934,8248240341407886928]}},{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","num":26,"id":{"name":"lazy_static","disambiguator":[8050015217549400433,1100177532706818550]}},{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","num":27,"id":{"name":"peeking_take_while","disambiguator":[15182631298570879628,1426632909824367335]}},{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","num":28,"id":{"name":"quote","disambiguator":[7937378559266470256,5342393936474781449]}},{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","num":29,"id":{"name":"proc_macro2","disambiguator":[3156232914212069815,16203051975426611768]}},{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","num":30,"id":{"name":"unicode_xid","disambiguator":[9465049700814311500,6277847738001198448]}},{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","num":31,"id":{"name":"regex","disambiguator":[10479198630498067578,2618235528978899857]}},{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","num":32,"id":{"name":"aho_corasick","disambiguator":[4133364031632701029,15312678482588356604]}},{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","num":33,"id":{"name":"regex_syntax","disambiguator":[10196739963452611229,10685889950994710478]}},{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","num":34,"id":{"name":"thread_local","disambiguator":[1695376420984173721,15657803643841419449]}},{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","num":35,"id":{"name":"shlex","disambiguator":[16819832048276580567,7989940154324743999]}}],"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":0,"byte_end":71323,"line_start":1,"line_end":2197,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":3740},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/callbacks.rs","byte_start":798107,"byte_end":798132,"line_start":3,"line_end":3,"column_start":23,"column_end":48},"alias_span":null,"name":"EnumVariantCustomBehavior","value":"","parent":{"krate":0,"index":2660}},{"kind":"Use","ref_id":{"krate":0,"index":3770},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/callbacks.rs","byte_start":798134,"byte_end":798150,"line_start":3,"line_end":3,"column_start":50,"column_end":66},"alias_span":null,"name":"EnumVariantValue","value":"","parent":{"krate":0,"index":2660}},{"kind":"Use","ref_id":{"krate":0,"index":3863},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/callbacks.rs","byte_start":798170,"byte_end":798177,"line_start":4,"line_end":4,"column_start":18,"column_end":25},"alias_span":null,"name":"IntKind","value":"","parent":{"krate":0,"index":2660}},{"kind":"Use","ref_id":{"krate":0,"index":3024},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":2229,"byte_end":2242,"line_start":85,"line_end":85,"column_start":18,"column_end":31},"alias_span":null,"name":"EnumVariation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3064},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":2291,"byte_end":2301,"line_start":87,"line_end":87,"column_start":20,"column_end":30},"alias_span":null,"name":"RustTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":860},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":2303,"byte_end":2321,"line_start":87,"line_end":87,"column_start":32,"column_end":50},"alias_span":null,"name":"LATEST_STABLE_RUST","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3103},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":2323,"byte_end":2342,"line_start":87,"line_end":87,"column_start":52,"column_end":71},"alias_span":null,"name":"RUST_TARGET_STRINGS","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":0,"byte_end":71323,"line_start":1,"line_end":2197,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":321},{"krate":0,"index":854},{"krate":0,"index":864},{"krate":0,"index":2612},{"krate":0,"index":2629},{"krate":0,"index":2644},{"krate":0,"index":2660},{"krate":0,"index":2676},{"krate":0,"index":2677},{"krate":0,"index":2678},{"krate":0,"index":2682},{"krate":0,"index":2685},{"krate":0,"index":2686},{"krate":0,"index":2689},{"krate":0,"index":2690},{"krate":0,"index":2691},{"krate":0,"index":2694},{"krate":0,"index":2697},{"krate":0,"index":2700},{"krate":0,"index":2703},{"krate":0,"index":2704},{"krate":0,"index":2707},{"krate":0,"index":2710},{"krate":0,"index":2712},{"krate":0,"index":2713},{"krate":0,"index":4337},{"krate":0,"index":4359},{"krate":0,"index":4355},{"krate":0,"index":4356},{"krate":0,"index":4352},{"krate":0,"index":4353},{"krate":0,"index":4350},{"krate":0,"index":4344},{"krate":0,"index":4342},{"krate":0,"index":4339},{"krate":0,"index":4360},{"krate":0,"index":4370},{"krate":0,"index":4372},{"krate":0,"index":4374},{"krate":0,"index":4376},{"krate":0,"index":4378},{"krate":0,"index":4390},{"krate":0,"index":4393},{"krate":0,"index":4395},{"krate":0,"index":4398},{"krate":0,"index":4400},{"krate":0,"index":4403},{"krate":0,"index":4405},{"krate":0,"index":4408},{"krate":0,"index":4410},{"krate":0,"index":4413},{"krate":0,"index":4416},{"krate":0,"index":2715},{"krate":0,"index":2722},{"krate":0,"index":4448},{"krate":0,"index":4454},{"krate":0,"index":4452},{"krate":0,"index":2724},{"krate":0,"index":2725},{"krate":0,"index":4456},{"krate":0,"index":4521},{"krate":0,"index":2851},{"krate":0,"index":2852},{"krate":0,"index":2856},{"krate":0,"index":2858},{"krate":0,"index":4534},{"krate":0,"index":4537},{"krate":0,"index":2859},{"krate":0,"index":2876},{"krate":0,"index":2877},{"krate":0,"index":2880},{"krate":0,"index":4540},{"krate":0,"index":4543},{"krate":0,"index":2886}],"decl_id":null,"docs":" Generate Rust bindings for C and C++ libraries.","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":357,"byte_end":379,"line_start":10,"line_end":10,"column_start":1,"column_end":23}},{"value":"deny(warnings)","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":380,"byte_end":398,"line_start":11,"line_end":11,"column_start":1,"column_end":19}},{"value":"deny(unused_extern_crates)","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":399,"byte_end":429,"line_start":12,"line_end":12,"column_start":1,"column_end":31}},{"value":"allow(non_upper_case_globals)","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":517,"byte_end":550,"line_start":15,"line_end":15,"column_start":1,"column_end":34}},{"value":"recursion_limit = \"128\"","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":583,"byte_end":610,"line_start":17,"line_end":17,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":2888},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":73916,"byte_end":73922,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::clang::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":2889}],"decl_id":null,"docs":" A cursor into the Clang AST, pointing to an AST node.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":74460,"byte_end":74463,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"usr","qualname":"<Cursor>::usr","value":"fn (&self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Get the Unified Symbol Resolution for this cursor's referent, if\n available.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":74725,"byte_end":74739,"line_start":54,"line_end":54,"column_start":12,"column_end":26},"name":"is_declaration","qualname":"<Cursor>::is_declaration","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this cursor's referent a declaration?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":74879,"byte_end":74887,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"spelling","qualname":"<Cursor>::spelling","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Get this cursor's referent's spelling.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":75188,"byte_end":75200,"line_start":67,"line_end":67,"column_start":12,"column_end":24},"name":"display_name","qualname":"<Cursor>::display_name","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Get this cursor's referent's display name.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":75370,"byte_end":75378,"line_start":72,"line_end":72,"column_start":12,"column_end":20},"name":"mangling","qualname":"<Cursor>::mangling","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Get the mangled name of this cursor's referent.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":75734,"byte_end":75747,"line_start":82,"line_end":82,"column_start":12,"column_end":25},"name":"cxx_manglings","qualname":"<Cursor>::cxx_manglings","value":"fn (&self) -> Result<Vec<String>, ()>","parent":null,"children":[],"decl_id":null,"docs":" Gets the C++ manglings for this cursor, or an error if the function is\n not loaded or the manglings are not available.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":76534,"byte_end":76544,"line_start":105,"line_end":105,"column_start":12,"column_end":22},"name":"is_builtin","qualname":"<Cursor>::is_builtin","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the cursor refers to a built-in definition.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":77311,"byte_end":77325,"line_start":127,"line_end":127,"column_start":12,"column_end":26},"name":"lexical_parent","qualname":"<Cursor>::lexical_parent","value":"fn (&self) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":" Get the `Cursor` for this cursor's referent's lexical parent.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":77654,"byte_end":77678,"line_start":139,"line_end":139,"column_start":12,"column_end":36},"name":"fallible_semantic_parent","qualname":"<Cursor>::fallible_semantic_parent","value":"fn (&self) -> Option<Cursor>","parent":null,"children":[],"decl_id":null,"docs":" Get the referent's semantic parent, if one is available.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":78100,"byte_end":78115,"line_start":155,"line_end":155,"column_start":12,"column_end":27},"name":"semantic_parent","qualname":"<Cursor>::semantic_parent","value":"fn (&self) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":" Get the referent's semantic parent.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":78490,"byte_end":78507,"line_start":165,"line_end":165,"column_start":12,"column_end":29},"name":"num_template_args","qualname":"<Cursor>::num_template_args","value":"fn (&self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Return the number of template arguments used by this cursor's referent,\n if the referent is either a template instantiation. Returns `None`\n otherwise.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":79798,"byte_end":79814,"line_start":199,"line_end":199,"column_start":12,"column_end":28},"name":"translation_unit","qualname":"<Cursor>::translation_unit","value":"fn (&self) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":" Get a cursor pointing to this referent's containing translation unit.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":80185,"byte_end":80196,"line_start":212,"line_end":212,"column_start":12,"column_end":23},"name":"is_toplevel","qualname":"<Cursor>::is_toplevel","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the referent a top level construct?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":81093,"byte_end":81109,"line_start":233,"line_end":233,"column_start":12,"column_end":28},"name":"is_template_like","qualname":"<Cursor>::is_template_like","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" There are a few kinds of types that we need to treat specially, mainly\n not tracking the type declaration but the location of the cursor, given\n clang doesn't expose a proper declaration for these types.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":81415,"byte_end":81419,"line_start":243,"line_end":243,"column_start":12,"column_end":16},"name":"kind","qualname":"<Cursor>::kind","value":"fn (&self) -> CXCursorKind","parent":null,"children":[],"decl_id":null,"docs":" Get the kind of referent this cursor is pointing to.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":81534,"byte_end":81547,"line_start":248,"line_end":248,"column_start":12,"column_end":25},"name":"is_definition","qualname":"<Cursor>::is_definition","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true is the cursor is a definition\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":81691,"byte_end":81717,"line_start":253,"line_end":253,"column_start":12,"column_end":38},"name":"is_template_specialization","qualname":"<Cursor>::is_template_specialization","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the referent a template specialization?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":81913,"byte_end":81942,"line_start":259,"line_end":259,"column_start":12,"column_end":41},"name":"is_fully_specialized_template","qualname":"<Cursor>::is_fully_specialized_template","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the referent a fully specialized template specialization without any\n remaining free template arguments?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":82259,"byte_end":82295,"line_start":267,"line_end":267,"column_start":12,"column_end":48},"name":"is_in_non_fully_specialized_template","qualname":"<Cursor>::is_in_non_fully_specialized_template","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the referent a template specialization that still has remaining free\n template arguments?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":82722,"byte_end":82730,"line_start":285,"line_end":285,"column_start":12,"column_end":20},"name":"is_valid","qualname":"<Cursor>::is_valid","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this cursor pointing a valid referent?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":82869,"byte_end":82877,"line_start":290,"line_end":290,"column_start":12,"column_end":20},"name":"location","qualname":"<Cursor>::location","value":"fn (&self) -> SourceLocation","parent":null,"children":[],"decl_id":null,"docs":" Get the source location for the referent.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":83101,"byte_end":83107,"line_start":299,"line_end":299,"column_start":12,"column_end":18},"name":"extent","qualname":"<Cursor>::extent","value":"fn (&self) -> CXSourceRange","parent":null,"children":[],"decl_id":null,"docs":" Get the source location range for the referent.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":83275,"byte_end":83286,"line_start":304,"line_end":304,"column_start":12,"column_end":23},"name":"raw_comment","qualname":"<Cursor>::raw_comment","value":"fn (&self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Get the raw declaration comment for this referent, if one exists.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":83574,"byte_end":83581,"line_start":316,"line_end":316,"column_start":12,"column_end":19},"name":"comment","qualname":"<Cursor>::comment","value":"fn (&self) -> Comment","parent":null,"children":[],"decl_id":null,"docs":" Get the referent's parsed comment.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":83774,"byte_end":83782,"line_start":325,"line_end":325,"column_start":12,"column_end":20},"name":"cur_type","qualname":"<Cursor>::cur_type","value":"fn (&self) -> Type","parent":null,"children":[],"decl_id":null,"docs":" Get the referent's type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":84115,"byte_end":84125,"line_start":336,"line_end":336,"column_start":12,"column_end":22},"name":"definition","qualname":"<Cursor>::definition","value":"fn (&self) -> Option<Cursor>","parent":null,"children":[],"decl_id":null,"docs":" Given that this cursor's referent is a reference to another type, or is\n a declaration, get the cursor pointing to the referenced type or type of\n the declared thing.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":84568,"byte_end":84578,"line_start":352,"line_end":352,"column_start":12,"column_end":22},"name":"referenced","qualname":"<Cursor>::referenced","value":"fn (&self) -> Option<Cursor>","parent":null,"children":[],"decl_id":null,"docs":" Given that this cursor's referent is reference type, get the cursor\n pointing to the referenced type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":85104,"byte_end":85113,"line_start":371,"line_end":371,"column_start":12,"column_end":21},"name":"canonical","qualname":"<Cursor>::canonical","value":"fn (&self) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":" Get the canonical cursor for this referent.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":85461,"byte_end":85472,"line_start":382,"line_end":382,"column_start":12,"column_end":23},"name":"specialized","qualname":"<Cursor>::specialized","value":"fn (&self) -> Option<Cursor>","parent":null,"children":[],"decl_id":null,"docs":" Given that this cursor points to either a template specialization or a\n template instantiation, get a cursor pointing to the template definition\n that is being specialized.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":85920,"byte_end":85933,"line_start":397,"line_end":397,"column_start":12,"column_end":25},"name":"template_kind","qualname":"<Cursor>::template_kind","value":"fn (&self) -> CXCursorKind","parent":null,"children":[],"decl_id":null,"docs":" Assuming that this cursor's referent is a template declaration, get the\n kind of cursor that would be generated for its specializations.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":86158,"byte_end":86163,"line_start":404,"line_end":404,"column_start":12,"column_end":17},"name":"visit","qualname":"<Cursor>::visit","value":"fn <Visitor> (&self, mut visitor: Visitor) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Traverse this cursor's referent and its children.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":86552,"byte_end":86568,"line_start":418,"line_end":418,"column_start":12,"column_end":28},"name":"collect_children","qualname":"<Cursor>::collect_children","value":"fn (&self) -> Vec<Cursor>","parent":null,"children":[],"decl_id":null,"docs":" Collect all of this cursor's children into a vec and return them.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":86808,"byte_end":86820,"line_start":428,"line_end":428,"column_start":12,"column_end":24},"name":"has_children","qualname":"<Cursor>::has_children","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Does this cursor have any children?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":87069,"byte_end":87094,"line_start":438,"line_end":438,"column_start":12,"column_end":37},"name":"has_at_least_num_children","qualname":"<Cursor>::has_at_least_num_children","value":"fn (&self, n: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Does this cursor have at least `n` children?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":87585,"byte_end":87600,"line_start":455,"line_end":455,"column_start":12,"column_end":27},"name":"contains_cursor","qualname":"<Cursor>::contains_cursor","value":"fn (&self, kind: CXCursorKind) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the given location contains a cursor with the given\n kind in the first level of nesting underneath (doesn't look\n recursively).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":87957,"byte_end":87976,"line_start":471,"line_end":471,"column_start":12,"column_end":31},"name":"is_inlined_function","qualname":"<Cursor>::is_inlined_function","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the referent an inlined function?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":88247,"byte_end":88256,"line_start":478,"line_end":478,"column_start":12,"column_end":21},"name":"bit_width","qualname":"<Cursor>::bit_width","value":"fn (&self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Get the width of this cursor's referent bit field, or `None` if the\n referent is not a bit field.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":88593,"byte_end":88602,"line_start":491,"line_end":491,"column_start":12,"column_end":21},"name":"enum_type","qualname":"<Cursor>::enum_type","value":"fn (&self) -> Option<Type>","parent":null,"children":[],"decl_id":null,"docs":" Get the integer representation type used to hold this cursor's referent\n enum type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":89039,"byte_end":89054,"line_start":507,"line_end":507,"column_start":12,"column_end":27},"name":"enum_val_signed","qualname":"<Cursor>::enum_val_signed","value":"fn (&self) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":" Get the signed constant value for this cursor's enum variant referent.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":89465,"byte_end":89482,"line_start":520,"line_end":520,"column_start":12,"column_end":29},"name":"enum_val_unsigned","qualname":"<Cursor>::enum_val_unsigned","value":"fn (&self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Get the unsigned constant value for this cursor's enum variant referent.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":89941,"byte_end":89956,"line_start":534,"line_end":534,"column_start":12,"column_end":27},"name":"has_simple_attr","qualname":"<Cursor>::has_simple_attr","value":"fn (&self, attr: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Does this cursor have the given simple attribute?","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":90591,"byte_end":90603,"line_start":556,"line_end":556,"column_start":12,"column_end":24},"name":"typedef_type","qualname":"<Cursor>::typedef_type","value":"fn (&self) -> Option<Type>","parent":null,"children":[],"decl_id":null,"docs":" Given that this cursor's referent is a `typedef`, get the `Type` that is\n being aliased.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":90973,"byte_end":90980,"line_start":571,"line_end":571,"column_start":12,"column_end":19},"name":"linkage","qualname":"<Cursor>::linkage","value":"fn (&self) -> CXLinkageKind","parent":null,"children":[],"decl_id":null,"docs":" Get the linkage kind for this cursor's referent.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":91129,"byte_end":91139,"line_start":576,"line_end":576,"column_start":12,"column_end":22},"name":"visibility","qualname":"<Cursor>::visibility","value":"fn (&self) -> CXVisibilityKind","parent":null,"children":[],"decl_id":null,"docs":" Get the visibility of this cursor's referent.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":91563,"byte_end":91567,"line_start":589,"line_end":589,"column_start":12,"column_end":16},"name":"args","qualname":"<Cursor>::args","value":"fn (&self) -> Option<Vec<Cursor>>","parent":null,"children":[],"decl_id":null,"docs":" Given that this cursor's referent is a function, return cursors to its\n parameters.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":92193,"byte_end":92201,"line_start":607,"line_end":607,"column_start":12,"column_end":20},"name":"num_args","qualname":"<Cursor>::num_args","value":"fn (&self) -> Result<u32, ()>","parent":null,"children":[],"decl_id":null,"docs":" Given that this cursor's referent is a function/method call or\n declaration, return the number of arguments it takes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":92507,"byte_end":92523,"line_start":619,"line_end":619,"column_start":12,"column_end":28},"name":"access_specifier","qualname":"<Cursor>::access_specifier","value":"fn (&self) -> CX_CXXAccessSpecifier","parent":null,"children":[],"decl_id":null,"docs":" Get the access specifier for this cursor's referent.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":92722,"byte_end":92738,"line_start":625,"line_end":625,"column_start":12,"column_end":28},"name":"is_mutable_field","qualname":"<Cursor>::is_mutable_field","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this cursor's referent a field declaration that is marked as\n `mutable`?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":92947,"byte_end":92962,"line_start":631,"line_end":631,"column_start":12,"column_end":27},"name":"offset_of_field","qualname":"<Cursor>::offset_of_field","value":"fn (&self) -> Result<usize, LayoutError>","parent":null,"children":[],"decl_id":null,"docs":" Get the offset of the field represented by the Cursor.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":93419,"byte_end":93435,"line_start":646,"line_end":646,"column_start":12,"column_end":28},"name":"method_is_static","qualname":"<Cursor>::method_is_static","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this cursor's referent a member function that is declared `static`?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":93606,"byte_end":93621,"line_start":651,"line_end":651,"column_start":12,"column_end":27},"name":"method_is_const","qualname":"<Cursor>::method_is_const","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this cursor's referent a member function that is declared `const`?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":93782,"byte_end":93799,"line_start":656,"line_end":656,"column_start":12,"column_end":29},"name":"method_is_virtual","qualname":"<Cursor>::method_is_virtual","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this cursor's referent a member function that is virtual?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":93967,"byte_end":93989,"line_start":661,"line_end":661,"column_start":12,"column_end":34},"name":"method_is_pure_virtual","qualname":"<Cursor>::method_is_pure_virtual","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this cursor's referent a member function that is pure virtual?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":94161,"byte_end":94176,"line_start":666,"line_end":666,"column_start":12,"column_end":27},"name":"is_virtual_base","qualname":"<Cursor>::is_virtual_base","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this cursor's referent a struct or class with virtual members?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":94301,"byte_end":94309,"line_start":671,"line_end":671,"column_start":12,"column_end":20},"name":"evaluate","qualname":"<Cursor>::evaluate","value":"fn (&self) -> Option<EvalResult>","parent":null,"children":[],"decl_id":null,"docs":" Try to evaluate this cursor.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":94437,"byte_end":94445,"line_start":676,"line_end":676,"column_start":12,"column_end":20},"name":"ret_type","qualname":"<Cursor>::ret_type","value":"fn (&self) -> Option<Type>","parent":null,"children":[],"decl_id":null,"docs":" Return the result type for this cursor\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":94733,"byte_end":94739,"line_start":688,"line_end":688,"column_start":12,"column_end":18},"name":"tokens","qualname":"<Cursor>::tokens","value":"fn (&self) -> RawTokens","parent":null,"children":[],"decl_id":null,"docs":" Gets the tokens that correspond to that cursor.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":94884,"byte_end":94896,"line_start":693,"line_end":693,"column_start":12,"column_end":24},"name":"cexpr_tokens","qualname":"<Cursor>::cexpr_tokens","value":"fn (self) -> Vec<cexpr::token::Token>","parent":null,"children":[],"decl_id":null,"docs":" Gets the tokens that correspond to that cursor as  `cexpr` tokens.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":131},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":95985,"byte_end":95994,"line_start":723,"line_end":723,"column_start":12,"column_end":21},"name":"RawTokens","qualname":"::clang::RawTokens","value":"RawTokens {  }","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136}],"decl_id":null,"docs":" A struct that owns the tokenizer result from a given cursor.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":96795,"byte_end":96799,"line_start":753,"line_end":753,"column_start":12,"column_end":16},"name":"iter","qualname":"<RawTokens>::iter","value":"fn (&self) -> ClangTokenIterator","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over these tokens.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2893},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":97448,"byte_end":97458,"line_start":779,"line_end":779,"column_start":12,"column_end":22},"name":"ClangToken","qualname":"::clang::ClangToken","value":"ClangToken { kind }","parent":null,"children":[{"krate":0,"index":2894},{"krate":0,"index":2895}],"decl_id":null,"docs":" A raw clang token, that exposes only the kind and spelling. This is a\n slightly more convenient version of `CXToken` which owns the spelling\n string.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2895},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":97584,"byte_end":97588,"line_start":783,"line_end":783,"column_start":9,"column_end":13},"name":"kind","qualname":"::clang::ClangToken::kind","value":"i32","parent":{"krate":0,"index":2893},"children":[],"decl_id":null,"docs":" The kind of token, this is the same as the relevant member from\n `CXToken`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":97701,"byte_end":97709,"line_start":788,"line_end":788,"column_start":12,"column_end":20},"name":"spelling","qualname":"<ClangToken>::spelling","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Get the token spelling, without being converted to utf-8.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":149},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":98038,"byte_end":98056,"line_start":803,"line_end":803,"column_start":12,"column_end":30},"name":"ClangTokenIterator","qualname":"::clang::ClangTokenIterator","value":"ClangTokenIterator {  }","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":152}],"decl_id":null,"docs":" An iterator over a set of Tokens.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2898},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":99564,"byte_end":99568,"line_start":863,"line_end":863,"column_start":12,"column_end":16},"name":"Type","qualname":"::clang::Type","value":"Type {  }","parent":null,"children":[{"krate":0,"index":2899}],"decl_id":null,"docs":" The type of a node in clang's AST.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2904},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":100312,"byte_end":100319,"line_start":893,"line_end":893,"column_start":5,"column_end":12},"name":"Invalid","qualname":"::clang::LayoutError::Invalid","value":"LayoutError::Invalid","parent":{"krate":0,"index":2903},"children":[],"decl_id":null,"docs":" Asked for the layout of an invalid type.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2906},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":100377,"byte_end":100387,"line_start":895,"line_end":895,"column_start":5,"column_end":15},"name":"Incomplete","qualname":"::clang::LayoutError::Incomplete","value":"LayoutError::Incomplete","parent":{"krate":0,"index":2903},"children":[],"decl_id":null,"docs":" Asked for the layout of an incomplete type.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2908},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":100443,"byte_end":100452,"line_start":897,"line_end":897,"column_start":5,"column_end":14},"name":"Dependent","qualname":"::clang::LayoutError::Dependent","value":"LayoutError::Dependent","parent":{"krate":0,"index":2903},"children":[],"decl_id":null,"docs":" Asked for the layout of a dependent type.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2910},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":100531,"byte_end":100546,"line_start":899,"line_end":899,"column_start":5,"column_end":20},"name":"NotConstantSize","qualname":"::clang::LayoutError::NotConstantSize","value":"LayoutError::NotConstantSize","parent":{"krate":0,"index":2903},"children":[],"decl_id":null,"docs":" Asked for the layout of a type that does not have constant size.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2912},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":100643,"byte_end":100659,"line_start":902,"line_end":902,"column_start":5,"column_end":21},"name":"InvalidFieldName","qualname":"::clang::LayoutError::InvalidFieldName","value":"LayoutError::InvalidFieldName","parent":{"krate":0,"index":2903},"children":[],"decl_id":null,"docs":" Asked for the layout of a field in a type that does not have such a\n field.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2914},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":100698,"byte_end":100705,"line_start":904,"line_end":904,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::clang::LayoutError::Unknown","value":"LayoutError::Unknown","parent":{"krate":0,"index":2903},"children":[],"decl_id":null,"docs":" An unknown layout error.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2903},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":100245,"byte_end":100256,"line_start":891,"line_end":891,"column_start":10,"column_end":21},"name":"LayoutError","qualname":"::clang::LayoutError","value":"LayoutError::{Invalid, Incomplete, Dependent, NotConstantSize, InvalidFieldName, Unknown}","parent":null,"children":[{"krate":0,"index":2904},{"krate":0,"index":2906},{"krate":0,"index":2908},{"krate":0,"index":2910},{"krate":0,"index":2912},{"krate":0,"index":2914}],"decl_id":null,"docs":" An error about the layout of a struct, class, or type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":101238,"byte_end":101242,"line_start":924,"line_end":924,"column_start":12,"column_end":16},"name":"kind","qualname":"<Type>::kind","value":"fn (&self) -> CXTypeKind","parent":null,"children":[],"decl_id":null,"docs":" Get this type's kind.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":101362,"byte_end":101373,"line_start":929,"line_end":929,"column_start":12,"column_end":23},"name":"declaration","qualname":"<Type>::declaration","value":"fn (&self) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":" Get a cursor pointing to this type's declaration.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":101598,"byte_end":101619,"line_start":938,"line_end":938,"column_start":12,"column_end":33},"name":"canonical_declaration","qualname":"<Type>::canonical_declaration","value":"fn (&self, location: Option<&Cursor>) -> Option<CanonicalTypeDeclaration>","parent":null,"children":[],"decl_id":null,"docs":" Get the canonical declaration of this type, if it is available.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":102454,"byte_end":102462,"line_start":964,"line_end":964,"column_start":12,"column_end":20},"name":"spelling","qualname":"<Type>::spelling","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Get a raw display name for this type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":102934,"byte_end":102942,"line_start":978,"line_end":978,"column_start":12,"column_end":20},"name":"is_const","qualname":"<Type>::is_const","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this type const qualified?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":104374,"byte_end":104378,"line_start":1016,"line_end":1016,"column_start":12,"column_end":16},"name":"size","qualname":"<Type>::size","value":"fn (&self, ctx: &BindgenContext) -> usize","parent":null,"children":[],"decl_id":null,"docs":" What is the size of this type? Paper over invalid types by returning `0`\n for them.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":104606,"byte_end":104619,"line_start":1026,"line_end":1026,"column_start":12,"column_end":25},"name":"fallible_size","qualname":"<Type>::fallible_size","value":"fn (&self, ctx: &BindgenContext) -> Result<usize, LayoutError>","parent":null,"children":[],"decl_id":null,"docs":" What is the size of this type?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":104984,"byte_end":104989,"line_start":1040,"line_end":1040,"column_start":12,"column_end":17},"name":"align","qualname":"<Type>::align","value":"fn (&self, ctx: &BindgenContext) -> usize","parent":null,"children":[],"decl_id":null,"docs":" What is the alignment of this type? Paper over invalid types by\n returning `0`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":105223,"byte_end":105237,"line_start":1050,"line_end":1050,"column_start":12,"column_end":26},"name":"fallible_align","qualname":"<Type>::fallible_align","value":"fn (&self, ctx: &BindgenContext) -> Result<usize, LayoutError>","parent":null,"children":[],"decl_id":null,"docs":" What is the alignment of this type?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":105614,"byte_end":105629,"line_start":1064,"line_end":1064,"column_start":12,"column_end":27},"name":"fallible_layout","qualname":"<Type>::fallible_layout","value":"fn (&self, ctx: &BindgenContext) -> Result<::ir::layout::Layout, LayoutError>","parent":null,"children":[],"decl_id":null,"docs":" Get the layout for this type, or an error describing why it does not\n have a valid layout.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":106022,"byte_end":106039,"line_start":1076,"line_end":1076,"column_start":12,"column_end":29},"name":"num_template_args","qualname":"<Type>::num_template_args","value":"fn (&self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Get the number of template arguments this type has, or `None` if it is\n not some kind of template.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":106719,"byte_end":106732,"line_start":1095,"line_end":1095,"column_start":12,"column_end":25},"name":"template_args","qualname":"<Type>::template_args","value":"fn (&self) -> Option<TypeTemplateArgIterator>","parent":null,"children":[],"decl_id":null,"docs":" If this type is a class template specialization, return its\n template arguments. Otherwise, return None.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":107101,"byte_end":107105,"line_start":1106,"line_end":1106,"column_start":12,"column_end":16},"name":"args","qualname":"<Type>::args","value":"fn (&self) -> Option<Vec<Type>>","parent":null,"children":[],"decl_id":null,"docs":" Given that this type is a function prototype, return the types of its parameters.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":107542,"byte_end":107550,"line_start":1119,"line_end":1119,"column_start":12,"column_end":20},"name":"num_args","qualname":"<Type>::num_args","value":"fn (&self) -> Result<u32, ()>","parent":null,"children":[],"decl_id":null,"docs":" Given that this type is a function prototype, return the number of arguments it takes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":107878,"byte_end":107890,"line_start":1132,"line_end":1132,"column_start":12,"column_end":24},"name":"pointee_type","qualname":"<Type>::pointee_type","value":"fn (&self) -> Option<Type>","parent":null,"children":[],"decl_id":null,"docs":" Given that this type is a pointer type, return the type that it points\n to.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":108520,"byte_end":108529,"line_start":1152,"line_end":1152,"column_start":12,"column_end":21},"name":"elem_type","qualname":"<Type>::elem_type","value":"fn (&self) -> Option<Type>","parent":null,"children":[],"decl_id":null,"docs":" Given that this type is an array, vector, or complex type, return the\n type of its elements.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":108882,"byte_end":108894,"line_start":1165,"line_end":1165,"column_start":12,"column_end":24},"name":"num_elements","qualname":"<Type>::num_elements","value":"fn (&self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Given that this type is an array or vector type, return its number of\n elements.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":109286,"byte_end":109300,"line_start":1176,"line_end":1176,"column_start":12,"column_end":26},"name":"canonical_type","qualname":"<Type>::canonical_type","value":"fn (&self) -> Type","parent":null,"children":[],"decl_id":null,"docs":" Get the canonical version of this type. This sees through `typedef`s and\n aliases to get the underlying, canonical type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":109494,"byte_end":109505,"line_start":1185,"line_end":1185,"column_start":12,"column_end":23},"name":"is_variadic","qualname":"<Type>::is_variadic","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this type a variadic function type?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":109693,"byte_end":109701,"line_start":1191,"line_end":1191,"column_start":12,"column_end":20},"name":"ret_type","qualname":"<Type>::ret_type","value":"fn (&self) -> Option<Type>","parent":null,"children":[],"decl_id":null,"docs":" Given that this type is a function type, get the type of its return\n value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":110081,"byte_end":110090,"line_start":1204,"line_end":1204,"column_start":12,"column_end":21},"name":"call_conv","qualname":"<Type>::call_conv","value":"fn (&self) -> CXCallingConv","parent":null,"children":[],"decl_id":null,"docs":" Given that this type is a function type, get its calling convention. If\n this is not a function type, `CXCallingConv_Invalid` is returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":110348,"byte_end":110353,"line_start":1210,"line_end":1210,"column_start":12,"column_end":17},"name":"named","qualname":"<Type>::named","value":"fn (&self) -> Type","parent":null,"children":[],"decl_id":null,"docs":" For elaborated types (types which use `class`, `struct`, or `union` to\n disambiguate types from local bindings), get the underlying type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":110663,"byte_end":110671,"line_start":1223,"line_end":1223,"column_start":12,"column_end":20},"name":"is_valid","qualname":"<Type>::is_valid","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a valid type?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":110787,"byte_end":110807,"line_start":1228,"line_end":1228,"column_start":12,"column_end":32},"name":"is_valid_and_exposed","qualname":"<Type>::is_valid_and_exposed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a valid and exposed type?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":110954,"byte_end":110984,"line_start":1233,"line_end":1233,"column_start":12,"column_end":42},"name":"is_fully_instantiated_template","qualname":"<Type>::is_fully_instantiated_template","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this type a fully instantiated template?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":111766,"byte_end":111784,"line_start":1255,"line_end":1255,"column_start":12,"column_end":30},"name":"is_associated_type","qualname":"<Type>::is_associated_type","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this type an associated template type? Eg `T::Associated` in\n this example:","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2941},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":112812,"byte_end":112836,"line_start":1281,"line_end":1281,"column_start":12,"column_end":36},"name":"CanonicalTypeDeclaration","qualname":"::clang::CanonicalTypeDeclaration","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `CanonicalTypeDeclaration` type exists as proof-by-construction that its\n cursor is the canonical declaration for its type. If you have a\n `CanonicalTypeDeclaration` instance, you know for sure that the type and\n cursor match up in a canonical declaration relationship, and it simply\n cannot be otherwise.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":112918,"byte_end":112920,"line_start":1285,"line_end":1285,"column_start":12,"column_end":14},"name":"ty","qualname":"<CanonicalTypeDeclaration>::ty","value":"fn (&self) -> &Type","parent":null,"children":[],"decl_id":null,"docs":" Get the type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":113026,"byte_end":113032,"line_start":1290,"line_end":1290,"column_start":12,"column_end":18},"name":"cursor","qualname":"<CanonicalTypeDeclaration>::cursor","value":"fn (&self) -> &Cursor","parent":null,"children":[],"decl_id":null,"docs":" Get the type's canonical declaration cursor.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":217},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":113138,"byte_end":113161,"line_start":1296,"line_end":1296,"column_start":12,"column_end":35},"name":"TypeTemplateArgIterator","qualname":"::clang::TypeTemplateArgIterator","value":"TypeTemplateArgIterator {  }","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220}],"decl_id":null,"docs":" An iterator for a type's template arguments.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":226},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":113895,"byte_end":113909,"line_start":1326,"line_end":1326,"column_start":12,"column_end":26},"name":"SourceLocation","qualname":"::clang::SourceLocation","value":"SourceLocation {  }","parent":null,"children":[{"krate":0,"index":227}],"decl_id":null,"docs":" A `SourceLocation` is a file, line, column, and byte offset location for\n some source text.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":114063,"byte_end":114071,"line_start":1333,"line_end":1333,"column_start":12,"column_end":20},"name":"location","qualname":"<SourceLocation>::location","value":"fn (&self) -> (File, usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the (file, line, column, byte offset) tuple for this source\n location.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":232},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":114910,"byte_end":114917,"line_start":1361,"line_end":1361,"column_start":12,"column_end":19},"name":"Comment","qualname":"::clang::Comment","value":"Comment {  }","parent":null,"children":[{"krate":0,"index":233}],"decl_id":null,"docs":" A comment in the source text.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":115005,"byte_end":115009,"line_start":1367,"line_end":1367,"column_start":12,"column_end":16},"name":"kind","qualname":"<Comment>::kind","value":"fn (&self) -> CXCommentKind","parent":null,"children":[],"decl_id":null,"docs":" What kind of comment is this?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":115147,"byte_end":115159,"line_start":1372,"line_end":1372,"column_start":12,"column_end":24},"name":"get_children","qualname":"<Comment>::get_children","value":"fn (&self) -> CommentChildrenIterator","parent":null,"children":[],"decl_id":null,"docs":" Get this comment's children comment\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":115471,"byte_end":115483,"line_start":1382,"line_end":1382,"column_start":12,"column_end":24},"name":"get_tag_name","qualname":"<Comment>::get_tag_name","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Given that this comment is the start or end of an HTML tag, get its tag\n name.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":115676,"byte_end":115689,"line_start":1387,"line_end":1387,"column_start":12,"column_end":25},"name":"get_tag_attrs","qualname":"<Comment>::get_tag_attrs","value":"fn (&self) -> CommentAttributesIterator","parent":null,"children":[],"decl_id":null,"docs":" Given that this comment is an HTML start tag, get its attributes.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":239},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":115951,"byte_end":115974,"line_start":1397,"line_end":1397,"column_start":12,"column_end":35},"name":"CommentChildrenIterator","qualname":"::clang::CommentChildrenIterator","value":"CommentChildrenIterator {  }","parent":null,"children":[{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242}],"decl_id":null,"docs":" An iterator for a comment's children\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":246},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":116474,"byte_end":116490,"line_start":1419,"line_end":1419,"column_start":12,"column_end":28},"name":"CommentAttribute","qualname":"::clang::CommentAttribute","value":"CommentAttribute { name, value }","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":248}],"decl_id":null,"docs":" An HTML start tag comment attribute\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":247},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":116539,"byte_end":116543,"line_start":1421,"line_end":1421,"column_start":9,"column_end":13},"name":"name","qualname":"::clang::CommentAttribute::name","value":"std::string::String","parent":{"krate":0,"index":246},"children":[],"decl_id":null,"docs":" HTML start tag attribute name\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":248},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":116600,"byte_end":116605,"line_start":1423,"line_end":1423,"column_start":9,"column_end":14},"name":"value","qualname":"::clang::CommentAttribute::value","value":"std::string::String","parent":{"krate":0,"index":246},"children":[],"decl_id":null,"docs":" HTML start tag attribute value\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":249},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":116672,"byte_end":116697,"line_start":1427,"line_end":1427,"column_start":12,"column_end":37},"name":"CommentAttributesIterator","qualname":"::clang::CommentAttributesIterator","value":"CommentAttributesIterator {  }","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252}],"decl_id":null,"docs":" An iterator for a comment's attributes\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":256},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":117496,"byte_end":117500,"line_start":1458,"line_end":1458,"column_start":12,"column_end":16},"name":"File","qualname":"::clang::File","value":"File {  }","parent":null,"children":[{"krate":0,"index":257}],"decl_id":null,"docs":" A source file.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":117586,"byte_end":117590,"line_start":1464,"line_end":1464,"column_start":12,"column_end":16},"name":"name","qualname":"<File>::name","value":"fn (&self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Get the name of this source file.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":262},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":118285,"byte_end":118290,"line_start":1488,"line_end":1488,"column_start":12,"column_end":17},"name":"Index","qualname":"::clang::Index","value":"Index {  }","parent":null,"children":[{"krate":0,"index":263}],"decl_id":null,"docs":" An `Index` is an environment for a set of translation units that will\n typically end up linked together in one final binary.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":118617,"byte_end":118620,"line_start":1499,"line_end":1499,"column_start":12,"column_end":15},"name":"new","qualname":"<Index>::new","value":"fn (pch: bool, diag: bool) -> Index","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Index`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":270},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":119311,"byte_end":119326,"line_start":1532,"line_end":1532,"column_start":12,"column_end":27},"name":"TranslationUnit","qualname":"::clang::TranslationUnit","value":"TranslationUnit {  }","parent":null,"children":[{"krate":0,"index":271}],"decl_id":null,"docs":" A translation unit (or \"compilation unit\").\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":119598,"byte_end":119603,"line_start":1544,"line_end":1544,"column_start":12,"column_end":17},"name":"parse","qualname":"<TranslationUnit>::parse","value":"fn (ix: &Index, file: &str, cmd_args: &[String], unsaved: &[UnsavedFile], opts: CXTranslationUnit_Flags) -> Option<TranslationUnit>","parent":null,"children":[],"decl_id":null,"docs":" Parse a source file into a translation unit.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":120718,"byte_end":120723,"line_start":1580,"line_end":1580,"column_start":12,"column_end":17},"name":"diags","qualname":"<TranslationUnit>::diags","value":"fn (&self) -> Vec<Diagnostic>","parent":null,"children":[],"decl_id":null,"docs":" Get the Clang diagnostic information associated with this translation\n unit.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":121158,"byte_end":121164,"line_start":1594,"line_end":1594,"column_start":12,"column_end":18},"name":"cursor","qualname":"<TranslationUnit>::cursor","value":"fn (&self) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":" Get a cursor pointing to the root of this translation unit's AST.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":121366,"byte_end":121373,"line_start":1603,"line_end":1603,"column_start":12,"column_end":19},"name":"is_null","qualname":"<TranslationUnit>::is_null","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this the null translation unit?\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":284},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":121648,"byte_end":121658,"line_start":1617,"line_end":1617,"column_start":12,"column_end":22},"name":"Diagnostic","qualname":"::clang::Diagnostic","value":"Diagnostic {  }","parent":null,"children":[{"krate":0,"index":285}],"decl_id":null,"docs":" A diagnostic message generated while parsing a translation unit.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":121808,"byte_end":121814,"line_start":1624,"line_end":1624,"column_start":12,"column_end":18},"name":"format","qualname":"<Diagnostic>::format","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Format this diagnostic message as a string, using the given option bit\n flags.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":122071,"byte_end":122079,"line_start":1632,"line_end":1632,"column_start":12,"column_end":20},"name":"severity","qualname":"<Diagnostic>::severity","value":"fn (&self) -> CXDiagnosticSeverity","parent":null,"children":[],"decl_id":null,"docs":" What is the severity of this diagnostic message?\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":291},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":122407,"byte_end":122418,"line_start":1647,"line_end":1647,"column_start":12,"column_end":23},"name":"UnsavedFile","qualname":"::clang::UnsavedFile","value":"UnsavedFile { name }","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294}],"decl_id":null,"docs":" A file which has not been saved to disk.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":293},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":122562,"byte_end":122566,"line_start":1651,"line_end":1651,"column_start":9,"column_end":13},"name":"name","qualname":"::clang::UnsavedFile::name","value":"std::ffi::CString","parent":{"krate":0,"index":291},"children":[],"decl_id":null,"docs":" The name of the unsaved file. Kept here to avoid leaving dangling pointers in\n `CXUnsavedFile`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":122708,"byte_end":122711,"line_start":1657,"line_end":1657,"column_start":12,"column_end":15},"name":"new","qualname":"<UnsavedFile>::new","value":"fn (name: &str, contents: &str) -> UnsavedFile","parent":null,"children":[],"decl_id":null,"docs":" Construct a new unsaved file with the given `name` and `contents`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2962},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":130773,"byte_end":130783,"line_start":1930,"line_end":1930,"column_start":12,"column_end":22},"name":"EvalResult","qualname":"::clang::EvalResult","value":"EvalResult {  }","parent":null,"children":[{"krate":0,"index":2963}],"decl_id":null,"docs":" A wrapper for the result of evaluating an expression.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":130888,"byte_end":130891,"line_start":1936,"line_end":1936,"column_start":12,"column_end":15},"name":"new","qualname":"<EvalResult>::new","value":"fn (cursor: Cursor) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Evaluate `cursor` and return the result.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":131963,"byte_end":131972,"line_start":1971,"line_end":1971,"column_start":12,"column_end":21},"name":"as_double","qualname":"<EvalResult>::as_double","value":"fn (&self) -> Option<f64>","parent":null,"children":[],"decl_id":null,"docs":" Try to get back the result as a double.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":132247,"byte_end":132253,"line_start":1981,"line_end":1981,"column_start":12,"column_end":18},"name":"as_int","qualname":"<EvalResult>::as_int","value":"fn (&self) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":" Try to get back the result as an integer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":133313,"byte_end":133330,"line_start":2013,"line_end":2013,"column_start":12,"column_end":29},"name":"as_literal_string","qualname":"<EvalResult>::as_literal_string","value":"fn (&self) -> Option<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Evaluates the expression as a literal string, that may or may not be\n valid utf-8.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":398},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/impl_debug.rs","byte_start":283398,"byte_end":283403,"line_start":57,"line_end":57,"column_start":10,"column_end":15},"name":"Extra","qualname":"::codegen::impl_debug::ImplDebug::Extra","value":"type Extra;","parent":{"krate":0,"index":396},"children":[],"decl_id":null,"docs":" Any extra parameter required by this a particular `ImplDebug` implementation.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":591},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":143772,"byte_end":143777,"line_start":328,"line_end":328,"column_start":10,"column_end":15},"name":"Extra","qualname":"::codegen::CodeGenerator::Extra","value":"type Extra;","parent":{"krate":0,"index":590},"children":[],"decl_id":null,"docs":" Extra information from the caller.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":644},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":165681,"byte_end":165686,"line_start":965,"line_end":965,"column_start":10,"column_end":15},"name":"Extra","qualname":"::codegen::FieldCodegen::Extra","value":"type Extra;","parent":{"krate":0,"index":642},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3025},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":207118,"byte_end":207122,"line_start":2210,"line_end":2210,"column_start":5,"column_end":9},"name":"Rust","qualname":"::codegen::EnumVariation::Rust","value":"EnumVariation::Rust { non_exhaustive }","parent":{"krate":0,"index":3024},"children":[],"decl_id":null,"docs":" The code for this enum will use a Rust enum\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3027},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":207296,"byte_end":207304,"line_start":2215,"line_end":2215,"column_start":5,"column_end":13},"name":"Bitfield","qualname":"::codegen::EnumVariation::Bitfield","value":"EnumVariation::Bitfield","parent":{"krate":0,"index":3024},"children":[],"decl_id":null,"docs":" The code for this enum will use a bitfield\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3029},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":207357,"byte_end":207363,"line_start":2217,"line_end":2217,"column_start":5,"column_end":11},"name":"Consts","qualname":"::codegen::EnumVariation::Consts","value":"EnumVariation::Consts","parent":{"krate":0,"index":3024},"children":[],"decl_id":null,"docs":" The code for this enum will use consts\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3031},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":207436,"byte_end":207448,"line_start":2219,"line_end":2219,"column_start":5,"column_end":17},"name":"ModuleConsts","qualname":"::codegen::EnumVariation::ModuleConsts","value":"EnumVariation::ModuleConsts","parent":{"krate":0,"index":3024},"children":[],"decl_id":null,"docs":" The code for this enum will use a module containing consts\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3024},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":207046,"byte_end":207059,"line_start":2208,"line_end":2208,"column_start":10,"column_end":23},"name":"EnumVariation","qualname":"::codegen::EnumVariation","value":"EnumVariation::{Rust, Bitfield, Consts, ModuleConsts}","parent":null,"children":[{"krate":0,"index":3025},{"krate":0,"index":3027},{"krate":0,"index":3029},{"krate":0,"index":3031}],"decl_id":null,"docs":" A helper type that represents different enum variations.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":744},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":229197,"byte_end":229202,"line_start":2858,"line_end":2858,"column_start":10,"column_end":15},"name":"Extra","qualname":"::codegen::TryToOpaque::Extra","value":"type Extra;","parent":{"krate":0,"index":743},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":755},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":231199,"byte_end":231204,"line_start":2914,"line_end":2914,"column_start":10,"column_end":15},"name":"Extra","qualname":"::codegen::TryToRustTy::Extra","value":"type Extra;","parent":{"krate":0,"index":754},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":758},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":231670,"byte_end":231675,"line_start":2929,"line_end":2929,"column_start":10,"column_end":15},"name":"Extra","qualname":"::codegen::TryToRustTyOrOpaque::Extra","value":"type Extra;","parent":{"krate":0,"index":757},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":767},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":233440,"byte_end":233445,"line_start":2977,"line_end":2977,"column_start":10,"column_end":15},"name":"Extra","qualname":"::codegen::ToRustTyOrOpaque::Extra","value":"type Extra;","parent":{"krate":0,"index":766},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":860},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/features.rs","byte_start":309724,"byte_end":309742,"line_start":119,"line_end":119,"column_start":11,"column_end":29},"name":"LATEST_STABLE_RUST","qualname":"::features::LATEST_STABLE_RUST","value":"RustTarget","parent":null,"children":[],"decl_id":null,"docs":" Latest stable release of Rust\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3135},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/template_params.rs","byte_start":334664,"byte_end":334686,"line_start":149,"line_end":149,"column_start":12,"column_end":34},"name":"UsedTemplateParameters","qualname":"::ir::analysis::template_params::UsedTemplateParameters","value":"UsedTemplateParameters {  }","parent":null,"children":[{"krate":0,"index":3137},{"krate":0,"index":3138},{"krate":0,"index":3139},{"krate":0,"index":3140}],"decl_id":null,"docs":" An analysis that finds for each IR item its set of template parameters that\n it uses.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3165},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/derive.rs","byte_start":354075,"byte_end":354087,"line_start":63,"line_end":63,"column_start":12,"column_end":24},"name":"CannotDerive","qualname":"::ir::analysis::derive::CannotDerive","value":"CannotDerive {  }","parent":null,"children":[{"krate":0,"index":3167},{"krate":0,"index":3168},{"krate":0,"index":3169},{"krate":0,"index":3170}],"decl_id":null,"docs":" An analysis that finds for each IR item whether a trait cannot be derived.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3179},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/has_vtable.rs","byte_start":377505,"byte_end":377507,"line_start":15,"line_end":15,"column_start":5,"column_end":7},"name":"No","qualname":"::ir::analysis::has_vtable::HasVtableResult::No","value":"HasVtableResult::No","parent":{"krate":0,"index":3178},"children":[],"decl_id":null,"docs":" The item does not have a vtable pointer.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3181},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/has_vtable.rs","byte_start":377595,"byte_end":377608,"line_start":18,"line_end":18,"column_start":5,"column_end":18},"name":"SelfHasVtable","qualname":"::ir::analysis::has_vtable::HasVtableResult::SelfHasVtable","value":"HasVtableResult::SelfHasVtable","parent":{"krate":0,"index":3178},"children":[],"decl_id":null,"docs":" The item has a vtable and the actual vtable pointer is within this item.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3183},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/has_vtable.rs","byte_start":377705,"byte_end":377718,"line_start":22,"line_end":22,"column_start":5,"column_end":18},"name":"BaseHasVtable","qualname":"::ir::analysis::has_vtable::HasVtableResult::BaseHasVtable","value":"HasVtableResult::BaseHasVtable","parent":{"krate":0,"index":3178},"children":[],"decl_id":null,"docs":" The item has a vtable, but the actual vtable pointer is in a base\n member.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3178},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/has_vtable.rs","byte_start":377434,"byte_end":377449,"line_start":13,"line_end":13,"column_start":10,"column_end":25},"name":"HasVtableResult","qualname":"::ir::analysis::has_vtable::HasVtableResult","value":"HasVtableResult::{No, SelfHasVtable, BaseHasVtable}","parent":null,"children":[{"krate":0,"index":3179},{"krate":0,"index":3181},{"krate":0,"index":3183}],"decl_id":null,"docs":" The result of the `HasVtableAnalysis` for an individual item.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1020},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/has_vtable.rs","byte_start":377912,"byte_end":377916,"line_start":33,"line_end":33,"column_start":12,"column_end":16},"name":"join","qualname":"<HasVtableResult>::join","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Take the least upper bound of `self` and `rhs`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3200},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/has_vtable.rs","byte_start":378870,"byte_end":378887,"line_start":63,"line_end":63,"column_start":12,"column_end":29},"name":"HasVtableAnalysis","qualname":"::ir::analysis::has_vtable::HasVtableAnalysis","value":"HasVtableAnalysis {  }","parent":null,"children":[{"krate":0,"index":3202},{"krate":0,"index":3203},{"krate":0,"index":3204}],"decl_id":null,"docs":" An analysis that finds for each IR item whether it has vtable or not","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3212},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/has_destructor.rs","byte_start":385738,"byte_end":385759,"line_start":25,"line_end":25,"column_start":12,"column_end":33},"name":"HasDestructorAnalysis","qualname":"::ir::analysis::has_destructor::HasDestructorAnalysis","value":"HasDestructorAnalysis {  }","parent":null,"children":[{"krate":0,"index":3214},{"krate":0,"index":3215},{"krate":0,"index":3216}],"decl_id":null,"docs":" An analysis that finds for each IR item whether it has a destructor or not","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3223},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/has_type_param_in_array.rs","byte_start":391950,"byte_end":391973,"line_start":25,"line_end":25,"column_start":12,"column_end":35},"name":"HasTypeParameterInArray","qualname":"::ir::analysis::has_type_param_in_array::HasTypeParameterInArray","value":"HasTypeParameterInArray {  }","parent":null,"children":[{"krate":0,"index":3225},{"krate":0,"index":3226},{"krate":0,"index":3227}],"decl_id":null,"docs":" An analysis that finds for each IR item whether it has array or not.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3234},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/has_float.rs","byte_start":400793,"byte_end":400801,"line_start":25,"line_end":25,"column_start":12,"column_end":20},"name":"HasFloat","qualname":"::ir::analysis::has_float::HasFloat","value":"HasFloat {  }","parent":null,"children":[{"krate":0,"index":3236},{"krate":0,"index":3237},{"krate":0,"index":3238}],"decl_id":null,"docs":" An analysis that finds for each IR item whether it has float or not.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3246},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/sizedness.rs","byte_start":409603,"byte_end":409612,"line_start":34,"line_end":34,"column_start":5,"column_end":14},"name":"ZeroSized","qualname":"::ir::analysis::sizedness::SizednessResult::ZeroSized","value":"SizednessResult::ZeroSized","parent":{"krate":0,"index":3245},"children":[],"decl_id":null,"docs":" The type is zero-sized.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3248},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/sizedness.rs","byte_start":410300,"byte_end":410318,"line_start":56,"line_end":56,"column_start":5,"column_end":23},"name":"DependsOnTypeParam","qualname":"::ir::analysis::sizedness::SizednessResult::DependsOnTypeParam","value":"SizednessResult::DependsOnTypeParam","parent":{"krate":0,"index":3245},"children":[],"decl_id":null,"docs":" Whether this type is zero-sized or not depends on whether a type\n parameter is zero-sized or not.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3250},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/sizedness.rs","byte_start":410576,"byte_end":410588,"line_start":62,"line_end":62,"column_start":5,"column_end":17},"name":"NonZeroSized","qualname":"::ir::analysis::sizedness::SizednessResult::NonZeroSized","value":"SizednessResult::NonZeroSized","parent":{"krate":0,"index":3245},"children":[],"decl_id":null,"docs":" Has some size that is known to be greater than zero. That doesn't mean\n it has a static size, but it is not zero sized for sure. In other words,\n it might contain an incomplete array or some other dynamically sized\n type.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3245},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/sizedness.rs","byte_start":409339,"byte_end":409354,"line_start":28,"line_end":28,"column_start":10,"column_end":25},"name":"SizednessResult","qualname":"::ir::analysis::sizedness::SizednessResult","value":"SizednessResult::{ZeroSized, DependsOnTypeParam, NonZeroSized}","parent":null,"children":[{"krate":0,"index":3246},{"krate":0,"index":3248},{"krate":0,"index":3250}],"decl_id":null,"docs":" The result of the `Sizedness` analysis for an individual item.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1190},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/sizedness.rs","byte_start":410789,"byte_end":410793,"line_start":73,"line_end":73,"column_start":12,"column_end":16},"name":"join","qualname":"<SizednessResult>::join","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Take the least upper bound of `self` and `rhs`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3267},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/sizedness.rs","byte_start":411625,"byte_end":411642,"line_start":105,"line_end":105,"column_start":12,"column_end":29},"name":"SizednessAnalysis","qualname":"::ir::analysis::sizedness::SizednessAnalysis","value":"SizednessAnalysis {  }","parent":null,"children":[{"krate":0,"index":3269},{"krate":0,"index":3270},{"krate":0,"index":3271}],"decl_id":null,"docs":" An analysis that computes the sizedness of all types.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1238},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/mod.rs","byte_start":318390,"byte_end":318394,"line_start":81,"line_end":81,"column_start":10,"column_end":14},"name":"Node","qualname":"::ir::analysis::MonotoneFramework::Node","value":"type Node: Copy;","parent":{"krate":0,"index":1237},"children":[],"decl_id":null,"docs":" The type of node in our dependency graph.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1239},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/mod.rs","byte_start":318675,"byte_end":318680,"line_start":88,"line_end":88,"column_start":10,"column_end":15},"name":"Extra","qualname":"::ir::analysis::MonotoneFramework::Extra","value":"type Extra: Sized;","parent":{"krate":0,"index":1237},"children":[],"decl_id":null,"docs":" Any extra data that is needed during computation.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1240},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/mod.rs","byte_start":318877,"byte_end":318883,"line_start":93,"line_end":93,"column_start":10,"column_end":16},"name":"Output","qualname":"::ir::analysis::MonotoneFramework::Output","value":"type Output: From<Self> + fmt::Debug;","parent":{"krate":0,"index":1237},"children":[],"decl_id":null,"docs":" The final output of this analysis. Once we have reached a fix-point, we\n convert `self` into this type, and return it as the final result of the\n analysis.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3293},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/annotations.rs","byte_start":420545,"byte_end":420549,"line_start":13,"line_end":13,"column_start":5,"column_end":9},"name":"None","qualname":"::ir::annotations::FieldAccessorKind::None","value":"FieldAccessorKind::None","parent":{"krate":0,"index":3292},"children":[],"decl_id":null,"docs":" No accessor.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3295},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/annotations.rs","byte_start":420579,"byte_end":420586,"line_start":15,"line_end":15,"column_start":5,"column_end":12},"name":"Regular","qualname":"::ir::annotations::FieldAccessorKind::Regular","value":"FieldAccessorKind::Regular","parent":{"krate":0,"index":3292},"children":[],"decl_id":null,"docs":" Plain accessor.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3297},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/annotations.rs","byte_start":420617,"byte_end":420623,"line_start":17,"line_end":17,"column_start":5,"column_end":11},"name":"Unsafe","qualname":"::ir::annotations::FieldAccessorKind::Unsafe","value":"FieldAccessorKind::Unsafe","parent":{"krate":0,"index":3292},"children":[],"decl_id":null,"docs":" Unsafe accessor.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3299},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/annotations.rs","byte_start":420657,"byte_end":420666,"line_start":19,"line_end":19,"column_start":5,"column_end":14},"name":"Immutable","qualname":"::ir::annotations::FieldAccessorKind::Immutable","value":"FieldAccessorKind::Immutable","parent":{"krate":0,"index":3292},"children":[],"decl_id":null,"docs":" Immutable accessor.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3292},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/annotations.rs","byte_start":420500,"byte_end":420517,"line_start":11,"line_end":11,"column_start":10,"column_end":27},"name":"FieldAccessorKind","qualname":"::ir::annotations::FieldAccessorKind","value":"FieldAccessorKind::{None, Regular, Unsafe, Immutable}","parent":null,"children":[{"krate":0,"index":3293},{"krate":0,"index":3295},{"krate":0,"index":3297},{"krate":0,"index":3299}],"decl_id":null,"docs":" What kind of accessor should we provide for a field?\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3309},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/annotations.rs","byte_start":420923,"byte_end":420934,"line_start":29,"line_end":29,"column_start":12,"column_end":23},"name":"Annotations","qualname":"::ir::annotations::Annotations","value":"Annotations {  }","parent":null,"children":[{"krate":0,"index":3310},{"krate":0,"index":3311},{"krate":0,"index":3312},{"krate":0,"index":3313},{"krate":0,"index":3314},{"krate":0,"index":3315},{"krate":0,"index":3316},{"krate":0,"index":3317}],"decl_id":null,"docs":" Annotations for a given item, or a field.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1265},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/annotations.rs","byte_start":423021,"byte_end":423024,"line_start":92,"line_end":92,"column_start":12,"column_end":15},"name":"new","qualname":"<Annotations>::new","value":"fn (cursor: &clang::Cursor) -> Option<Annotations>","parent":null,"children":[],"decl_id":null,"docs":" Construct new annotations for the given cursor and its bindgen comments\n (if any).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1266},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/annotations.rs","byte_start":423362,"byte_end":423366,"line_start":105,"line_end":105,"column_start":12,"column_end":16},"name":"hide","qualname":"<Annotations>::hide","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Should this type be hidden?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1267},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/annotations.rs","byte_start":423456,"byte_end":423462,"line_start":110,"line_end":110,"column_start":12,"column_end":18},"name":"opaque","qualname":"<Annotations>::opaque","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Should this type be opaque?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1268},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/annotations.rs","byte_start":424089,"byte_end":424103,"line_start":136,"line_end":136,"column_start":12,"column_end":26},"name":"use_instead_of","qualname":"<Annotations>::use_instead_of","value":"fn (&self) -> Option<&[String]>","parent":null,"children":[],"decl_id":null,"docs":" For a given type, indicates the type it should replace.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1270},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/annotations.rs","byte_start":424276,"byte_end":424283,"line_start":141,"line_end":141,"column_start":12,"column_end":19},"name":"derives","qualname":"<Annotations>::derives","value":"fn (&self) -> &[String]","parent":null,"children":[],"decl_id":null,"docs":" The list of derives that have been specified in this annotation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1271},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/annotations.rs","byte_start":424401,"byte_end":424414,"line_start":146,"line_end":146,"column_start":12,"column_end":25},"name":"disallow_copy","qualname":"<Annotations>::disallow_copy","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Should we avoid implementing the `Copy` trait?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1272},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/annotations.rs","byte_start":424515,"byte_end":424529,"line_start":151,"line_end":151,"column_start":12,"column_end":26},"name":"private_fields","qualname":"<Annotations>::private_fields","value":"fn (&self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Should the fields be private?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1273},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/annotations.rs","byte_start":424674,"byte_end":424687,"line_start":156,"line_end":156,"column_start":12,"column_end":25},"name":"accessor_kind","qualname":"<Annotations>::accessor_kind","value":"fn (&self) -> Option<FieldAccessorKind>","parent":null,"children":[],"decl_id":null,"docs":" What kind of accessors should we provide for this type's fields?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1277},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/annotations.rs","byte_start":426276,"byte_end":426297,"line_start":199,"line_end":199,"column_start":12,"column_end":33},"name":"constify_enum_variant","qualname":"<Annotations>::constify_enum_variant","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether we've parsed a \"constant\" attribute.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3340},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":430732,"byte_end":430738,"line_start":26,"line_end":26,"column_start":5,"column_end":11},"name":"Struct","qualname":"::ir::comp::CompKind::Struct","value":"CompKind::Struct","parent":{"krate":0,"index":3339},"children":[],"decl_id":null,"docs":" A struct.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3342},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":430761,"byte_end":430766,"line_start":28,"line_end":28,"column_start":5,"column_end":10},"name":"Union","qualname":"::ir::comp::CompKind::Union","value":"CompKind::Union","parent":{"krate":0,"index":3339},"children":[],"decl_id":null,"docs":" A union.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3339},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":430699,"byte_end":430707,"line_start":24,"line_end":24,"column_start":10,"column_end":18},"name":"CompKind","qualname":"::ir::comp::CompKind","value":"CompKind::{Struct, Union}","parent":null,"children":[{"krate":0,"index":3340},{"krate":0,"index":3342}],"decl_id":null,"docs":" The kind of compound type.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3353},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":430967,"byte_end":430978,"line_start":36,"line_end":36,"column_start":5,"column_end":16},"name":"Constructor","qualname":"::ir::comp::MethodKind::Constructor","value":"MethodKind::Constructor","parent":{"krate":0,"index":3352},"children":[],"decl_id":null,"docs":" A constructor. We represent it as method for convenience, to avoid code\n duplication.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3355},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":431006,"byte_end":431016,"line_start":38,"line_end":38,"column_start":5,"column_end":15},"name":"Destructor","qualname":"::ir::comp::MethodKind::Destructor","value":"MethodKind::Destructor","parent":{"krate":0,"index":3352},"children":[],"decl_id":null,"docs":" A destructor.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3357},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":431052,"byte_end":431069,"line_start":40,"line_end":40,"column_start":5,"column_end":22},"name":"VirtualDestructor","qualname":"::ir::comp::MethodKind::VirtualDestructor","value":"MethodKind::VirtualDestructor { pure_virtual }","parent":{"krate":0,"index":3352},"children":[],"decl_id":null,"docs":" A virtual destructor.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3359},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":431175,"byte_end":431181,"line_start":45,"line_end":45,"column_start":5,"column_end":11},"name":"Static","qualname":"::ir::comp::MethodKind::Static","value":"MethodKind::Static","parent":{"krate":0,"index":3352},"children":[],"decl_id":null,"docs":" A static method.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3361},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":431212,"byte_end":431218,"line_start":47,"line_end":47,"column_start":5,"column_end":11},"name":"Normal","qualname":"::ir::comp::MethodKind::Normal","value":"MethodKind::Normal","parent":{"krate":0,"index":3352},"children":[],"decl_id":null,"docs":" A normal method.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3363},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":431250,"byte_end":431257,"line_start":49,"line_end":49,"column_start":5,"column_end":12},"name":"Virtual","qualname":"::ir::comp::MethodKind::Virtual","value":"MethodKind::Virtual { pure_virtual }","parent":{"krate":0,"index":3352},"children":[],"decl_id":null,"docs":" A virtual method.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3352},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":430849,"byte_end":430859,"line_start":33,"line_end":33,"column_start":10,"column_end":20},"name":"MethodKind","qualname":"::ir::comp::MethodKind","value":"MethodKind::{Constructor, Destructor, VirtualDestructor, Static, Normal, Virtual}","parent":null,"children":[{"krate":0,"index":3353},{"krate":0,"index":3355},{"krate":0,"index":3357},{"krate":0,"index":3359},{"krate":0,"index":3361},{"krate":0,"index":3363}],"decl_id":null,"docs":" The kind of C++ method.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1325},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":431403,"byte_end":431416,"line_start":57,"line_end":57,"column_start":12,"column_end":25},"name":"is_destructor","qualname":"<MethodKind>::is_destructor","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a destructor method?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1326},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":431661,"byte_end":431676,"line_start":67,"line_end":67,"column_start":12,"column_end":27},"name":"is_pure_virtual","qualname":"<MethodKind>::is_pure_virtual","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a pure virtual method?\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3374},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":431989,"byte_end":431995,"line_start":78,"line_end":78,"column_start":12,"column_end":18},"name":"Method","qualname":"::ir::comp::Method","value":"Method {  }","parent":null,"children":[{"krate":0,"index":3375},{"krate":0,"index":3376},{"krate":0,"index":3377}],"decl_id":null,"docs":" A struct representing a C++ method, either static, normal, or virtual.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1328},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":432315,"byte_end":432318,"line_start":90,"line_end":90,"column_start":12,"column_end":15},"name":"new","qualname":"<Method>::new","value":"fn (kind: MethodKind, signature: FunctionId, is_const: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Method`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1329},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":432562,"byte_end":432566,"line_start":103,"line_end":103,"column_start":12,"column_end":16},"name":"kind","qualname":"<Method>::kind","value":"fn (&self) -> MethodKind","parent":null,"children":[],"decl_id":null,"docs":" What kind of method is this?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1330},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":432657,"byte_end":432671,"line_start":108,"line_end":108,"column_start":12,"column_end":26},"name":"is_constructor","qualname":"<Method>::is_constructor","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a constructor?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1331},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":432786,"byte_end":432796,"line_start":113,"line_end":113,"column_start":12,"column_end":22},"name":"is_virtual","qualname":"<Method>::is_virtual","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a virtual method?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1332},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":433024,"byte_end":433033,"line_start":122,"line_end":122,"column_start":12,"column_end":21},"name":"is_static","qualname":"<Method>::is_static","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a static method?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1333},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":433174,"byte_end":433183,"line_start":127,"line_end":127,"column_start":12,"column_end":21},"name":"signature","qualname":"<Method>::signature","value":"fn (&self) -> FunctionId","parent":null,"children":[],"decl_id":null,"docs":" Get the id for the `Function` signature for this method.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1334},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":433290,"byte_end":433298,"line_start":132,"line_end":132,"column_start":12,"column_end":20},"name":"is_const","qualname":"<Method>::is_const","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a const qualified method?\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3380},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":434278,"byte_end":434290,"line_start":166,"line_end":166,"column_start":12,"column_end":24},"name":"BitfieldUnit","qualname":"::ir::comp::BitfieldUnit","value":"BitfieldUnit {  }","parent":null,"children":[{"krate":0,"index":3381},{"krate":0,"index":3382},{"krate":0,"index":3383}],"decl_id":null,"docs":" A contiguous set of logical bitfields that live within the same physical\n allocation unit. See 9.2.4 [class.bit] in the C++ standard and [section\n 2.4.II.1 in the Itanium C++\n ABI](http://itanium-cxx-abi.github.io/cxx-abi/abi.html#class-types).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1344},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":434568,"byte_end":434571,"line_start":176,"line_end":176,"column_start":12,"column_end":15},"name":"nth","qualname":"<BitfieldUnit>::nth","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the 1-based index of this bitfield unit within its containing\n struct. Useful for generating a Rust struct's field name for this unit\n of bitfields.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1345},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":434685,"byte_end":434691,"line_start":181,"line_end":181,"column_start":12,"column_end":18},"name":"layout","qualname":"<BitfieldUnit>::layout","value":"fn (&self) -> Layout","parent":null,"children":[],"decl_id":null,"docs":" Get the layout within which these bitfields reside.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1346},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":434793,"byte_end":434802,"line_start":186,"line_end":186,"column_start":12,"column_end":21},"name":"bitfields","qualname":"<BitfieldUnit>::bitfields","value":"fn (&self) -> &[Bitfield]","parent":null,"children":[],"decl_id":null,"docs":" Get the bitfields within this unit.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3387},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":434967,"byte_end":434977,"line_start":195,"line_end":195,"column_start":5,"column_end":15},"name":"DataMember","qualname":"::ir::comp::Field::DataMember","value":"Field::DataMember(FieldData)","parent":{"krate":0,"index":3386},"children":[],"decl_id":null,"docs":" A normal data member.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3390},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":435065,"byte_end":435074,"line_start":198,"line_end":198,"column_start":5,"column_end":14},"name":"Bitfields","qualname":"::ir::comp::Field::Bitfields","value":"Field::Bitfields(BitfieldUnit)","parent":{"krate":0,"index":3386},"children":[],"decl_id":null,"docs":" A physical allocation unit containing many logical bitfields.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3386},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":434925,"byte_end":434930,"line_start":193,"line_end":193,"column_start":10,"column_end":15},"name":"Field","qualname":"::ir::comp::Field","value":"Field::{DataMember, Bitfields}","parent":null,"children":[{"krate":0,"index":3387},{"krate":0,"index":3390}],"decl_id":null,"docs":" A struct representing a C++ field.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1348},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":435150,"byte_end":435156,"line_start":203,"line_end":203,"column_start":12,"column_end":18},"name":"layout","qualname":"<Field>::layout","value":"fn (&self, ctx: &BindgenContext) -> Option<Layout>","parent":null,"children":[],"decl_id":null,"docs":" Get this field's layout.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3395},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":438034,"byte_end":438042,"line_start":312,"line_end":312,"column_start":12,"column_end":20},"name":"Bitfield","qualname":"::ir::comp::Bitfield","value":"Bitfield {  }","parent":null,"children":[{"krate":0,"index":3396},{"krate":0,"index":3397},{"krate":0,"index":3398},{"krate":0,"index":3399}],"decl_id":null,"docs":" A logical bitfield within some physical bitfield allocation unit.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1364},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":438976,"byte_end":438992,"line_start":346,"line_end":346,"column_start":12,"column_end":28},"name":"offset_into_unit","qualname":"<Bitfield>::offset_into_unit","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the index of the bit within this bitfield's allocation unit where\n this bitfield begins.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1365},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":439178,"byte_end":439182,"line_start":352,"line_end":352,"column_start":12,"column_end":16},"name":"mask","qualname":"<Bitfield>::mask","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get the mask value that when &'ed with this bitfield's allocation unit\n produces this bitfield's value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1367},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":439548,"byte_end":439553,"line_start":366,"line_end":366,"column_start":12,"column_end":17},"name":"width","qualname":"<Bitfield>::width","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the bit width of this bitfield.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1368},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":439809,"byte_end":439820,"line_start":374,"line_end":374,"column_start":12,"column_end":23},"name":"getter_name","qualname":"<Bitfield>::getter_name","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Name of the generated Rust getter for this bitfield.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1369},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":440327,"byte_end":440338,"line_start":389,"line_end":389,"column_start":12,"column_end":23},"name":"setter_name","qualname":"<Bitfield>::setter_name","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Name of the generated Rust setter for this bitfield.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3418},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":455441,"byte_end":455450,"line_start":859,"line_end":859,"column_start":12,"column_end":21},"name":"FieldData","qualname":"::ir::comp::FieldData","value":"FieldData {  }","parent":null,"children":[{"krate":0,"index":3419},{"krate":0,"index":3420},{"krate":0,"index":3421},{"krate":0,"index":3422},{"krate":0,"index":3423},{"krate":0,"index":3424},{"krate":0,"index":3425}],"decl_id":null,"docs":" Common data shared across different field types.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3431},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":456772,"byte_end":456778,"line_start":920,"line_end":920,"column_start":5,"column_end":11},"name":"Normal","qualname":"::ir::comp::BaseKind::Normal","value":"BaseKind::Normal","parent":{"krate":0,"index":3430},"children":[],"decl_id":null,"docs":" Normal inheritance, like:","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3433},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":456892,"byte_end":456899,"line_start":926,"line_end":926,"column_start":5,"column_end":12},"name":"Virtual","qualname":"::ir::comp::BaseKind::Virtual","value":"BaseKind::Virtual","parent":{"krate":0,"index":3430},"children":[],"decl_id":null,"docs":" Virtual inheritance, like:","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3430},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":456657,"byte_end":456665,"line_start":914,"line_end":914,"column_start":10,"column_end":18},"name":"BaseKind","qualname":"::ir::comp::BaseKind","value":"BaseKind::{Normal, Virtual}","parent":null,"children":[{"krate":0,"index":3431},{"krate":0,"index":3433}],"decl_id":null,"docs":" The kind of inheritance a base class is using.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3445},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":456957,"byte_end":456961,"line_start":931,"line_end":931,"column_start":12,"column_end":16},"name":"Base","qualname":"::ir::comp::Base","value":"Base { ty, kind, field_name }","parent":null,"children":[{"krate":0,"index":3446},{"krate":0,"index":3447},{"krate":0,"index":3448}],"decl_id":null,"docs":" A base class.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3446},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":457009,"byte_end":457011,"line_start":933,"line_end":933,"column_start":9,"column_end":11},"name":"ty","qualname":"::ir::comp::Base::ty","value":"ir::context::TypeId","parent":{"krate":0,"index":3445},"children":[],"decl_id":null,"docs":" The type of this base class.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3447},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":457074,"byte_end":457078,"line_start":935,"line_end":935,"column_start":9,"column_end":13},"name":"kind","qualname":"::ir::comp::Base::kind","value":"ir::comp::BaseKind","parent":{"krate":0,"index":3445},"children":[],"decl_id":null,"docs":" The kind of inheritance we're doing.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3448},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":457161,"byte_end":457171,"line_start":937,"line_end":937,"column_start":9,"column_end":19},"name":"field_name","qualname":"::ir::comp::Base::field_name","value":"std::string::String","parent":{"krate":0,"index":3445},"children":[],"decl_id":null,"docs":" Name of the field in which this base should be stored.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1428},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":457264,"byte_end":457274,"line_start":942,"line_end":942,"column_start":12,"column_end":22},"name":"is_virtual","qualname":"<Base>::is_virtual","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this base class is inheriting virtually.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1429},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":457421,"byte_end":457437,"line_start":947,"line_end":947,"column_start":12,"column_end":28},"name":"requires_storage","qualname":"<Base>::requires_storage","value":"fn (&self, ctx: &BindgenContext) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this base class should have it's own field for storage.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3453},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":458198,"byte_end":458206,"line_start":973,"line_end":973,"column_start":12,"column_end":20},"name":"CompInfo","qualname":"::ir::comp::CompInfo","value":"CompInfo {  }","parent":null,"children":[{"krate":0,"index":3454},{"krate":0,"index":3455},{"krate":0,"index":3456},{"krate":0,"index":3457},{"krate":0,"index":3458},{"krate":0,"index":3459},{"krate":0,"index":3460},{"krate":0,"index":3461},{"krate":0,"index":3462},{"krate":0,"index":3463},{"krate":0,"index":3464},{"krate":0,"index":3465},{"krate":0,"index":3466},{"krate":0,"index":3467},{"krate":0,"index":3468},{"krate":0,"index":3469}],"decl_id":null,"docs":" A compound type.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1431},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":460715,"byte_end":460718,"line_start":1048,"line_end":1048,"column_start":12,"column_end":15},"name":"new","qualname":"<CompInfo>::new","value":"fn (kind: CompKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new compound type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1432},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":461759,"byte_end":461765,"line_start":1077,"line_end":1077,"column_start":12,"column_end":18},"name":"layout","qualname":"<CompInfo>::layout","value":"fn (&self, ctx: &BindgenContext) -> Option<Layout>","parent":null,"children":[],"decl_id":null,"docs":" Compute the layout of this type.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1433},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":462728,"byte_end":462734,"line_start":1110,"line_end":1110,"column_start":12,"column_end":18},"name":"fields","qualname":"<CompInfo>::fields","value":"fn (&self) -> &[Field]","parent":null,"children":[],"decl_id":null,"docs":" Get this type's set of fields.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1434},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":463188,"byte_end":463216,"line_start":1122,"line_end":1122,"column_start":12,"column_end":40},"name":"has_non_type_template_params","qualname":"<CompInfo>::has_non_type_template_params","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Does this type have any template parameters that aren't types\n (e.g. int)?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1435},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":463395,"byte_end":463417,"line_start":1128,"line_end":1128,"column_start":12,"column_end":34},"name":"has_own_virtual_method","qualname":"<CompInfo>::has_own_virtual_method","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Do we see a virtual function during parsing?\n Get the has_own_virtual_method boolean.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1436},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":463553,"byte_end":463571,"line_start":1133,"line_end":1133,"column_start":12,"column_end":30},"name":"has_own_destructor","qualname":"<CompInfo>::has_own_destructor","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Did we see a destructor when parsing this type?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1437},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":463675,"byte_end":463682,"line_start":1138,"line_end":1138,"column_start":12,"column_end":19},"name":"methods","qualname":"<CompInfo>::methods","value":"fn (&self) -> &[Method]","parent":null,"children":[],"decl_id":null,"docs":" Get this type's set of methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1438},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":463790,"byte_end":463802,"line_start":1143,"line_end":1143,"column_start":12,"column_end":24},"name":"constructors","qualname":"<CompInfo>::constructors","value":"fn (&self) -> &[FunctionId]","parent":null,"children":[],"decl_id":null,"docs":" Get this type's set of constructors.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1439},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":463910,"byte_end":463920,"line_start":1148,"line_end":1148,"column_start":12,"column_end":22},"name":"destructor","qualname":"<CompInfo>::destructor","value":"fn (&self) -> Option<(MethodKind, FunctionId)>","parent":null,"children":[],"decl_id":null,"docs":" Get this type's destructor.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1440},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":464052,"byte_end":464056,"line_start":1153,"line_end":1153,"column_start":12,"column_end":16},"name":"kind","qualname":"<CompInfo>::kind","value":"fn (&self) -> CompKind","parent":null,"children":[],"decl_id":null,"docs":" What kind of compound type is this?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1441},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":464139,"byte_end":464147,"line_start":1158,"line_end":1158,"column_start":12,"column_end":20},"name":"is_union","qualname":"<CompInfo>::is_union","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a union?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1442},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":464276,"byte_end":464288,"line_start":1163,"line_end":1163,"column_start":12,"column_end":24},"name":"base_members","qualname":"<CompInfo>::base_members","value":"fn (&self) -> &[Base]","parent":null,"children":[],"decl_id":null,"docs":" The set of types that this one inherits from.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1443},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":464411,"byte_end":464418,"line_start":1168,"line_end":1168,"column_start":12,"column_end":19},"name":"from_ty","qualname":"<CompInfo>::from_ty","value":"fn (potential_id: ItemId, ty: &clang::Type, location: Option<clang::Cursor>, ctx: &mut BindgenContext) -> Result<Self, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new compound type from a Clang type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1451},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":478596,"byte_end":478607,"line_start":1511,"line_end":1511,"column_start":12,"column_end":23},"name":"inner_types","qualname":"<CompInfo>::inner_types","value":"fn (&self) -> &[TypeId]","parent":null,"children":[],"decl_id":null,"docs":" Get the set of types that were declared within this compound type\n (e.g. nested class definitions).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1452},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":478750,"byte_end":478760,"line_start":1516,"line_end":1516,"column_start":12,"column_end":22},"name":"inner_vars","qualname":"<CompInfo>::inner_vars","value":"fn (&self) -> &[VarId]","parent":null,"children":[],"decl_id":null,"docs":" Get the set of static variables declared within this compound type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1453},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":478948,"byte_end":478966,"line_start":1522,"line_end":1522,"column_start":12,"column_end":30},"name":"found_unknown_attr","qualname":"<CompInfo>::found_unknown_attr","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Have we found a field with an opaque type that could potentially mess up\n the layout of this compound type?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1454},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":479072,"byte_end":479081,"line_start":1527,"line_end":1527,"column_start":12,"column_end":21},"name":"is_packed","qualname":"<CompInfo>::is_packed","value":"fn (&self, ctx: &BindgenContext, layout: &Option<Layout>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this compound type packed?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1457},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":480298,"byte_end":480320,"line_start":1563,"line_end":1563,"column_start":12,"column_end":34},"name":"is_forward_declaration","qualname":"<CompInfo>::is_forward_declaration","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if compound type has been forward declared\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1458},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":480461,"byte_end":480483,"line_start":1568,"line_end":1568,"column_start":12,"column_end":34},"name":"compute_bitfield_units","qualname":"<CompInfo>::compute_bitfield_units","value":"fn (&mut self, ctx: &BindgenContext) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Compute this compound structure's bitfield allocation units.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1459},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":480644,"byte_end":480662,"line_start":1573,"line_end":1573,"column_start":12,"column_end":30},"name":"deanonymize_fields","qualname":"<CompInfo>::deanonymize_fields","value":"fn (&mut self, ctx: &BindgenContext) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Assign for each anonymous field a generated name.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1460},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":480991,"byte_end":481008,"line_start":1582,"line_end":1582,"column_start":12,"column_end":29},"name":"can_be_rust_union","qualname":"<CompInfo>::can_be_rust_union","value":"fn (&self, ctx: &BindgenContext) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the current union can be represented as a Rust `union`","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3472},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":487858,"byte_end":487864,"line_start":38,"line_end":38,"column_start":12,"column_end":18},"name":"ItemId","qualname":"::ir::context::ItemId","value":"","parent":null,"children":[],"decl_id":null,"docs":" An identifier for some kind of IR item.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3508},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":490088,"byte_end":490094,"line_start":116,"line_end":116,"column_start":16,"column_end":22},"name":"TypeId","qualname":"::ir::context::TypeId","value":"","parent":null,"children":[],"decl_id":null,"docs":" An identifier for an `Item` whose `ItemKind` is known to be\n `ItemKind::Type`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3505},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":490252,"byte_end":490262,"line_start":120,"line_end":120,"column_start":19,"column_end":29},"name":"as_type_id","qualname":"<ItemId>::as_type_id","value":"fn (&self, ctx: &BindgenContext) -> Option<TypeId>","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `TypeId` if its associated item is a type,\n otherwise return `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3506},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":490427,"byte_end":490441,"line_start":125,"line_end":125,"column_start":20,"column_end":34},"name":"expect_type_id","qualname":"<ItemId>::expect_type_id","value":"fn (&self, ctx: &BindgenContext) -> TypeId","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `TypeId`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3507},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":490597,"byte_end":490617,"line_start":129,"line_end":129,"column_start":21,"column_end":41},"name":"as_type_id_unchecked","qualname":"<ItemId>::as_type_id_unchecked","value":"fn (&self) -> TypeId","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `TypeId` without actually checking whether\n this id actually points to a `Type`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3544},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":490752,"byte_end":490760,"line_start":135,"line_end":135,"column_start":16,"column_end":24},"name":"ModuleId","qualname":"::ir::context::ModuleId","value":"","parent":null,"children":[],"decl_id":null,"docs":" An identifier for an `Item` whose `ItemKind` is known to be\n `ItemKind::Module`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3541},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":490922,"byte_end":490934,"line_start":139,"line_end":139,"column_start":19,"column_end":31},"name":"as_module_id","qualname":"<ItemId>::as_module_id","value":"fn (&self, ctx: &BindgenContext) -> Option<ModuleId>","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `ModuleId` if its associated item is a\n module, otherwise return `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3542},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":491105,"byte_end":491121,"line_start":144,"line_end":144,"column_start":20,"column_end":36},"name":"expect_module_id","qualname":"<ItemId>::expect_module_id","value":"fn (&self, ctx: &BindgenContext) -> ModuleId","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `ModuleId`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3543},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":491281,"byte_end":491303,"line_start":148,"line_end":148,"column_start":21,"column_end":43},"name":"as_module_id_unchecked","qualname":"<ItemId>::as_module_id_unchecked","value":"fn (&self) -> ModuleId","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `ModuleId` without actually checking\n whether this id actually points to a `Module`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3580},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":491435,"byte_end":491440,"line_start":154,"line_end":154,"column_start":16,"column_end":21},"name":"VarId","qualname":"::ir::context::VarId","value":"","parent":null,"children":[],"decl_id":null,"docs":" An identifier for an `Item` whose `ItemKind` is known to be\n `ItemKind::Var`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3577},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":491596,"byte_end":491605,"line_start":158,"line_end":158,"column_start":19,"column_end":28},"name":"as_var_id","qualname":"<ItemId>::as_var_id","value":"fn (&self, ctx: &BindgenContext) -> Option<VarId>","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `VarId` if its associated item is a var,\n otherwise return `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3578},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":491767,"byte_end":491780,"line_start":163,"line_end":163,"column_start":20,"column_end":33},"name":"expect_var_id","qualname":"<ItemId>::expect_var_id","value":"fn (&self, ctx: &BindgenContext) -> VarId","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `VarId`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3579},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":491934,"byte_end":491953,"line_start":167,"line_end":167,"column_start":21,"column_end":40},"name":"as_var_id_unchecked","qualname":"<ItemId>::as_var_id_unchecked","value":"fn (&self) -> VarId","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `VarId` without actually checking whether\n this id actually points to a `Var`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3616},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":492090,"byte_end":492100,"line_start":173,"line_end":173,"column_start":16,"column_end":26},"name":"FunctionId","qualname":"::ir::context::FunctionId","value":"","parent":null,"children":[],"decl_id":null,"docs":" An identifier for an `Item` whose `ItemKind` is known to be\n `ItemKind::Function`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3613},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":492266,"byte_end":492280,"line_start":177,"line_end":177,"column_start":19,"column_end":33},"name":"as_function_id","qualname":"<ItemId>::as_function_id","value":"fn (&self, ctx: &BindgenContext) -> Option<FunctionId>","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `FunctionId` if its associated item is a function,\n otherwise return `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3614},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":492457,"byte_end":492475,"line_start":182,"line_end":182,"column_start":20,"column_end":38},"name":"expect_function_id","qualname":"<ItemId>::expect_function_id","value":"fn (&self, ctx: &BindgenContext) -> FunctionId","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `FunctionId`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3615},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":492639,"byte_end":492663,"line_start":186,"line_end":186,"column_start":21,"column_end":45},"name":"as_function_id_unchecked","qualname":"<ItemId>::as_function_id_unchecked","value":"fn (&self) -> FunctionId","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `FunctionId` without actually checking whether\n this id actually points to a `Function`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1548},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":492829,"byte_end":492837,"line_start":197,"line_end":197,"column_start":12,"column_end":20},"name":"as_usize","qualname":"<ItemId>::as_usize","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get a numeric representation of this id.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3657},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":495618,"byte_end":495632,"line_start":308,"line_end":308,"column_start":12,"column_end":26},"name":"BindgenContext","qualname":"::ir::context::BindgenContext","value":"BindgenContext {  }","parent":null,"children":[{"krate":0,"index":3658},{"krate":0,"index":3659},{"krate":0,"index":3660},{"krate":0,"index":3661},{"krate":0,"index":3662},{"krate":0,"index":3663},{"krate":0,"index":3664},{"krate":0,"index":3665},{"krate":0,"index":3666},{"krate":0,"index":3667},{"krate":0,"index":3668},{"krate":0,"index":3669},{"krate":0,"index":3670},{"krate":0,"index":3671},{"krate":0,"index":3672},{"krate":0,"index":3673},{"krate":0,"index":3674},{"krate":0,"index":3675},{"krate":0,"index":3676},{"krate":0,"index":3677},{"krate":0,"index":3678},{"krate":0,"index":3679},{"krate":0,"index":3680},{"krate":0,"index":3681},{"krate":0,"index":3682},{"krate":0,"index":3683},{"krate":0,"index":3684},{"krate":0,"index":3685},{"krate":0,"index":3686},{"krate":0,"index":3687},{"krate":0,"index":3688},{"krate":0,"index":3689}],"decl_id":null,"docs":" A context used during parsing and generation of structs.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1595},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":507412,"byte_end":507417,"line_start":638,"line_end":638,"column_start":12,"column_end":17},"name":"timer","qualname":"<BindgenContext>::timer","value":"fn <'a> (&self, name: &'a str) -> Timer<'a>","parent":null,"children":[],"decl_id":null,"docs":" Creates a timer for the current bindgen phase. If time_phases is `true`,\n the timer will print to stderr when it is dropped, otherwise it will do\n nothing.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1597},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":507633,"byte_end":507652,"line_start":644,"line_end":644,"column_start":12,"column_end":31},"name":"target_pointer_size","qualname":"<BindgenContext>::target_pointer_size","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the pointer width to use for the target for the current\n translation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1598},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":507917,"byte_end":507939,"line_start":653,"line_end":653,"column_start":12,"column_end":34},"name":"currently_parsed_types","qualname":"<BindgenContext>::currently_parsed_types","value":"fn (&self) -> &[PartialType]","parent":null,"children":[],"decl_id":null,"docs":" Get the stack of partially parsed types that we are in the middle of\n parsing.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1599},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":508225,"byte_end":508238,"line_start":660,"line_end":660,"column_start":12,"column_end":25},"name":"begin_parsing","qualname":"<BindgenContext>::begin_parsing","value":"fn (&mut self, partial_ty: PartialType) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Begin parsing the given partial type, and push it onto the\n `currently_parsed_types` stack so that we won't infinite recurse if we\n run into a reference to it while parsing it.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1600},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":508468,"byte_end":508482,"line_start":666,"line_end":666,"column_start":12,"column_end":26},"name":"finish_parsing","qualname":"<BindgenContext>::finish_parsing","value":"fn (&mut self) -> PartialType","parent":null,"children":[],"decl_id":null,"docs":" Finish parsing the current partial type, pop it off the\n `currently_parsed_types` stack, and return it.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1601},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":508729,"byte_end":508744,"line_start":673,"line_end":673,"column_start":12,"column_end":27},"name":"parse_callbacks","qualname":"<BindgenContext>::parse_callbacks","value":"fn (&self) -> Option<&dyn ParseCallbacks>","parent":null,"children":[],"decl_id":null,"docs":" Get the user-provided callbacks by reference, if any.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1603},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":509003,"byte_end":509011,"line_start":681,"line_end":681,"column_start":12,"column_end":20},"name":"add_item","qualname":"<BindgenContext>::add_item","value":"fn (&mut self, item: Item, declaration: Option<Cursor>, location: Option<Cursor>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Define a new item.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1605},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":513542,"byte_end":513556,"line_start":804,"line_end":804,"column_start":12,"column_end":26},"name":"add_type_param","qualname":"<BindgenContext>::add_type_param","value":"fn (&mut self, item: Item, definition: clang::Cursor) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Add a new named template type parameter to this context's item set.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1606},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":514673,"byte_end":514687,"line_start":839,"line_end":839,"column_start":12,"column_end":26},"name":"get_type_param","qualname":"<BindgenContext>::get_type_param","value":"fn (&self, definition: &clang::Cursor) -> Option<TypeId>","parent":null,"children":[],"decl_id":null,"docs":" Get the named type defined at the given cursor location, if we've\n already added one.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1607},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":515058,"byte_end":515069,"line_start":850,"line_end":850,"column_start":12,"column_end":23},"name":"rust_mangle","qualname":"<BindgenContext>::rust_mangle","value":"fn <'a> (&self, name: &'a str) -> Cow<'a, str>","parent":null,"children":[],"decl_id":null,"docs":" Mangles a name so it doesn't conflict with any keyword.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1609},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":516311,"byte_end":516321,"line_start":879,"line_end":879,"column_start":12,"column_end":22},"name":"rust_ident","qualname":"<BindgenContext>::rust_ident","value":"fn <S> (&self, name: S) -> Ident","parent":null,"children":[],"decl_id":null,"docs":" Returns a mangled name as a rust identifier.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1611},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":516521,"byte_end":516535,"line_start":887,"line_end":887,"column_start":12,"column_end":26},"name":"rust_ident_raw","qualname":"<BindgenContext>::rust_ident_raw","value":"fn <T> (&self, name: T) -> Ident","parent":null,"children":[],"decl_id":null,"docs":" Returns a mangled name as a rust identifier.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1613},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":516729,"byte_end":516734,"line_start":895,"line_end":895,"column_start":12,"column_end":17},"name":"items","qualname":"<BindgenContext>::items","value":"fn (&self) -> impl Iterator<Item = (ItemId, &Item)>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over all items that have been defined.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1616},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":517022,"byte_end":517040,"line_start":903,"line_end":903,"column_start":12,"column_end":30},"name":"collected_typerefs","qualname":"<BindgenContext>::collected_typerefs","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Have we collected all unresolved type references yet?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1640},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":530583,"byte_end":530599,"line_start":1280,"line_end":1280,"column_start":12,"column_end":28},"name":"lookup_sizedness","qualname":"<BindgenContext>::lookup_sizedness","value":"fn (&self, id: TypeId) -> SizednessResult","parent":null,"children":[],"decl_id":null,"docs":" Look up whether the type with the given id is sized or not.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1642},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":531272,"byte_end":531289,"line_start":1302,"line_end":1302,"column_start":12,"column_end":29},"name":"lookup_has_vtable","qualname":"<BindgenContext>::lookup_has_vtable","value":"fn (&self, id: TypeId) -> HasVtableResult","parent":null,"children":[],"decl_id":null,"docs":" Look up whether the item with `id` has vtable or not.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1644},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":532082,"byte_end":532103,"line_start":1326,"line_end":1326,"column_start":12,"column_end":33},"name":"lookup_has_destructor","qualname":"<BindgenContext>::lookup_has_destructor","value":"fn (&self, id: TypeId) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Look up whether the item with `id` has a destructor.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1647},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":534065,"byte_end":534088,"line_start":1370,"line_end":1370,"column_start":12,"column_end":35},"name":"uses_template_parameter","qualname":"<BindgenContext>::uses_template_parameter","value":"fn (&self, item: ItemId, template_param: TypeId) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if `item` uses the given `template_param`, `false`\n otherwise.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1649},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":535063,"byte_end":535091,"line_start":1402,"line_end":1402,"column_start":12,"column_end":40},"name":"uses_any_template_parameters","qualname":"<BindgenContext>::uses_any_template_parameters","value":"fn (&self, item: ItemId) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if `item` uses any unbound, generic template parameters,\n `false` otherwise.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1653},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":536518,"byte_end":536529,"line_start":1440,"line_end":1440,"column_start":12,"column_end":23},"name":"root_module","qualname":"<BindgenContext>::root_module","value":"fn (&self) -> ModuleId","parent":null,"children":[],"decl_id":null,"docs":" Get the root module.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1654},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":536751,"byte_end":536763,"line_start":1448,"line_end":1448,"column_start":12,"column_end":24},"name":"resolve_type","qualname":"<BindgenContext>::resolve_type","value":"fn (&self, type_id: TypeId) -> &Type","parent":null,"children":[],"decl_id":null,"docs":" Resolve a type with the given id.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1655},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":537042,"byte_end":537054,"line_start":1456,"line_end":1456,"column_start":12,"column_end":24},"name":"resolve_func","qualname":"<BindgenContext>::resolve_func","value":"fn (&self, func_id: FunctionId) -> &Function","parent":null,"children":[],"decl_id":null,"docs":" Resolve a function with the given id.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1656},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":537352,"byte_end":537369,"line_start":1464,"line_end":1464,"column_start":12,"column_end":29},"name":"safe_resolve_type","qualname":"<BindgenContext>::safe_resolve_type","value":"fn (&self, type_id: TypeId) -> Option<&Type>","parent":null,"children":[],"decl_id":null,"docs":" Resolve the given `ItemId` as a type, or `None` if there is no item with\n the given id.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1658},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":537613,"byte_end":537634,"line_start":1471,"line_end":1471,"column_start":12,"column_end":33},"name":"resolve_item_fallible","qualname":"<BindgenContext>::resolve_item_fallible","value":"fn <Id> (&self, id: Id) -> Option<&Item>","parent":null,"children":[],"decl_id":null,"docs":" Resolve the given `ItemId` into an `Item`, or `None` if no such item\n exists.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1660},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":537894,"byte_end":537906,"line_start":1481,"line_end":1481,"column_start":12,"column_end":24},"name":"resolve_item","qualname":"<BindgenContext>::resolve_item","value":"fn <Id> (&self, item_id: Id) -> &Item","parent":null,"children":[],"decl_id":null,"docs":" Resolve the given `ItemId` into an `Item`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1662},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":538196,"byte_end":538210,"line_start":1490,"line_end":1490,"column_start":12,"column_end":26},"name":"current_module","qualname":"<BindgenContext>::current_module","value":"fn (&self) -> ModuleId","parent":null,"children":[],"decl_id":null,"docs":" Get the current module.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1663},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":538646,"byte_end":538665,"line_start":1502,"line_end":1502,"column_start":12,"column_end":31},"name":"add_semantic_parent","qualname":"<BindgenContext>::add_semantic_parent","value":"fn (&mut self, definition: clang::Cursor, parent_id: ItemId) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Add a semantic parent for a given type definition.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1664},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":538899,"byte_end":538920,"line_start":1511,"line_end":1511,"column_start":12,"column_end":33},"name":"known_semantic_parent","qualname":"<BindgenContext>::known_semantic_parent","value":"fn (&self, definition: clang::Cursor) -> Option<ItemId>","parent":null,"children":[],"decl_id":null,"docs":" Returns a known semantic parent for a given definition.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1676},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":551853,"byte_end":551870,"line_start":1822,"line_end":1822,"column_start":12,"column_end":29},"name":"get_resolved_type","qualname":"<BindgenContext>::get_resolved_type","value":"fn (&self, decl: &clang::CanonicalTypeDeclaration) -> Option<TypeId>","parent":null,"children":[],"decl_id":null,"docs":" If we have already resolved the type for the given type declaration,\n return its `ItemId`. Otherwise, return `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1679},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":552372,"byte_end":552394,"line_start":1838,"line_end":1838,"column_start":12,"column_end":34},"name":"builtin_or_resolved_ty","qualname":"<BindgenContext>::builtin_or_resolved_ty","value":"fn (&mut self, with_id: ItemId, parent_id: Option<ItemId>, ty: &clang::Type, location: Option<clang::Cursor>) -> Option<TypeId>","parent":null,"children":[],"decl_id":null,"docs":" Looks up for an already resolved type, either because it's builtin, or\n because we already have it in the map.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1684},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":555302,"byte_end":555318,"line_start":1908,"line_end":1908,"column_start":12,"column_end":28},"name":"build_ty_wrapper","qualname":"<BindgenContext>::build_ty_wrapper","value":"fn (&mut self, with_id: ItemId, wrapped_id: TypeId, parent_id: Option<ItemId>, ty: &clang::Type) -> TypeId","parent":null,"children":[],"decl_id":null,"docs":" Make a new item that is a resolved type reference to the `wrapped_id`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1685},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":555712,"byte_end":555731,"line_start":1921,"line_end":1921,"column_start":12,"column_end":31},"name":"build_const_wrapper","qualname":"<BindgenContext>::build_const_wrapper","value":"fn (&mut self, with_id: ItemId, wrapped_id: TypeId, parent_id: Option<ItemId>, ty: &clang::Type) -> TypeId","parent":null,"children":[],"decl_id":null,"docs":" A wrapper over a type that adds a const qualifier explicitly.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1687},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":556765,"byte_end":556777,"line_start":1957,"line_end":1957,"column_start":12,"column_end":24},"name":"next_item_id","qualname":"<BindgenContext>::next_item_id","value":"fn (&mut self) -> ItemId","parent":null,"children":[],"decl_id":null,"docs":" Returns the next item id to be used for an item.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1690},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":559794,"byte_end":559810,"line_start":2025,"line_end":2025,"column_start":12,"column_end":28},"name":"translation_unit","qualname":"<BindgenContext>::translation_unit","value":"fn (&self) -> &clang::TranslationUnit","parent":null,"children":[],"decl_id":null,"docs":" Get the current Clang translation unit that is being processed.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1691},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":559957,"byte_end":559969,"line_start":2030,"line_end":2030,"column_start":12,"column_end":24},"name":"parsed_macro","qualname":"<BindgenContext>::parsed_macro","value":"fn (&self, macro_name: &[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Have we parsed the macro named `macro_name` already?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1692},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":560117,"byte_end":560130,"line_start":2035,"line_end":2035,"column_start":12,"column_end":25},"name":"parsed_macros","qualname":"<BindgenContext>::parsed_macros","value":"fn (&self) -> &StdHashMap<Vec<u8>, cexpr::expr::EvalResult>","parent":null,"children":[],"decl_id":null,"docs":" Get the currently parsed macros.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1693},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":560352,"byte_end":560369,"line_start":2043,"line_end":2043,"column_start":12,"column_end":29},"name":"note_parsed_macro","qualname":"<BindgenContext>::note_parsed_macro","value":"fn (&mut self, id: Vec<u8>, value: cexpr::expr::EvalResult) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Mark the macro named `macro_name` as parsed.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1694},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":560560,"byte_end":560576,"line_start":2052,"line_end":2052,"column_start":12,"column_end":28},"name":"in_codegen_phase","qualname":"<BindgenContext>::in_codegen_phase","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Are we in the codegen phase?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1695},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":560876,"byte_end":560883,"line_start":2061,"line_end":2061,"column_start":12,"column_end":19},"name":"replace","qualname":"<BindgenContext>::replace","value":"fn (&mut self, name: &[String], potential_ty: ItemId) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Mark the type with the given `name` as replaced by the type with id\n `potential_ty`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1696},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":561683,"byte_end":561699,"line_start":2084,"line_end":2084,"column_start":12,"column_end":28},"name":"is_replaced_type","qualname":"<BindgenContext>::is_replaced_type","value":"fn <Id> (&self, path: &[String], id: Id) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Has the item with the given `name` and `id` been replaced by another\n type?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1698},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":562036,"byte_end":562050,"line_start":2097,"line_end":2097,"column_start":12,"column_end":26},"name":"opaque_by_name","qualname":"<BindgenContext>::opaque_by_name","value":"fn (&self, path: &[String]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the type with the given `name` marked as opaque?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1701},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":564867,"byte_end":564873,"line_start":2177,"line_end":2177,"column_start":12,"column_end":18},"name":"module","qualname":"<BindgenContext>::module","value":"fn (&mut self, cursor: clang::Cursor) -> ModuleId","parent":null,"children":[],"decl_id":null,"docs":" Given a CXCursor_Namespace cursor, return the item id of the\n corresponding module, or create one on the fly.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1703},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":565841,"byte_end":565852,"line_start":2207,"line_end":2207,"column_start":12,"column_end":23},"name":"with_module","qualname":"<BindgenContext>::with_module","value":"fn <F> (&mut self, module_id: ModuleId, cb: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Start traversing the module with the given `module_id`, invoke the\n callback `cb`, and then return to traversing the original module.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1705},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":566370,"byte_end":566387,"line_start":2225,"line_end":2225,"column_start":12,"column_end":29},"name":"whitelisted_items","qualname":"<BindgenContext>::whitelisted_items","value":"fn (&self) -> &ItemSet","parent":null,"children":[],"decl_id":null,"docs":" Iterate over all (explicitly or transitively) whitelisted items.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1706},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":566635,"byte_end":566648,"line_start":2233,"line_end":2233,"column_start":12,"column_end":25},"name":"codegen_items","qualname":"<BindgenContext>::codegen_items","value":"fn (&self) -> &ItemSet","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the set of items we should generate.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1712},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":573603,"byte_end":573615,"line_start":2391,"line_end":2391,"column_start":12,"column_end":24},"name":"trait_prefix","qualname":"<BindgenContext>::trait_prefix","value":"fn (&self) -> Ident","parent":null,"children":[],"decl_id":null,"docs":" Convenient method for getting the prefix to use for most traits in\n codegen depending on the `use_core` option.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1713},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":573842,"byte_end":573867,"line_start":2400,"line_end":2400,"column_start":12,"column_end":37},"name":"generated_bindgen_complex","qualname":"<BindgenContext>::generated_bindgen_complex","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Call if a bindgen complex is generated\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1714},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":574005,"byte_end":574030,"line_start":2405,"line_end":2405,"column_start":12,"column_end":37},"name":"need_bindgen_complex_type","qualname":"<BindgenContext>::need_bindgen_complex_type","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether we need to generate the bindgen complex type\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1716},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":574644,"byte_end":574667,"line_start":2424,"line_end":2424,"column_start":12,"column_end":35},"name":"lookup_can_derive_debug","qualname":"<BindgenContext>::lookup_can_derive_debug","value":"fn <Id> (&self, id: Id) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Look up whether the item with `id` can\n derive debug or not.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1719},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":575612,"byte_end":575637,"line_start":2451,"line_end":2451,"column_start":12,"column_end":37},"name":"lookup_can_derive_default","qualname":"<BindgenContext>::lookup_can_derive_default","value":"fn <Id> (&self, id: Id) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Look up whether the item with `id` can\n derive default or not.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1723},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":576946,"byte_end":576968,"line_start":2489,"line_end":2489,"column_start":12,"column_end":34},"name":"lookup_can_derive_hash","qualname":"<BindgenContext>::lookup_can_derive_hash","value":"fn <Id> (&self, id: Id) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Look up whether the item with `id` can\n derive hash or not.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1726},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":578082,"byte_end":578123,"line_start":2518,"line_end":2518,"column_start":12,"column_end":53},"name":"lookup_can_derive_partialeq_or_partialord","qualname":"<BindgenContext>::lookup_can_derive_partialeq_or_partialord","value":"fn <Id> (&self, id: Id) -> CanDerive","parent":null,"children":[],"decl_id":null,"docs":" Look up whether the item with `id` can derive `Partial{Eq,Ord}`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1728},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":578750,"byte_end":578772,"line_start":2539,"line_end":2539,"column_start":12,"column_end":34},"name":"lookup_can_derive_copy","qualname":"<BindgenContext>::lookup_can_derive_copy","value":"fn <Id> (&self, id: Id) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Look up whether the item with `id` can derive `Copy` or not.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1731},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":579645,"byte_end":579675,"line_start":2562,"line_end":2562,"column_start":12,"column_end":42},"name":"lookup_has_type_param_in_array","qualname":"<BindgenContext>::lookup_has_type_param_in_array","value":"fn <Id> (&self, id: Id) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Look up whether the item with `id` has type parameter in array or not.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1734},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":580497,"byte_end":580513,"line_start":2589,"line_end":2589,"column_start":12,"column_end":28},"name":"lookup_has_float","qualname":"<BindgenContext>::lookup_has_float","value":"fn <Id> (&self, id: Id) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Look up whether the item with `id` has array or not.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1736},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":580928,"byte_end":580948,"line_start":2601,"line_end":2601,"column_start":12,"column_end":32},"name":"no_partialeq_by_name","qualname":"<BindgenContext>::no_partialeq_by_name","value":"fn (&self, item: &Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if `--no-partialeq` flag is enabled for this item.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1737},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":581183,"byte_end":581198,"line_start":2607,"line_end":2607,"column_start":12,"column_end":27},"name":"no_copy_by_name","qualname":"<BindgenContext>::no_copy_by_name","value":"fn (&self, item: &Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if `--no-copy` flag is enabled for this item.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1738},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":581428,"byte_end":581443,"line_start":2613,"line_end":2613,"column_start":12,"column_end":27},"name":"no_hash_by_name","qualname":"<BindgenContext>::no_hash_by_name","value":"fn (&self, item: &Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if `--no-hash` flag is enabled for this item.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3694},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":581707,"byte_end":581719,"line_start":2621,"line_end":2621,"column_start":12,"column_end":24},"name":"ItemResolver","qualname":"::ir::context::ItemResolver","value":"ItemResolver {  }","parent":null,"children":[{"krate":0,"index":3695},{"krate":0,"index":3696},{"krate":0,"index":3697}],"decl_id":null,"docs":" A builder struct for configuring item resolution options.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1740},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":581879,"byte_end":581892,"line_start":2629,"line_end":2629,"column_start":12,"column_end":25},"name":"into_resolver","qualname":"<ItemId>::into_resolver","value":"fn (self) -> ItemResolver","parent":null,"children":[],"decl_id":null,"docs":" Create an `ItemResolver` from this item id.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1745},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":582173,"byte_end":582176,"line_start":2645,"line_end":2645,"column_start":12,"column_end":15},"name":"new","qualname":"<ItemResolver>::new","value":"fn <Id> (id: Id) -> ItemResolver","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `ItemResolver` from the given id.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1747},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":582453,"byte_end":582470,"line_start":2655,"line_end":2655,"column_start":12,"column_end":29},"name":"through_type_refs","qualname":"<ItemResolver>::through_type_refs","value":"fn (mut self) -> ItemResolver","parent":null,"children":[],"decl_id":null,"docs":" Keep resolving through `Type::TypeRef` items.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1748},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":582621,"byte_end":582641,"line_start":2661,"line_end":2661,"column_start":12,"column_end":32},"name":"through_type_aliases","qualname":"<ItemResolver>::through_type_aliases","value":"fn (mut self) -> ItemResolver","parent":null,"children":[],"decl_id":null,"docs":" Keep resolving through `Type::Alias` items.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1749},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":582810,"byte_end":582817,"line_start":2667,"line_end":2667,"column_start":12,"column_end":19},"name":"resolve","qualname":"<ItemResolver>::resolve","value":"fn (self, ctx: &BindgenContext) -> &Item","parent":null,"children":[],"decl_id":null,"docs":" Finish configuring and perform the actual item resolution.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3703},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":583798,"byte_end":583809,"line_start":2696,"line_end":2696,"column_start":12,"column_end":23},"name":"PartialType","qualname":"::ir::context::PartialType","value":"PartialType {  }","parent":null,"children":[{"krate":0,"index":3704},{"krate":0,"index":3705}],"decl_id":null,"docs":" A type that we are in the middle of parsing.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1752},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":584055,"byte_end":584058,"line_start":2705,"line_end":2705,"column_start":12,"column_end":15},"name":"new","qualname":"<PartialType>::new","value":"fn (decl: Cursor, id: ItemId) -> PartialType","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `PartialType`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1753},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":584282,"byte_end":584286,"line_start":2711,"line_end":2711,"column_start":12,"column_end":16},"name":"decl","qualname":"<PartialType>::decl","value":"fn (&self) -> &Cursor","parent":null,"children":[],"decl_id":null,"docs":" The cursor pointing to this partial type's declaration location.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1754},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":584461,"byte_end":584463,"line_start":2717,"line_end":2717,"column_start":12,"column_end":14},"name":"id","qualname":"<PartialType>::id","value":"fn (&self) -> ItemId","parent":null,"children":[],"decl_id":null,"docs":" The item ID allocated for this type. This is *NOT* a key for an entry in\n the context's item set yet!\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3719},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/derive.rs","byte_start":589067,"byte_end":589070,"line_start":98,"line_end":98,"column_start":5,"column_end":8},"name":"Yes","qualname":"::ir::derive::CanDerive::Yes","value":"CanDerive::Yes","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Yes, we can derive automatically.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3721},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/derive.rs","byte_start":589291,"byte_end":589299,"line_start":104,"line_end":104,"column_start":5,"column_end":13},"name":"Manually","qualname":"::ir::derive::CanDerive::Manually","value":"CanDerive::Manually","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" The only thing that stops us from automatically deriving is that\n array with more than maximum number of elements is used.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3723},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/derive.rs","byte_start":589329,"byte_end":589331,"line_start":107,"line_end":107,"column_start":5,"column_end":7},"name":"No","qualname":"::ir::derive::CanDerive::No","value":"CanDerive::No","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" No, we cannot.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3718},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/derive.rs","byte_start":589009,"byte_end":589018,"line_start":96,"line_end":96,"column_start":10,"column_end":19},"name":"CanDerive","qualname":"::ir::derive::CanDerive","value":"CanDerive::{Yes, Manually, No}","parent":null,"children":[{"krate":0,"index":3719},{"krate":0,"index":3721},{"krate":0,"index":3723}],"decl_id":null,"docs":" Whether it is possible or not to automatically derive trait for an item.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1782},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/derive.rs","byte_start":589513,"byte_end":589517,"line_start":118,"line_end":118,"column_start":12,"column_end":16},"name":"join","qualname":"<CanDerive>::join","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Take the least upper bound of `self` and `rhs`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3741},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/enum_ty.rs","byte_start":592886,"byte_end":592900,"line_start":17,"line_end":17,"column_start":5,"column_end":19},"name":"ModuleConstify","qualname":"::ir::enum_ty::EnumVariantCustomBehavior::ModuleConstify","value":"EnumVariantCustomBehavior::ModuleConstify","parent":{"krate":0,"index":3740},"children":[],"decl_id":null,"docs":" This variant will be a module containing constants.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3743},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/enum_ty.rs","byte_start":592987,"byte_end":592995,"line_start":19,"line_end":19,"column_start":5,"column_end":13},"name":"Constify","qualname":"::ir::enum_ty::EnumVariantCustomBehavior::Constify","value":"EnumVariantCustomBehavior::Constify","parent":{"krate":0,"index":3740},"children":[],"decl_id":null,"docs":" This variant will be constified, that is, forced to generate a constant.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3745},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/enum_ty.rs","byte_start":593071,"byte_end":593075,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Hide","qualname":"::ir::enum_ty::EnumVariantCustomBehavior::Hide","value":"EnumVariantCustomBehavior::Hide","parent":{"krate":0,"index":3740},"children":[],"decl_id":null,"docs":" This variant will be hidden entirely from the resulting enum.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3740},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/enum_ty.rs","byte_start":592794,"byte_end":592819,"line_start":15,"line_end":15,"column_start":10,"column_end":35},"name":"EnumVariantCustomBehavior","qualname":"::ir::enum_ty::EnumVariantCustomBehavior","value":"EnumVariantCustomBehavior::{ModuleConstify, Constify, Hide}","parent":null,"children":[{"krate":0,"index":3741},{"krate":0,"index":3743},{"krate":0,"index":3745}],"decl_id":null,"docs":" An enum representing custom handling that can be given to a variant.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3758},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/enum_ty.rs","byte_start":593133,"byte_end":593137,"line_start":26,"line_end":26,"column_start":12,"column_end":16},"name":"Enum","qualname":"::ir::enum_ty::Enum","value":"Enum {  }","parent":null,"children":[{"krate":0,"index":3759},{"krate":0,"index":3760}],"decl_id":null,"docs":" A C/C++ enumeration.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1819},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/enum_ty.rs","byte_start":593608,"byte_end":593611,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<Enum>::new","value":"fn (repr: Option<TypeId>, variants: Vec<EnumVariant>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Enum` with the given representation and variants.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1820},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/enum_ty.rs","byte_start":593769,"byte_end":593773,"line_start":45,"line_end":45,"column_start":12,"column_end":16},"name":"repr","qualname":"<Enum>::repr","value":"fn (&self) -> Option<TypeId>","parent":null,"children":[],"decl_id":null,"docs":" Get this enumeration's representation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1821},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/enum_ty.rs","byte_start":593878,"byte_end":593886,"line_start":50,"line_end":50,"column_start":12,"column_end":20},"name":"variants","qualname":"<Enum>::variants","value":"fn (&self) -> &[EnumVariant]","parent":null,"children":[],"decl_id":null,"docs":" Get this enumeration's variants.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1822},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/enum_ty.rs","byte_start":594015,"byte_end":594022,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"from_ty","qualname":"<Enum>::from_ty","value":"fn (ty: &clang::Type, ctx: &mut BindgenContext) -> Result<Self, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Construct an enumeration from the given Clang type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1834},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/enum_ty.rs","byte_start":598062,"byte_end":598085,"line_start":168,"line_end":168,"column_start":12,"column_end":35},"name":"computed_enum_variation","qualname":"<Enum>::computed_enum_variation","value":"fn (&self, ctx: &BindgenContext, item: &Item) -> EnumVariation","parent":null,"children":[],"decl_id":null,"docs":" Returns the final representation of the enum.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3763},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/enum_ty.rs","byte_start":599435,"byte_end":599446,"line_start":217,"line_end":217,"column_start":12,"column_end":23},"name":"EnumVariant","qualname":"::ir::enum_ty::EnumVariant","value":"EnumVariant {  }","parent":null,"children":[{"krate":0,"index":3764},{"krate":0,"index":3765},{"krate":0,"index":3766},{"krate":0,"index":3767}],"decl_id":null,"docs":" A single enum variant, to be contained only in an enum.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3771},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/enum_ty.rs","byte_start":599936,"byte_end":599942,"line_start":235,"line_end":235,"column_start":5,"column_end":11},"name":"Signed","qualname":"::ir::enum_ty::EnumVariantValue::Signed","value":"EnumVariantValue::Signed(i64)","parent":{"krate":0,"index":3770},"children":[],"decl_id":null,"docs":" A signed constant.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3774},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/enum_ty.rs","byte_start":599984,"byte_end":599992,"line_start":238,"line_end":238,"column_start":5,"column_end":13},"name":"Unsigned","qualname":"::ir::enum_ty::EnumVariantValue::Unsigned","value":"EnumVariantValue::Unsigned(u64)","parent":{"krate":0,"index":3770},"children":[],"decl_id":null,"docs":" An unsigned constant.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3770},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/enum_ty.rs","byte_start":599886,"byte_end":599902,"line_start":233,"line_end":233,"column_start":10,"column_end":26},"name":"EnumVariantValue","qualname":"::ir::enum_ty::EnumVariantValue","value":"EnumVariantValue::{Signed, Unsigned}","parent":null,"children":[{"krate":0,"index":3771},{"krate":0,"index":3774}],"decl_id":null,"docs":" A constant value assigned to an enumeration variant.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1836},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/enum_ty.rs","byte_start":600098,"byte_end":600101,"line_start":243,"line_end":243,"column_start":12,"column_end":15},"name":"new","qualname":"<EnumVariant>::new","value":"fn (name: String, comment: Option<String>, val: EnumVariantValue, custom_behavior: Option<EnumVariantCustomBehavior>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new enumeration variant from the given parts.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1837},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/enum_ty.rs","byte_start":600433,"byte_end":600437,"line_start":258,"line_end":258,"column_start":12,"column_end":16},"name":"name","qualname":"<EnumVariant>::name","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Get this variant's name.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1838},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/enum_ty.rs","byte_start":600526,"byte_end":600529,"line_start":263,"line_end":263,"column_start":12,"column_end":15},"name":"val","qualname":"<EnumVariant>::val","value":"fn (&self) -> EnumVariantValue","parent":null,"children":[],"decl_id":null,"docs":" Get this variant's value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1839},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/enum_ty.rs","byte_start":600636,"byte_end":600643,"line_start":268,"line_end":268,"column_start":12,"column_end":19},"name":"comment","qualname":"<EnumVariant>::comment","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get this variant's documentation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1841},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/enum_ty.rs","byte_start":600832,"byte_end":600852,"line_start":274,"line_end":274,"column_start":12,"column_end":32},"name":"force_constification","qualname":"<EnumVariant>::force_constification","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this variant should be enforced to be a constant by code\n generation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1843},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/enum_ty.rs","byte_start":601100,"byte_end":601106,"line_start":281,"line_end":281,"column_start":12,"column_end":18},"name":"hidden","qualname":"<EnumVariant>::hidden","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the current variant should be hidden completely from the\n resulting rust enum.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3801},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":601886,"byte_end":601894,"line_start":23,"line_end":23,"column_start":5,"column_end":13},"name":"Function","qualname":"::ir::function::FunctionKind::Function","value":"FunctionKind::Function","parent":{"krate":0,"index":3800},"children":[],"decl_id":null,"docs":" A plain, free function.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3803},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":601931,"byte_end":601937,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Method","qualname":"::ir::function::FunctionKind::Method","value":"FunctionKind::Method(MethodKind)","parent":{"krate":0,"index":3800},"children":[],"decl_id":null,"docs":" A method of some kind.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3800},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":601835,"byte_end":601847,"line_start":21,"line_end":21,"column_start":10,"column_end":22},"name":"FunctionKind","qualname":"::ir::function::FunctionKind","value":"FunctionKind::{Function, Method}","parent":null,"children":[{"krate":0,"index":3801},{"krate":0,"index":3803}],"decl_id":null,"docs":" What kind of a function are we looking at?\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3816},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":603365,"byte_end":603373,"line_start":65,"line_end":65,"column_start":5,"column_end":13},"name":"External","qualname":"::ir::function::Linkage::External","value":"Linkage::External","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":" Externally visible and can be linked against\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3818},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":603468,"byte_end":603476,"line_start":67,"line_end":67,"column_start":5,"column_end":13},"name":"Internal","qualname":"::ir::function::Linkage::Internal","value":"Linkage::Internal","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":" Not exposed externally. 'static inline' functions will have this kind of linkage\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3815},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":603298,"byte_end":603305,"line_start":63,"line_end":63,"column_start":10,"column_end":17},"name":"Linkage","qualname":"::ir::function::Linkage","value":"Linkage::{External, Internal}","parent":null,"children":[{"krate":0,"index":3816},{"krate":0,"index":3818}],"decl_id":null,"docs":" The style of linkage\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3825},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":603678,"byte_end":603686,"line_start":75,"line_end":75,"column_start":12,"column_end":20},"name":"Function","qualname":"::ir::function::Function","value":"Function {  }","parent":null,"children":[{"krate":0,"index":3826},{"krate":0,"index":3827},{"krate":0,"index":3828},{"krate":0,"index":3829},{"krate":0,"index":3830},{"krate":0,"index":3831}],"decl_id":null,"docs":" A function declaration, with a signature, arguments, and argument names.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1874},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":604173,"byte_end":604176,"line_start":97,"line_end":97,"column_start":12,"column_end":15},"name":"new","qualname":"<Function>::new","value":"fn (name: String, mangled_name: Option<String>, signature: TypeId, comment: Option<String>, kind: FunctionKind, linkage: Linkage) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new function.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1875},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":604576,"byte_end":604580,"line_start":116,"line_end":116,"column_start":12,"column_end":16},"name":"name","qualname":"<Function>::name","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Get this function's name.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1876},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":604669,"byte_end":604681,"line_start":121,"line_end":121,"column_start":12,"column_end":24},"name":"mangled_name","qualname":"<Function>::mangled_name","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get this function's name.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1878},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":604818,"byte_end":604827,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"signature","qualname":"<Function>::signature","value":"fn (&self) -> TypeId","parent":null,"children":[],"decl_id":null,"docs":" Get this function's signature type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1879},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":604922,"byte_end":604926,"line_start":131,"line_end":131,"column_start":12,"column_end":16},"name":"kind","qualname":"<Function>::kind","value":"fn (&self) -> FunctionKind","parent":null,"children":[],"decl_id":null,"docs":" Get this function's kind.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1880},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":605025,"byte_end":605032,"line_start":136,"line_end":136,"column_start":12,"column_end":19},"name":"linkage","qualname":"<Function>::linkage","value":"fn (&self) -> Linkage","parent":null,"children":[],"decl_id":null,"docs":" Get this function's linkage.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3835},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":605734,"byte_end":605735,"line_start":168,"line_end":168,"column_start":5,"column_end":6},"name":"C","qualname":"::ir::function::Abi::C","value":"Abi::C","parent":{"krate":0,"index":3834},"children":[],"decl_id":null,"docs":" The default C ABI.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3837},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":605768,"byte_end":605775,"line_start":170,"line_end":170,"column_start":5,"column_end":12},"name":"Stdcall","qualname":"::ir::function::Abi::Stdcall","value":"Abi::Stdcall","parent":{"krate":0,"index":3834},"children":[],"decl_id":null,"docs":" The \"stdcall\" ABI.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3839},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":605809,"byte_end":605817,"line_start":172,"line_end":172,"column_start":5,"column_end":13},"name":"Fastcall","qualname":"::ir::function::Abi::Fastcall","value":"Abi::Fastcall","parent":{"krate":0,"index":3834},"children":[],"decl_id":null,"docs":" The \"fastcall\" ABI.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3841},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":605851,"byte_end":605859,"line_start":174,"line_end":174,"column_start":5,"column_end":13},"name":"ThisCall","qualname":"::ir::function::Abi::ThisCall","value":"Abi::ThisCall","parent":{"krate":0,"index":3834},"children":[],"decl_id":null,"docs":" The \"thiscall\" ABI.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3843},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":605890,"byte_end":605895,"line_start":176,"line_end":176,"column_start":5,"column_end":10},"name":"Aapcs","qualname":"::ir::function::Abi::Aapcs","value":"Abi::Aapcs","parent":{"krate":0,"index":3834},"children":[],"decl_id":null,"docs":" The \"aapcs\" ABI.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3845},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":605926,"byte_end":605931,"line_start":178,"line_end":178,"column_start":5,"column_end":10},"name":"Win64","qualname":"::ir::function::Abi::Win64","value":"Abi::Win64","parent":{"krate":0,"index":3834},"children":[],"decl_id":null,"docs":" The \"win64\" ABI.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3847},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":605972,"byte_end":605979,"line_start":180,"line_end":180,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::ir::function::Abi::Unknown","value":"Abi::Unknown(CXCallingConv)","parent":{"krate":0,"index":3834},"children":[],"decl_id":null,"docs":" An unknown or invalid ABI.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3834},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":605697,"byte_end":605700,"line_start":166,"line_end":166,"column_start":10,"column_end":13},"name":"Abi","qualname":"::ir::function::Abi","value":"Abi::{C, Stdcall, Fastcall, ThisCall, Aapcs, Win64, Unknown}","parent":null,"children":[{"krate":0,"index":3835},{"krate":0,"index":3837},{"krate":0,"index":3839},{"krate":0,"index":3841},{"krate":0,"index":3843},{"krate":0,"index":3845},{"krate":0,"index":3847}],"decl_id":null,"docs":" An ABI extracted from a clang cursor.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3855},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":606841,"byte_end":606852,"line_start":212,"line_end":212,"column_start":12,"column_end":23},"name":"FunctionSig","qualname":"::ir::function::FunctionSig","value":"FunctionSig {  }","parent":null,"children":[{"krate":0,"index":3856},{"krate":0,"index":3857},{"krate":0,"index":3858},{"krate":0,"index":3859},{"krate":0,"index":3860}],"decl_id":null,"docs":" A function signature.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1898},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":611482,"byte_end":611485,"line_start":347,"line_end":347,"column_start":12,"column_end":15},"name":"new","qualname":"<FunctionSig>::new","value":"fn (return_type: TypeId, argument_types: Vec<(Option<String>, TypeId)>, is_variadic: bool, must_use: bool, abi: Abi) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new function signature.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1899},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":611898,"byte_end":611905,"line_start":364,"line_end":364,"column_start":12,"column_end":19},"name":"from_ty","qualname":"<FunctionSig>::from_ty","value":"fn (ty: &clang::Type, cursor: &clang::Cursor, ctx: &mut BindgenContext) -> Result<Self, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new function signature from the given Clang type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1903},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":617255,"byte_end":617266,"line_start":503,"line_end":503,"column_start":12,"column_end":23},"name":"return_type","qualname":"<FunctionSig>::return_type","value":"fn (&self) -> TypeId","parent":null,"children":[],"decl_id":null,"docs":" Get this function signature's return type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1904},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":617396,"byte_end":617410,"line_start":508,"line_end":508,"column_start":12,"column_end":26},"name":"argument_types","qualname":"<FunctionSig>::argument_types","value":"fn (&self) -> &[(Option<String>, TypeId)]","parent":null,"children":[],"decl_id":null,"docs":" Get this function signature's argument (name, type) pairs.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1905},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":617541,"byte_end":617544,"line_start":513,"line_end":513,"column_start":12,"column_end":15},"name":"abi","qualname":"<FunctionSig>::abi","value":"fn (&self) -> Abi","parent":null,"children":[],"decl_id":null,"docs":" Get this function signature's ABI.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1906},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":617641,"byte_end":617652,"line_start":518,"line_end":518,"column_start":12,"column_end":23},"name":"is_variadic","qualname":"<FunctionSig>::is_variadic","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this function signature variadic?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1907},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":618011,"byte_end":618019,"line_start":526,"line_end":526,"column_start":12,"column_end":20},"name":"must_use","qualname":"<FunctionSig>::must_use","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Must this function's return value be used?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1908},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":618513,"byte_end":618541,"line_start":539,"line_end":539,"column_start":12,"column_end":40},"name":"function_pointers_can_derive","qualname":"<FunctionSig>::function_pointers_can_derive","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Are function pointers with this signature able to derive Rust traits?\n Rust only supports deriving traits for function pointers with a limited\n number of parameters and a couple ABIs.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3864},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/int.rs","byte_start":621570,"byte_end":621574,"line_start":7,"line_end":7,"column_start":5,"column_end":9},"name":"Bool","qualname":"::ir::int::IntKind::Bool","value":"IntKind::Bool","parent":{"krate":0,"index":3863},"children":[],"decl_id":null,"docs":" A `bool`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3866},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/int.rs","byte_start":621606,"byte_end":621611,"line_start":10,"line_end":10,"column_start":5,"column_end":10},"name":"SChar","qualname":"::ir::int::IntKind::SChar","value":"IntKind::SChar","parent":{"krate":0,"index":3863},"children":[],"decl_id":null,"docs":" A `signed char`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3868},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/int.rs","byte_start":621646,"byte_end":621651,"line_start":13,"line_end":13,"column_start":5,"column_end":10},"name":"UChar","qualname":"::ir::int::IntKind::UChar","value":"IntKind::UChar","parent":{"krate":0,"index":3863},"children":[],"decl_id":null,"docs":" An `unsigned char`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3870},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/int.rs","byte_start":621680,"byte_end":621685,"line_start":16,"line_end":16,"column_start":5,"column_end":10},"name":"WChar","qualname":"::ir::int::IntKind::WChar","value":"IntKind::WChar","parent":{"krate":0,"index":3863},"children":[],"decl_id":null,"docs":" An `wchar_t`.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3872},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/int.rs","byte_start":621763,"byte_end":621767,"line_start":19,"line_end":19,"column_start":5,"column_end":9},"name":"Char","qualname":"::ir::int::IntKind::Char","value":"IntKind::Char { is_signed }","parent":{"krate":0,"index":3863},"children":[],"decl_id":null,"docs":" A platform-dependent `char` type, with the signedness support.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3874},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/int.rs","byte_start":621890,"byte_end":621895,"line_start":25,"line_end":25,"column_start":5,"column_end":10},"name":"Short","qualname":"::ir::int::IntKind::Short","value":"IntKind::Short","parent":{"krate":0,"index":3863},"children":[],"decl_id":null,"docs":" A `short`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3876},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/int.rs","byte_start":621931,"byte_end":621937,"line_start":28,"line_end":28,"column_start":5,"column_end":11},"name":"UShort","qualname":"::ir::int::IntKind::UShort","value":"IntKind::UShort","parent":{"krate":0,"index":3863},"children":[],"decl_id":null,"docs":" An `unsigned short`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3878},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/int.rs","byte_start":621962,"byte_end":621965,"line_start":31,"line_end":31,"column_start":5,"column_end":8},"name":"Int","qualname":"::ir::int::IntKind::Int","value":"IntKind::Int","parent":{"krate":0,"index":3863},"children":[],"decl_id":null,"docs":" An `int`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3880},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/int.rs","byte_start":621999,"byte_end":622003,"line_start":34,"line_end":34,"column_start":5,"column_end":9},"name":"UInt","qualname":"::ir::int::IntKind::UInt","value":"IntKind::UInt","parent":{"krate":0,"index":3863},"children":[],"decl_id":null,"docs":" An `unsigned int`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3882},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/int.rs","byte_start":622028,"byte_end":622032,"line_start":37,"line_end":37,"column_start":5,"column_end":9},"name":"Long","qualname":"::ir::int::IntKind::Long","value":"IntKind::Long","parent":{"krate":0,"index":3863},"children":[],"decl_id":null,"docs":" A `long`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3884},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/int.rs","byte_start":622067,"byte_end":622072,"line_start":40,"line_end":40,"column_start":5,"column_end":10},"name":"ULong","qualname":"::ir::int::IntKind::ULong","value":"IntKind::ULong","parent":{"krate":0,"index":3863},"children":[],"decl_id":null,"docs":" An `unsigned long`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3886},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/int.rs","byte_start":622102,"byte_end":622110,"line_start":43,"line_end":43,"column_start":5,"column_end":13},"name":"LongLong","qualname":"::ir::int::IntKind::LongLong","value":"IntKind::LongLong","parent":{"krate":0,"index":3863},"children":[],"decl_id":null,"docs":" A `long long`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3888},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/int.rs","byte_start":622150,"byte_end":622159,"line_start":46,"line_end":46,"column_start":5,"column_end":14},"name":"ULongLong","qualname":"::ir::int::IntKind::ULongLong","value":"IntKind::ULongLong","parent":{"krate":0,"index":3863},"children":[],"decl_id":null,"docs":" An `unsigned long long`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3890},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/int.rs","byte_start":622198,"byte_end":622200,"line_start":49,"line_end":49,"column_start":5,"column_end":7},"name":"I8","qualname":"::ir::int::IntKind::I8","value":"IntKind::I8","parent":{"krate":0,"index":3863},"children":[],"decl_id":null,"docs":" A 8-bit signed integer.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3892},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/int.rs","byte_start":622241,"byte_end":622243,"line_start":52,"line_end":52,"column_start":5,"column_end":7},"name":"U8","qualname":"::ir::int::IntKind::U8","value":"IntKind::U8","parent":{"krate":0,"index":3863},"children":[],"decl_id":null,"docs":" A 8-bit unsigned integer.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3894},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/int.rs","byte_start":622283,"byte_end":622286,"line_start":55,"line_end":55,"column_start":5,"column_end":8},"name":"I16","qualname":"::ir::int::IntKind::I16","value":"IntKind::I16","parent":{"krate":0,"index":3863},"children":[],"decl_id":null,"docs":" A 16-bit signed integer.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3896},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/int.rs","byte_start":622337,"byte_end":622340,"line_start":58,"line_end":58,"column_start":5,"column_end":8},"name":"U16","qualname":"::ir::int::IntKind::U16","value":"IntKind::U16","parent":{"krate":0,"index":3863},"children":[],"decl_id":null,"docs":" Either a `char16_t` or a `wchar_t`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3898},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/int.rs","byte_start":622380,"byte_end":622383,"line_start":61,"line_end":61,"column_start":5,"column_end":8},"name":"I32","qualname":"::ir::int::IntKind::I32","value":"IntKind::I32","parent":{"krate":0,"index":3863},"children":[],"decl_id":null,"docs":" A 32-bit signed integer.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3900},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/int.rs","byte_start":622425,"byte_end":622428,"line_start":64,"line_end":64,"column_start":5,"column_end":8},"name":"U32","qualname":"::ir::int::IntKind::U32","value":"IntKind::U32","parent":{"krate":0,"index":3863},"children":[],"decl_id":null,"docs":" A 32-bit unsigned integer.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3902},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/int.rs","byte_start":622468,"byte_end":622471,"line_start":67,"line_end":67,"column_start":5,"column_end":8},"name":"I64","qualname":"::ir::int::IntKind::I64","value":"IntKind::I64","parent":{"krate":0,"index":3863},"children":[],"decl_id":null,"docs":" A 64-bit signed integer.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3904},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/int.rs","byte_start":622513,"byte_end":622516,"line_start":70,"line_end":70,"column_start":5,"column_end":8},"name":"U64","qualname":"::ir::int::IntKind::U64","value":"IntKind::U64","parent":{"krate":0,"index":3863},"children":[],"decl_id":null,"docs":" A 64-bit unsigned integer.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3906},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/int.rs","byte_start":622545,"byte_end":622549,"line_start":73,"line_end":73,"column_start":5,"column_end":9},"name":"I128","qualname":"::ir::int::IntKind::I128","value":"IntKind::I128","parent":{"krate":0,"index":3863},"children":[],"decl_id":null,"docs":" An `int128_t`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3908},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/int.rs","byte_start":622579,"byte_end":622583,"line_start":76,"line_end":76,"column_start":5,"column_end":9},"name":"U128","qualname":"::ir::int::IntKind::U128","value":"IntKind::U128","parent":{"krate":0,"index":3863},"children":[],"decl_id":null,"docs":" A `uint128_t`.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3910},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/int.rs","byte_start":622682,"byte_end":622688,"line_start":80,"line_end":80,"column_start":5,"column_end":11},"name":"Custom","qualname":"::ir::int::IntKind::Custom","value":"IntKind::Custom { name, is_signed }","parent":{"krate":0,"index":3863},"children":[],"decl_id":null,"docs":" A custom integer type, used to allow custom macro types depending on\n range.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3863},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/int.rs","byte_start":621538,"byte_end":621545,"line_start":5,"line_end":5,"column_start":10,"column_end":17},"name":"IntKind","qualname":"::ir::int::IntKind","value":"IntKind::{Bool, SChar, UChar, WChar, Char, Short, UShort, Int, UInt, Long, ULong, LongLong, ULongLong, I8, U8, I16, U16, I32, U32, I64, U64, I128, U128, Custom}","parent":null,"children":[{"krate":0,"index":3864},{"krate":0,"index":3866},{"krate":0,"index":3868},{"krate":0,"index":3870},{"krate":0,"index":3872},{"krate":0,"index":3874},{"krate":0,"index":3876},{"krate":0,"index":3878},{"krate":0,"index":3880},{"krate":0,"index":3882},{"krate":0,"index":3884},{"krate":0,"index":3886},{"krate":0,"index":3888},{"krate":0,"index":3890},{"krate":0,"index":3892},{"krate":0,"index":3894},{"krate":0,"index":3896},{"krate":0,"index":3898},{"krate":0,"index":3900},{"krate":0,"index":3902},{"krate":0,"index":3904},{"krate":0,"index":3906},{"krate":0,"index":3908},{"krate":0,"index":3910}],"decl_id":null,"docs":" Which integral type are we dealing with?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1918},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/int.rs","byte_start":622941,"byte_end":622950,"line_start":90,"line_end":90,"column_start":12,"column_end":21},"name":"is_signed","qualname":"<IntKind>::is_signed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this integral type signed?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1920},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/int.rs","byte_start":623788,"byte_end":623798,"line_start":111,"line_end":111,"column_start":12,"column_end":22},"name":"known_size","qualname":"<IntKind>::known_size","value":"fn (&self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" If this type has a known size, return it (in bytes). This is to\n alleviate libclang sometimes not giving us a layout (like in the case\n when an enum is defined inside a class with template parameters).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1922},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/int.rs","byte_start":624177,"byte_end":624195,"line_start":124,"line_end":124,"column_start":12,"column_end":30},"name":"signedness_matches","qualname":"<IntKind>::signedness_matches","value":"fn (&self, val: i64) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this type's signedness matches the value.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1987},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":626791,"byte_end":626796,"line_start":74,"line_end":74,"column_start":10,"column_end":15},"name":"Extra","qualname":"::ir::item::IsOpaque::Extra","value":"type Extra;","parent":{"krate":0,"index":1986},"children":[],"decl_id":null,"docs":" Extra context the IR thing needs to determine if it is opaque or not.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3946},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":635372,"byte_end":635376,"line_start":379,"line_end":379,"column_start":12,"column_end":16},"name":"Item","qualname":"::ir::item::Item","value":"Item {  }","parent":null,"children":[{"krate":0,"index":3947},{"krate":0,"index":3948},{"krate":0,"index":3949},{"krate":0,"index":3950},{"krate":0,"index":3951},{"krate":0,"index":3952},{"krate":0,"index":3953},{"krate":0,"index":3954}],"decl_id":null,"docs":" An item is the base of the bindgen representation, it can be either a\n module, a type, a function, or a variable (see `ItemKind` for more\n information).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2061},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":636758,"byte_end":636761,"line_start":424,"line_end":424,"column_start":12,"column_end":15},"name":"new","qualname":"<Item>::new","value":"fn (id: ItemId, comment: Option<String>, annotations: Option<Annotations>, parent_id: ItemId, kind: ItemKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Item`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2062},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":637376,"byte_end":637391,"line_start":445,"line_end":445,"column_start":12,"column_end":27},"name":"new_opaque_type","qualname":"<Item>::new_opaque_type","value":"fn (with_id: ItemId, ty: &clang::Type, ctx: &mut BindgenContext) -> TypeId","parent":null,"children":[],"decl_id":null,"docs":" Construct a new opaque item type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2063},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":637806,"byte_end":637808,"line_start":458,"line_end":458,"column_start":12,"column_end":14},"name":"id","qualname":"<Item>::id","value":"fn (&self) -> ItemId","parent":null,"children":[],"decl_id":null,"docs":" Get this `Item`'s identifier.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2064},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":637977,"byte_end":637986,"line_start":465,"line_end":465,"column_start":12,"column_end":21},"name":"parent_id","qualname":"<Item>::parent_id","value":"fn (&self) -> ItemId","parent":null,"children":[],"decl_id":null,"docs":" Get this `Item`'s parent's identifier.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2065},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":638168,"byte_end":638194,"line_start":472,"line_end":472,"column_start":12,"column_end":38},"name":"set_parent_for_replacement","qualname":"<Item>::set_parent_for_replacement","value":"fn <Id> (&mut self, id: Id) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set this item's parent id.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2067},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":638427,"byte_end":638440,"line_start":479,"line_end":479,"column_start":12,"column_end":25},"name":"codegen_depth","qualname":"<Item>::codegen_depth","value":"fn (&self, ctx: &BindgenContext) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the depth this item is indented to.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2070},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":639006,"byte_end":639013,"line_start":497,"line_end":497,"column_start":12,"column_end":19},"name":"comment","qualname":"<Item>::comment","value":"fn (&self, ctx: &BindgenContext) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Get this `Item`'s comment, if it has any, already preprocessed and with\n the right indentation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2072},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":639321,"byte_end":639325,"line_start":508,"line_end":508,"column_start":12,"column_end":16},"name":"kind","qualname":"<Item>::kind","value":"fn (&self) -> &ItemKind","parent":null,"children":[],"decl_id":null,"docs":" What kind of item is this?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2073},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":639438,"byte_end":639446,"line_start":513,"line_end":513,"column_start":12,"column_end":20},"name":"kind_mut","qualname":"<Item>::kind_mut","value":"fn (&mut self) -> &mut ItemKind","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to this item's kind.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2074},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":639824,"byte_end":639832,"line_start":522,"line_end":522,"column_start":12,"column_end":20},"name":"local_id","qualname":"<Item>::local_id","value":"fn (&self, ctx: &BindgenContext) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get an identifier that differentiates this item from its siblings.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2075},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":640389,"byte_end":640408,"line_start":536,"line_end":536,"column_start":12,"column_end":31},"name":"next_child_local_id","qualname":"<Item>::next_child_local_id","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get an identifier that differentiates a child of this item of other\n related items.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2076},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":641206,"byte_end":641217,"line_start":560,"line_end":560,"column_start":12,"column_end":23},"name":"is_toplevel","qualname":"<Item>::is_toplevel","value":"fn (&self, ctx: &BindgenContext) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this item is a top-level item, from the point of view of\n bindgen.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2077},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":642203,"byte_end":642214,"line_start":591,"line_end":591,"column_start":12,"column_end":23},"name":"expect_type","qualname":"<Item>::expect_type","value":"fn (&self) -> &Type","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this item's underlying `Type`. Panic if this is some\n other kind of item.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2078},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":642397,"byte_end":642404,"line_start":597,"line_end":597,"column_start":12,"column_end":19},"name":"as_type","qualname":"<Item>::as_type","value":"fn (&self) -> Option<&Type>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this item's underlying `Type`, or `None` if this is\n some other kind of item.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2079},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":642591,"byte_end":642606,"line_start":603,"line_end":603,"column_start":12,"column_end":27},"name":"expect_function","qualname":"<Item>::expect_function","value":"fn (&self) -> &Function","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this item's underlying `Function`. Panic if this is\n some other kind of item.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2080},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":642716,"byte_end":642725,"line_start":608,"line_end":608,"column_start":12,"column_end":21},"name":"is_module","qualname":"<Item>::is_module","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this item a module?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2081},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":642900,"byte_end":642911,"line_start":616,"line_end":616,"column_start":12,"column_end":23},"name":"annotations","qualname":"<Item>::annotations","value":"fn (&self) -> &Annotations","parent":null,"children":[],"decl_id":null,"docs":" Get this item's annotations.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2082},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":643119,"byte_end":643133,"line_start":623,"line_end":623,"column_start":12,"column_end":26},"name":"is_blacklisted","qualname":"<Item>::is_blacklisted","value":"fn (&self, ctx: &BindgenContext) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this item should be blacklisted.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2083},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":644078,"byte_end":644089,"line_start":649,"line_end":649,"column_start":12,"column_end":23},"name":"is_type_ref","qualname":"<Item>::is_type_ref","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a reference to another type?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2085},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":644218,"byte_end":644224,"line_start":654,"line_end":654,"column_start":12,"column_end":18},"name":"is_var","qualname":"<Item>::is_var","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this item a var type?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2086},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":644396,"byte_end":644400,"line_start":662,"line_end":662,"column_start":12,"column_end":16},"name":"name","qualname":"<Item>::name","value":"fn <'a> (&'a self, ctx: &'a BindgenContext) -> NameOptions<'a>","parent":null,"children":[],"decl_id":null,"docs":" Take out item NameOptions\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2089},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":645585,"byte_end":645608,"line_start":696,"line_end":696,"column_start":12,"column_end":35},"name":"full_disambiguated_name","qualname":"<Item>::full_disambiguated_name","value":"fn (&self, ctx: &BindgenContext) -> String","parent":null,"children":[],"decl_id":null,"docs":" Create a fully disambiguated name for an item, including template\n parameters if it is a type\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2101},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":649767,"byte_end":649786,"line_start":807,"line_end":807,"column_start":12,"column_end":31},"name":"real_canonical_name","qualname":"<Item>::real_canonical_name","value":"fn (&self, ctx: &BindgenContext, opt: &NameOptions) -> String","parent":null,"children":[],"decl_id":null,"docs":" Get the canonical name without taking into account the replaces\n annotation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2108},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":652117,"byte_end":652127,"line_start":880,"line_end":880,"column_start":12,"column_end":22},"name":"exposed_id","qualname":"<Item>::exposed_id","value":"fn (&self, ctx: &BindgenContext) -> String","parent":null,"children":[],"decl_id":null,"docs":" The exposed id that represents an unique id among the siblings of a\n given item.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2110},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":652978,"byte_end":652987,"line_start":901,"line_end":901,"column_start":12,"column_end":21},"name":"as_module","qualname":"<Item>::as_module","value":"fn (&self) -> Option<&Module>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this item's `Module`, or `None` if this is not a\n `Module` item.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2111},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":653258,"byte_end":653271,"line_start":910,"line_end":910,"column_start":12,"column_end":25},"name":"as_module_mut","qualname":"<Item>::as_module_mut","value":"fn (&mut self) -> Option<&mut Module>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to this item's `Module`, or `None` if this is\n not a `Module` item.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2113},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":654751,"byte_end":654773,"line_start":949,"line_end":949,"column_start":12,"column_end":34},"name":"is_enabled_for_codegen","qualname":"<Item>::is_enabled_for_codegen","value":"fn (&self, ctx: &BindgenContext) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this item of a kind that is enabled for code generation?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2114},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":655853,"byte_end":655874,"line_start":975,"line_end":975,"column_start":12,"column_end":33},"name":"path_for_whitelisting","qualname":"<Item>::path_for_whitelisting","value":"fn (&self, ctx: &BindgenContext) -> Vec<String>","parent":null,"children":[],"decl_id":null,"docs":" Returns the path we should use for whitelisting / blacklisting, which\n doesn't include user-mangling.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3981},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":685344,"byte_end":685355,"line_start":1874,"line_end":1874,"column_start":12,"column_end":23},"name":"NameOptions","qualname":"::ir::item::NameOptions","value":"NameOptions {  }","parent":null,"children":[{"krate":0,"index":3983},{"krate":0,"index":3984},{"krate":0,"index":3985},{"krate":0,"index":3986}],"decl_id":null,"docs":" Builder struct for naming variations, which hold inside different\n flags for naming options.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2195},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":685550,"byte_end":685553,"line_start":1883,"line_end":1883,"column_start":12,"column_end":15},"name":"new","qualname":"<NameOptions>::new","value":"fn (item: &'a Item, ctx: &'a BindgenContext) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `NameOptions`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2196},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":685941,"byte_end":685958,"line_start":1894,"line_end":1894,"column_start":12,"column_end":29},"name":"within_namespaces","qualname":"<NameOptions>::within_namespaces","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the name without the item's containing C++ namespaces mangled\n into it. In other words, the item's name within the item's namespace.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2198},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":686224,"byte_end":686227,"line_start":1905,"line_end":1905,"column_start":12,"column_end":15},"name":"get","qualname":"<NameOptions>::get","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Construct a name `String`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3991},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item_kind.rs","byte_start":686732,"byte_end":686738,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Module","qualname":"::ir::item_kind::ItemKind::Module","value":"ItemKind::Module(Module)","parent":{"krate":0,"index":3990},"children":[],"decl_id":null,"docs":" A module, created implicitly once (the root module), or via C++\n namespaces.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3994},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item_kind.rs","byte_start":686825,"byte_end":686829,"line_start":19,"line_end":19,"column_start":5,"column_end":9},"name":"Type","qualname":"::ir::item_kind::ItemKind::Type","value":"ItemKind::Type(Type)","parent":{"krate":0,"index":3990},"children":[],"decl_id":null,"docs":" A type declared in any of the multiple ways it can be declared.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3997},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item_kind.rs","byte_start":686884,"byte_end":686892,"line_start":22,"line_end":22,"column_start":5,"column_end":13},"name":"Function","qualname":"::ir::item_kind::ItemKind::Function","value":"ItemKind::Function(Function)","parent":{"krate":0,"index":3990},"children":[],"decl_id":null,"docs":" A function or method declaration.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4000},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item_kind.rs","byte_start":686963,"byte_end":686966,"line_start":25,"line_end":25,"column_start":5,"column_end":8},"name":"Var","qualname":"::ir::item_kind::ItemKind::Var","value":"ItemKind::Var(Var)","parent":{"krate":0,"index":3990},"children":[],"decl_id":null,"docs":" A variable declaration, most likely a static.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3990},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item_kind.rs","byte_start":686625,"byte_end":686633,"line_start":13,"line_end":13,"column_start":10,"column_end":18},"name":"ItemKind","qualname":"::ir::item_kind::ItemKind","value":"ItemKind::{Module, Type, Function, Var}","parent":null,"children":[{"krate":0,"index":3991},{"krate":0,"index":3994},{"krate":0,"index":3997},{"krate":0,"index":4000}],"decl_id":null,"docs":" A item we parse and translate.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2208},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item_kind.rs","byte_start":687112,"byte_end":687121,"line_start":31,"line_end":31,"column_start":12,"column_end":21},"name":"as_module","qualname":"<ItemKind>::as_module","value":"fn (&self) -> Option<&Module>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this `ItemKind`'s underying `Module`, or `None` if it\n is some other kind.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2209},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item_kind.rs","byte_start":687329,"byte_end":687338,"line_start":39,"line_end":39,"column_start":12,"column_end":21},"name":"kind_name","qualname":"<ItemKind>::kind_name","value":"fn (&self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Transform our `ItemKind` into a string.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2210},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item_kind.rs","byte_start":687618,"byte_end":687627,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"is_module","qualname":"<ItemKind>::is_module","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a module?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2211},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item_kind.rs","byte_start":687806,"byte_end":687819,"line_start":55,"line_end":55,"column_start":12,"column_end":25},"name":"expect_module","qualname":"<ItemKind>::expect_module","value":"fn (&self) -> &Module","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this `ItemKind`'s underying `Module`, or panic if it\n is some other kind.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2212},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item_kind.rs","byte_start":688017,"byte_end":688028,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"name":"as_function","qualname":"<ItemKind>::as_function","value":"fn (&self) -> Option<&Function>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this `ItemKind`'s underying `Function`, or `None` if\n it is some other kind.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2213},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item_kind.rs","byte_start":688216,"byte_end":688227,"line_start":69,"line_end":69,"column_start":12,"column_end":23},"name":"is_function","qualname":"<ItemKind>::is_function","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a function?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2214},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item_kind.rs","byte_start":688410,"byte_end":688425,"line_start":75,"line_end":75,"column_start":12,"column_end":27},"name":"expect_function","qualname":"<ItemKind>::expect_function","value":"fn (&self) -> &Function","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this `ItemKind`'s underying `Function`, or panic if\n it is some other kind.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2215},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item_kind.rs","byte_start":688625,"byte_end":688632,"line_start":81,"line_end":81,"column_start":12,"column_end":19},"name":"as_type","qualname":"<ItemKind>::as_type","value":"fn (&self) -> Option<&Type>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this `ItemKind`'s underying `Type`, or `None` if\n it is some other kind.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2216},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item_kind.rs","byte_start":688895,"byte_end":688906,"line_start":90,"line_end":90,"column_start":12,"column_end":23},"name":"as_type_mut","qualname":"<ItemKind>::as_type_mut","value":"fn (&mut self) -> Option<&mut Type>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to this `ItemKind`'s underying `Type`, or `None`\n if it is some other kind.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2217},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item_kind.rs","byte_start":689090,"byte_end":689097,"line_start":98,"line_end":98,"column_start":12,"column_end":19},"name":"is_type","qualname":"<ItemKind>::is_type","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a type?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2218},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item_kind.rs","byte_start":689272,"byte_end":689283,"line_start":104,"line_end":104,"column_start":12,"column_end":23},"name":"expect_type","qualname":"<ItemKind>::expect_type","value":"fn (&self) -> &Type","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this `ItemKind`'s underying `Type`, or panic if it is\n some other kind.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2219},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item_kind.rs","byte_start":689470,"byte_end":689476,"line_start":110,"line_end":110,"column_start":12,"column_end":18},"name":"as_var","qualname":"<ItemKind>::as_var","value":"fn (&self) -> Option<&Var>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this `ItemKind`'s underying `Var`, or `None` if it is\n some other kind.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2220},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item_kind.rs","byte_start":689648,"byte_end":689654,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"name":"is_var","qualname":"<ItemKind>::is_var","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a variable?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2221},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item_kind.rs","byte_start":689827,"byte_end":689837,"line_start":124,"line_end":124,"column_start":12,"column_end":22},"name":"expect_var","qualname":"<ItemKind>::expect_var","value":"fn (&self) -> &Var","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this `ItemKind`'s underying `Var`, or panic if it is\n some other kind.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4005},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/layout.rs","byte_start":690831,"byte_end":690837,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Layout","qualname":"::ir::layout::Layout","value":"Layout { size, align, packed }","parent":null,"children":[{"krate":0,"index":4006},{"krate":0,"index":4007},{"krate":0,"index":4008}],"decl_id":null,"docs":" A type that represents the struct layout of a type.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4006},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/layout.rs","byte_start":690892,"byte_end":690896,"line_start":13,"line_end":13,"column_start":9,"column_end":13},"name":"size","qualname":"::ir::layout::Layout::size","value":"usize","parent":{"krate":0,"index":4005},"children":[],"decl_id":null,"docs":" The size (in bytes) of this layout.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4007},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/layout.rs","byte_start":690962,"byte_end":690967,"line_start":15,"line_end":15,"column_start":9,"column_end":14},"name":"align","qualname":"::ir::layout::Layout::align","value":"usize","parent":{"krate":0,"index":4005},"children":[],"decl_id":null,"docs":" The alignment (in bytes) of this layout.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4008},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/layout.rs","byte_start":691041,"byte_end":691047,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"name":"packed","qualname":"::ir::layout::Layout::packed","value":"bool","parent":{"krate":0,"index":4005},"children":[],"decl_id":null,"docs":" Whether this layout's members are packed or not.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2235},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/layout.rs","byte_start":691490,"byte_end":691509,"line_start":37,"line_end":37,"column_start":12,"column_end":31},"name":"known_type_for_size","qualname":"<Layout>::known_type_for_size","value":"fn (ctx: &BindgenContext, size: usize) -> Option<&'static str>","parent":null,"children":[],"decl_id":null,"docs":" Gets the integer type name for a given known size.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2236},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/layout.rs","byte_start":691939,"byte_end":691942,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<Layout>::new","value":"fn (size: usize, align: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Layout` with the given `size` and `align`. It is not\n packed.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2238},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/layout.rs","byte_start":692518,"byte_end":692526,"line_start":75,"line_end":75,"column_start":12,"column_end":20},"name":"for_size","qualname":"<Layout>::for_size","value":"fn (ctx: &BindgenContext, size: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a non-packed layout for a given size, trying to use the maximum\n alignment possible.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2239},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/layout.rs","byte_start":692692,"byte_end":692699,"line_start":80,"line_end":80,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<Layout>::is_zero","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a zero-sized layout?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2240},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/layout.rs","byte_start":692816,"byte_end":692820,"line_start":85,"line_end":85,"column_start":12,"column_end":16},"name":"zero","qualname":"<Layout>::zero","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a zero-sized layout.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2241},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/layout.rs","byte_start":692918,"byte_end":692924,"line_start":90,"line_end":90,"column_start":12,"column_end":18},"name":"opaque","qualname":"<Layout>::opaque","value":"fn (&self) -> Opaque","parent":null,"children":[],"decl_id":null,"docs":" Get this layout as an opaque type.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4018},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/layout.rs","byte_start":693099,"byte_end":693105,"line_start":97,"line_end":97,"column_start":12,"column_end":18},"name":"Opaque","qualname":"::ir::layout::Opaque","value":"","parent":null,"children":[],"decl_id":null,"docs":" When we are treating a type as opaque, it is just a blob with a `Layout`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2243},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/layout.rs","byte_start":693208,"byte_end":693221,"line_start":101,"line_end":101,"column_start":12,"column_end":25},"name":"from_clang_ty","qualname":"<Opaque>::from_clang_ty","value":"fn (ty: &clang::Type, ctx: &BindgenContext) -> Type","parent":null,"children":[],"decl_id":null,"docs":" Construct a new opaque type from the given clang type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2244},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/layout.rs","byte_start":693599,"byte_end":693624,"line_start":110,"line_end":110,"column_start":12,"column_end":37},"name":"known_rust_type_for_array","qualname":"<Opaque>::known_rust_type_for_array","value":"fn (&self, ctx: &BindgenContext) -> Option<&'static str>","parent":null,"children":[],"decl_id":null,"docs":" Return the known rust type we should use to create a correctly-aligned\n field with this layout.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2245},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/layout.rs","byte_start":693919,"byte_end":693929,"line_start":119,"line_end":119,"column_start":12,"column_end":22},"name":"array_size","qualname":"<Opaque>::array_size","value":"fn (&self, ctx: &BindgenContext) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Return the array size that an opaque type for this layout should have if\n we know the correct type for it, or `None` otherwise.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2246},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/layout.rs","byte_start":694348,"byte_end":694378,"line_start":130,"line_end":130,"column_start":12,"column_end":42},"name":"array_size_within_derive_limit","qualname":"<Opaque>::array_size_within_derive_limit","value":"fn (&self, ctx: &BindgenContext) -> CanDerive","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if this opaque layout's array size will fit within the\n maximum number of array elements that Rust allows deriving traits\n with. Return `false` otherwise.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4030},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/module.rs","byte_start":695072,"byte_end":695078,"line_start":15,"line_end":15,"column_start":5,"column_end":11},"name":"Normal","qualname":"::ir::module::ModuleKind::Normal","value":"ModuleKind::Normal","parent":{"krate":0,"index":4029},"children":[],"decl_id":null,"docs":" This module is not inline.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4032},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/module.rs","byte_start":695148,"byte_end":695154,"line_start":17,"line_end":17,"column_start":5,"column_end":11},"name":"Inline","qualname":"::ir::module::ModuleKind::Inline","value":"ModuleKind::Inline","parent":{"krate":0,"index":4029},"children":[],"decl_id":null,"docs":" This module is inline, as in `inline namespace foo {}`.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4029},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/module.rs","byte_start":695020,"byte_end":695030,"line_start":13,"line_end":13,"column_start":10,"column_end":20},"name":"ModuleKind","qualname":"::ir::module::ModuleKind","value":"ModuleKind::{Normal, Inline}","parent":null,"children":[{"krate":0,"index":4030},{"krate":0,"index":4032}],"decl_id":null,"docs":" Whether this module is inline or not.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4045},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/module.rs","byte_start":695232,"byte_end":695238,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"name":"Module","qualname":"::ir::module::Module","value":"Module {  }","parent":null,"children":[{"krate":0,"index":4046},{"krate":0,"index":4047},{"krate":0,"index":4048}],"decl_id":null,"docs":" A module, as in, a C++ namespace.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2260},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/module.rs","byte_start":695533,"byte_end":695536,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<Module>::new","value":"fn (name: Option<String>, kind: ModuleKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Module`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2261},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/module.rs","byte_start":695750,"byte_end":695754,"line_start":42,"line_end":42,"column_start":12,"column_end":16},"name":"name","qualname":"<Module>::name","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get this module's name.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2263},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/module.rs","byte_start":695898,"byte_end":695910,"line_start":47,"line_end":47,"column_start":12,"column_end":24},"name":"children_mut","qualname":"<Module>::children_mut","value":"fn (&mut self) -> &mut ItemSet","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to this module's children.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2264},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/module.rs","byte_start":696021,"byte_end":696029,"line_start":52,"line_end":52,"column_start":12,"column_end":20},"name":"children","qualname":"<Module>::children","value":"fn (&self) -> &ItemSet","parent":null,"children":[],"decl_id":null,"docs":" Get this module's children.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2265},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/module.rs","byte_start":696134,"byte_end":696143,"line_start":57,"line_end":57,"column_start":12,"column_end":21},"name":"is_inline","qualname":"<Module>::is_inline","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this namespace is inline.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4053},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/objc.rs","byte_start":697801,"byte_end":697814,"line_start":21,"line_end":21,"column_start":12,"column_end":25},"name":"ObjCInterface","qualname":"::ir::objc::ObjCInterface","value":"ObjCInterface {  }","parent":null,"children":[{"krate":0,"index":4054},{"krate":0,"index":4055},{"krate":0,"index":4056},{"krate":0,"index":4057},{"krate":0,"index":4058},{"krate":0,"index":4059}],"decl_id":null,"docs":" Objective C interface as used in TypeKind","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4062},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/objc.rs","byte_start":698141,"byte_end":698151,"line_start":40,"line_end":40,"column_start":12,"column_end":22},"name":"ObjCMethod","qualname":"::ir::objc::ObjCMethod","value":"ObjCMethod {  }","parent":null,"children":[{"krate":0,"index":4063},{"krate":0,"index":4064},{"krate":0,"index":4065},{"krate":0,"index":4066}],"decl_id":null,"docs":" The objective c methods\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2297},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/objc.rs","byte_start":698795,"byte_end":698799,"line_start":69,"line_end":69,"column_start":12,"column_end":16},"name":"name","qualname":"<ObjCInterface>::name","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" The name\n like, NSObject\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2298},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/objc.rs","byte_start":699033,"byte_end":699042,"line_start":76,"line_end":76,"column_start":12,"column_end":21},"name":"rust_name","qualname":"<ObjCInterface>::rust_name","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Formats the name for rust\n Can be like NSObject, but with categories might be like NSObject_NSCoderMethods\n and protocols are like protocol_NSObject\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2299},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/objc.rs","byte_start":699415,"byte_end":699422,"line_start":89,"line_end":89,"column_start":12,"column_end":19},"name":"methods","qualname":"<ObjCInterface>::methods","value":"fn (&self) -> &Vec<ObjCMethod>","parent":null,"children":[],"decl_id":null,"docs":" List of the methods defined in this interface\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2300},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/objc.rs","byte_start":699552,"byte_end":699565,"line_start":94,"line_end":94,"column_start":12,"column_end":25},"name":"class_methods","qualname":"<ObjCInterface>::class_methods","value":"fn (&self) -> &Vec<ObjCMethod>","parent":null,"children":[],"decl_id":null,"docs":" List of the class methods defined in this interface\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2301},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/objc.rs","byte_start":699698,"byte_end":699705,"line_start":99,"line_end":99,"column_start":12,"column_end":19},"name":"from_ty","qualname":"<ObjCInterface>::from_ty","value":"fn (cursor: &clang::Cursor, ctx: &mut BindgenContext) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parses the Objective C interface from the cursor\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2306},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/objc.rs","byte_start":703250,"byte_end":703254,"line_start":193,"line_end":193,"column_start":12,"column_end":16},"name":"name","qualname":"<ObjCMethod>::name","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" The original method selector name\n like, dataWithBytes:length:\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2307},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/objc.rs","byte_start":703394,"byte_end":703403,"line_start":199,"line_end":199,"column_start":12,"column_end":21},"name":"rust_name","qualname":"<ObjCMethod>::rust_name","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Method name as converted to rust\n like, dataWithBytes_length_\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2308},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/objc.rs","byte_start":703524,"byte_end":703533,"line_start":204,"line_end":204,"column_start":12,"column_end":21},"name":"signature","qualname":"<ObjCMethod>::signature","value":"fn (&self) -> &FunctionSig","parent":null,"children":[],"decl_id":null,"docs":" Returns the methods signature as FunctionSig\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2309},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/objc.rs","byte_start":703633,"byte_end":703648,"line_start":209,"line_end":209,"column_start":12,"column_end":27},"name":"is_class_method","qualname":"<ObjCMethod>::is_class_method","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a class method?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2310},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/objc.rs","byte_start":703745,"byte_end":703763,"line_start":214,"line_end":214,"column_start":12,"column_end":30},"name":"format_method_call","qualname":"<ObjCMethod>::format_method_call","value":"fn (&self, args: &[TokenStream]) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Formats the method call\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2342},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/template.rs","byte_start":711851,"byte_end":711856,"line_start":169,"line_end":169,"column_start":10,"column_end":15},"name":"Extra","qualname":"::ir::template::AsTemplateParam::Extra","value":"type Extra;","parent":{"krate":0,"index":2341},"children":[],"decl_id":null,"docs":" Any extra information the implementor might need to make this decision.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4070},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/template.rs","byte_start":712377,"byte_end":712398,"line_start":190,"line_end":190,"column_start":12,"column_end":33},"name":"TemplateInstantiation","qualname":"::ir::template::TemplateInstantiation","value":"TemplateInstantiation {  }","parent":null,"children":[{"krate":0,"index":4071},{"krate":0,"index":4072}],"decl_id":null,"docs":" A concrete instantiation of a generic template.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2346},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/template.rs","byte_start":712751,"byte_end":712754,"line_start":200,"line_end":200,"column_start":12,"column_end":15},"name":"new","qualname":"<TemplateInstantiation>::new","value":"fn <I> (definition: TypeId, args: I) -> TemplateInstantiation","parent":null,"children":[],"decl_id":null,"docs":" Construct a new template instantiation from the given parts.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2348},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/template.rs","byte_start":713058,"byte_end":713077,"line_start":211,"line_end":211,"column_start":12,"column_end":31},"name":"template_definition","qualname":"<TemplateInstantiation>::template_definition","value":"fn (&self) -> TypeId","parent":null,"children":[],"decl_id":null,"docs":" Get the template definition for this instantiation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2349},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/template.rs","byte_start":713211,"byte_end":713229,"line_start":216,"line_end":216,"column_start":12,"column_end":30},"name":"template_arguments","qualname":"<TemplateInstantiation>::template_arguments","value":"fn (&self) -> &[TypeId]","parent":null,"children":[],"decl_id":null,"docs":" Get the concrete template arguments used in this instantiation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2350},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/template.rs","byte_start":713354,"byte_end":713361,"line_start":221,"line_end":221,"column_start":12,"column_end":19},"name":"from_ty","qualname":"<TemplateInstantiation>::from_ty","value":"fn (ty: &clang::Type, ctx: &mut BindgenContext) -> Option<TemplateInstantiation>","parent":null,"children":[],"decl_id":null,"docs":" Parse a `TemplateInstantiation` from a clang `Type`.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2416},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/traversal.rs","byte_start":728386,"byte_end":728391,"line_start":366,"line_end":366,"column_start":10,"column_end":15},"name":"Extra","qualname":"::ir::traversal::Trace::Extra","value":"type Extra;","parent":{"krate":0,"index":2415},"children":[],"decl_id":null,"docs":" If a particular type needs extra information beyond what it has in\n `self` and `context` to find its referenced items, its implementation\n can define this associated type, forcing callers to pass the needed\n information through.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4164},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":733086,"byte_end":733090,"line_start":27,"line_end":27,"column_start":12,"column_end":16},"name":"Type","qualname":"::ir::ty::Type","value":"Type {  }","parent":null,"children":[{"krate":0,"index":4165},{"krate":0,"index":4166},{"krate":0,"index":4167},{"krate":0,"index":4168}],"decl_id":null,"docs":" The base representation of a type in bindgen.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2488},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":733845,"byte_end":733852,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"as_comp","qualname":"<Type>::as_comp","value":"fn (&self) -> Option<&CompInfo>","parent":null,"children":[],"decl_id":null,"docs":" Get the underlying `CompInfo` for this type, or `None` if this is some\n other kind of type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2489},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":734138,"byte_end":734149,"line_start":57,"line_end":57,"column_start":12,"column_end":23},"name":"as_comp_mut","qualname":"<Type>::as_comp_mut","value":"fn (&mut self) -> Option<&mut CompInfo>","parent":null,"children":[],"decl_id":null,"docs":" Get the underlying `CompInfo` for this type as a mutable reference, or\n `None` if this is some other kind of type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2490},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":734349,"byte_end":734352,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Type>::new","value":"fn (name: Option<String>, layout: Option<Layout>, kind: TypeKind, is_const: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Type`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2491},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":734637,"byte_end":734641,"line_start":80,"line_end":80,"column_start":12,"column_end":16},"name":"kind","qualname":"<Type>::kind","value":"fn (&self) -> &TypeKind","parent":null,"children":[],"decl_id":null,"docs":" Which kind of type is this?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2492},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":734754,"byte_end":734762,"line_start":85,"line_end":85,"column_start":12,"column_end":20},"name":"kind_mut","qualname":"<Type>::kind_mut","value":"fn (&mut self) -> &mut TypeKind","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to this type's kind.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2493},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":734864,"byte_end":734868,"line_start":90,"line_end":90,"column_start":12,"column_end":16},"name":"name","qualname":"<Type>::name","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get this type's name.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2495},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":735005,"byte_end":735021,"line_start":95,"line_end":95,"column_start":12,"column_end":28},"name":"is_block_pointer","qualname":"<Type>::is_block_pointer","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this is a block pointer type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2496},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":735198,"byte_end":735205,"line_start":103,"line_end":103,"column_start":12,"column_end":19},"name":"is_comp","qualname":"<Type>::is_comp","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a compound type?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2497},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":735366,"byte_end":735374,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"name":"is_union","qualname":"<Type>::is_union","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a union?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2498},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":735579,"byte_end":735592,"line_start":119,"line_end":119,"column_start":12,"column_end":25},"name":"is_type_param","qualname":"<Type>::is_type_param","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this type of kind `TypeKind::TypeParam`?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2499},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":735776,"byte_end":735801,"line_start":127,"line_end":127,"column_start":12,"column_end":37},"name":"is_template_instantiation","qualname":"<Type>::is_template_instantiation","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a template instantiation type?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2500},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":735993,"byte_end":736010,"line_start":135,"line_end":135,"column_start":12,"column_end":29},"name":"is_template_alias","qualname":"<Type>::is_template_alias","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a template alias type?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2501},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":736188,"byte_end":736199,"line_start":143,"line_end":143,"column_start":12,"column_end":23},"name":"is_function","qualname":"<Type>::is_function","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a function type?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2502},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":736369,"byte_end":736376,"line_start":151,"line_end":151,"column_start":12,"column_end":19},"name":"is_enum","qualname":"<Type>::is_enum","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this an enum type?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2503},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":736560,"byte_end":736584,"line_start":159,"line_end":159,"column_start":12,"column_end":36},"name":"is_builtin_or_type_param","qualname":"<Type>::is_builtin_or_type_param","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this either a builtin or named type?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2504},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":737045,"byte_end":737050,"line_start":175,"line_end":175,"column_start":12,"column_end":17},"name":"named","qualname":"<Type>::named","value":"fn (name: String) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new named type, with name `name`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2505},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":737258,"byte_end":737266,"line_start":181,"line_end":181,"column_start":12,"column_end":20},"name":"is_float","qualname":"<Type>::is_float","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a floating point type?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2506},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":737435,"byte_end":737442,"line_start":189,"line_end":189,"column_start":12,"column_end":19},"name":"is_bool","qualname":"<Type>::is_bool","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a boolean type?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2507},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":737621,"byte_end":737631,"line_start":197,"line_end":197,"column_start":12,"column_end":22},"name":"is_integer","qualname":"<Type>::is_integer","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this an integer type?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2508},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":737857,"byte_end":737867,"line_start":206,"line_end":206,"column_start":12,"column_end":22},"name":"as_integer","qualname":"<Type>::as_integer","value":"fn (&self) -> Option<IntKind>","parent":null,"children":[],"decl_id":null,"docs":" Cast this type to an integer kind, or `None` if it is not an integer\n type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2509},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":738070,"byte_end":738078,"line_start":214,"line_end":214,"column_start":12,"column_end":20},"name":"is_const","qualname":"<Type>::is_const","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a `const` qualified type?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2510},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":738181,"byte_end":738192,"line_start":219,"line_end":219,"column_start":12,"column_end":23},"name":"is_type_ref","qualname":"<Type>::is_type_ref","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a reference to another type?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2511},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":738430,"byte_end":738447,"line_start":228,"line_end":228,"column_start":12,"column_end":29},"name":"is_unresolved_ref","qualname":"<Type>::is_unresolved_ref","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this an unresolved reference?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2512},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":738642,"byte_end":738661,"line_start":236,"line_end":236,"column_start":12,"column_end":31},"name":"is_incomplete_array","qualname":"<Type>::is_incomplete_array","value":"fn (&self, ctx: &BindgenContext) -> Option<ItemId>","parent":null,"children":[],"decl_id":null,"docs":" Is this a incomplete array type?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2513},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":739152,"byte_end":739158,"line_start":253,"line_end":253,"column_start":12,"column_end":18},"name":"layout","qualname":"<Type>::layout","value":"fn (&self, ctx: &BindgenContext) -> Option<Layout>","parent":null,"children":[],"decl_id":null,"docs":" What is the layout of this type?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2515},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":740205,"byte_end":740226,"line_start":278,"line_end":278,"column_start":12,"column_end":33},"name":"is_invalid_type_param","qualname":"<Type>::is_invalid_type_param","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this named type is an invalid C++ identifier. This is done to\n avoid generating invalid code with some cases we can't handle, see:","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2519},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":740876,"byte_end":740890,"line_start":299,"line_end":299,"column_start":12,"column_end":26},"name":"sanitized_name","qualname":"<Type>::sanitized_name","value":"fn <'a> (&'a self, ctx: &BindgenContext) -> Option<Cow<'a, str>>","parent":null,"children":[],"decl_id":null,"docs":" Get this type's santizied name.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2522},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":741763,"byte_end":741777,"line_start":326,"line_end":326,"column_start":12,"column_end":26},"name":"canonical_type","qualname":"<Type>::canonical_type","value":"fn <'tr> (&'tr self, ctx: &'tr BindgenContext) -> &'tr Type","parent":null,"children":[],"decl_id":null,"docs":" See safe_canonical_type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2524},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":742286,"byte_end":742305,"line_start":339,"line_end":339,"column_start":12,"column_end":31},"name":"safe_canonical_type","qualname":"<Type>::safe_canonical_type","value":"fn <'tr> (&'tr self, ctx: &'tr BindgenContext) -> Option<&'tr Type>","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical type of this type, that is, the \"inner type\".","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2526},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":743667,"byte_end":743699,"line_start":378,"line_end":378,"column_start":12,"column_end":44},"name":"should_be_traced_unconditionally","qualname":"<Type>::should_be_traced_unconditionally","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" There are some types we don't want to stop at when finding an opaque\n item, so we can arrive to the proper item that needs to be generated.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4172},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":750278,"byte_end":750283,"line_start":609,"line_end":609,"column_start":5,"column_end":10},"name":"Float","qualname":"::ir::ty::FloatKind::Float","value":"FloatKind::Float","parent":{"krate":0,"index":4171},"children":[],"decl_id":null,"docs":" A `float`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4174},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":750309,"byte_end":750315,"line_start":611,"line_end":611,"column_start":5,"column_end":11},"name":"Double","qualname":"::ir::ty::FloatKind::Double","value":"FloatKind::Double","parent":{"krate":0,"index":4171},"children":[],"decl_id":null,"docs":" A `double`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4176},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":750346,"byte_end":750356,"line_start":613,"line_end":613,"column_start":5,"column_end":15},"name":"LongDouble","qualname":"::ir::ty::FloatKind::LongDouble","value":"FloatKind::LongDouble","parent":{"krate":0,"index":4171},"children":[],"decl_id":null,"docs":" A `long double`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4178},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":750386,"byte_end":750394,"line_start":615,"line_end":615,"column_start":5,"column_end":13},"name":"Float128","qualname":"::ir::ty::FloatKind::Float128","value":"FloatKind::Float128","parent":{"krate":0,"index":4171},"children":[],"decl_id":null,"docs":" A `__float128`.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4171},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":750243,"byte_end":750252,"line_start":607,"line_end":607,"column_start":10,"column_end":19},"name":"FloatKind","qualname":"::ir::ty::FloatKind","value":"FloatKind::{Float, Double, LongDouble, Float128}","parent":null,"children":[{"krate":0,"index":4172},{"krate":0,"index":4174},{"krate":0,"index":4176},{"krate":0,"index":4178}],"decl_id":null,"docs":" The kind of float this type represents.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4189},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":750515,"byte_end":750519,"line_start":622,"line_end":622,"column_start":5,"column_end":9},"name":"Void","qualname":"::ir::ty::TypeKind::Void","value":"TypeKind::Void","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":" The void type.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4191},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":750556,"byte_end":750563,"line_start":625,"line_end":625,"column_start":5,"column_end":12},"name":"NullPtr","qualname":"::ir::ty::TypeKind::NullPtr","value":"TypeKind::NullPtr","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":" The `nullptr_t` type.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4193},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":750631,"byte_end":750635,"line_start":628,"line_end":628,"column_start":5,"column_end":9},"name":"Comp","qualname":"::ir::ty::TypeKind::Comp","value":"TypeKind::Comp(CompInfo)","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":" A compound type, that is, a class, struct, or union.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4196},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":750826,"byte_end":750832,"line_start":633,"line_end":633,"column_start":5,"column_end":11},"name":"Opaque","qualname":"::ir::ty::TypeKind::Opaque","value":"TypeKind::Opaque","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":" An opaque type that we just don't understand. All usage of this shoulf\n result in an opaque blob of bytes generated from the containing type's\n layout.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4198},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":750937,"byte_end":750940,"line_start":637,"line_end":637,"column_start":5,"column_end":8},"name":"Int","qualname":"::ir::ty::TypeKind::Int","value":"TypeKind::Int(IntKind)","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":" An integer type, of a given kind. `bool` and `char` are also considered\n integers.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4201},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":750987,"byte_end":750992,"line_start":640,"line_end":640,"column_start":5,"column_end":10},"name":"Float","qualname":"::ir::ty::TypeKind::Float","value":"TypeKind::Float(FloatKind)","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":" A floating point type.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4204},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":751049,"byte_end":751056,"line_start":643,"line_end":643,"column_start":5,"column_end":12},"name":"Complex","qualname":"::ir::ty::TypeKind::Complex","value":"TypeKind::Complex(FloatKind)","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":" A complex floating point type.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4207},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":751138,"byte_end":751143,"line_start":646,"line_end":646,"column_start":5,"column_end":10},"name":"Alias","qualname":"::ir::ty::TypeKind::Alias","value":"TypeKind::Alias(TypeId)","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":" A type alias, with a name, that points to another type.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4210},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":751267,"byte_end":751280,"line_start":650,"line_end":650,"column_start":5,"column_end":18},"name":"TemplateAlias","qualname":"::ir::ty::TypeKind::TemplateAlias","value":"TypeKind::TemplateAlias(TypeId, Vec<TypeId>)","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":" A templated alias, pointing to an inner type, just as `Alias`, but with\n template parameters.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4214},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":751371,"byte_end":751377,"line_start":653,"line_end":653,"column_start":5,"column_end":11},"name":"Vector","qualname":"::ir::ty::TypeKind::Vector","value":"TypeKind::Vector(TypeId, usize)","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":" A packed vector type: element type, number of elements\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4218},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":751440,"byte_end":751445,"line_start":656,"line_end":656,"column_start":5,"column_end":10},"name":"Array","qualname":"::ir::ty::TypeKind::Array","value":"TypeKind::Array(TypeId, usize)","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":" An array of a type and a length.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4222},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":751516,"byte_end":751524,"line_start":659,"line_end":659,"column_start":5,"column_end":13},"name":"Function","qualname":"::ir::ty::TypeKind::Function","value":"TypeKind::Function(FunctionSig)","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":" A function type, with a given signature.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4225},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":751568,"byte_end":751572,"line_start":662,"line_end":662,"column_start":5,"column_end":9},"name":"Enum","qualname":"::ir::ty::TypeKind::Enum","value":"TypeKind::Enum(Enum)","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":" An `enum` type.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4228},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":751675,"byte_end":751682,"line_start":666,"line_end":666,"column_start":5,"column_end":12},"name":"Pointer","qualname":"::ir::ty::TypeKind::Pointer","value":"TypeKind::Pointer(TypeId)","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":" A pointer to a type. The bool field represents whether it's const or\n not.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4231},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":751734,"byte_end":751746,"line_start":669,"line_end":669,"column_start":5,"column_end":17},"name":"BlockPointer","qualname":"::ir::ty::TypeKind::BlockPointer","value":"TypeKind::BlockPointer(TypeId)","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":" A pointer to an Apple block.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4234},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":751811,"byte_end":751820,"line_start":672,"line_end":672,"column_start":5,"column_end":14},"name":"Reference","qualname":"::ir::ty::TypeKind::Reference","value":"TypeKind::Reference(TypeId)","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":" A reference to a type, as in: int& foo().\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4237},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":751946,"byte_end":751967,"line_start":676,"line_end":676,"column_start":5,"column_end":26},"name":"TemplateInstantiation","qualname":"::ir::ty::TypeKind::TemplateInstantiation","value":"TypeKind::TemplateInstantiation(TemplateInstantiation)","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":" An instantiation of an abstract template definition with a set of\n concrete template arguments.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4240},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":752355,"byte_end":752372,"line_start":685,"line_end":685,"column_start":5,"column_end":22},"name":"UnresolvedTypeRef","qualname":"::ir::ty::TypeKind::UnresolvedTypeRef","value":"TypeKind::UnresolvedTypeRef(clang::Type, clang::Cursor, Option<ItemId>)","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":" A reference to a yet-to-resolve type. This stores the clang cursor\n itself, and postpones its resolution.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4245},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":752644,"byte_end":752659,"line_start":696,"line_end":696,"column_start":5,"column_end":20},"name":"ResolvedTypeRef","qualname":"::ir::ty::TypeKind::ResolvedTypeRef","value":"TypeKind::ResolvedTypeRef(TypeId)","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":" An indirection to another type.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4248},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":752727,"byte_end":752736,"line_start":699,"line_end":699,"column_start":5,"column_end":14},"name":"TypeParam","qualname":"::ir::ty::TypeKind::TypeParam","value":"TypeKind::TypeParam","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":" A named type, that is, a template parameter.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4250},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":752810,"byte_end":752823,"line_start":702,"line_end":702,"column_start":5,"column_end":18},"name":"ObjCInterface","qualname":"::ir::ty::TypeKind::ObjCInterface","value":"TypeKind::ObjCInterface(ObjCInterface)","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":" Objective C interface. Always referenced through a pointer\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4253},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":752897,"byte_end":752903,"line_start":705,"line_end":705,"column_start":5,"column_end":11},"name":"ObjCId","qualname":"::ir::ty::TypeKind::ObjCId","value":"TypeKind::ObjCId","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":" Objective C 'id' type, points to any object\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4255},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":752944,"byte_end":752951,"line_start":708,"line_end":708,"column_start":5,"column_end":12},"name":"ObjCSel","qualname":"::ir::ty::TypeKind::ObjCSel","value":"TypeKind::ObjCSel","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":" Objective C selector type\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4188},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":750477,"byte_end":750485,"line_start":620,"line_end":620,"column_start":10,"column_end":18},"name":"TypeKind","qualname":"::ir::ty::TypeKind","value":"TypeKind::{Void, NullPtr, Comp, Opaque, Int, Float, Complex, Alias, TemplateAlias, Vector, Array, Function, Enum, Pointer, BlockPointer, Reference, TemplateInstantiation, UnresolvedTypeRef, ResolvedTypeRef, TypeParam, ObjCInterface, ObjCId, ObjCSel}","parent":null,"children":[{"krate":0,"index":4189},{"krate":0,"index":4191},{"krate":0,"index":4193},{"krate":0,"index":4196},{"krate":0,"index":4198},{"krate":0,"index":4201},{"krate":0,"index":4204},{"krate":0,"index":4207},{"krate":0,"index":4210},{"krate":0,"index":4214},{"krate":0,"index":4218},{"krate":0,"index":4222},{"krate":0,"index":4225},{"krate":0,"index":4228},{"krate":0,"index":4231},{"krate":0,"index":4234},{"krate":0,"index":4237},{"krate":0,"index":4240},{"krate":0,"index":4245},{"krate":0,"index":4248},{"krate":0,"index":4250},{"krate":0,"index":4253},{"krate":0,"index":4255}],"decl_id":null,"docs":" The different kinds of types that we can parse.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2549},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":753274,"byte_end":753287,"line_start":717,"line_end":717,"column_start":12,"column_end":25},"name":"from_clang_ty","qualname":"<Type>::from_clang_ty","value":"fn (potential_id: ItemId, ty: &clang::Type, location: Cursor, parent_id: Option<ItemId>, ctx: &mut BindgenContext) -> Result<ParseResult<Self>, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" This is another of the nasty methods. This one is the one that takes\n care of the core logic of converting a clang type to a `Type`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4260},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/var.rs","byte_start":779179,"byte_end":779183,"line_start":20,"line_end":20,"column_start":5,"column_end":9},"name":"Bool","qualname":"::ir::var::VarType::Bool","value":"VarType::Bool(bool)","parent":{"krate":0,"index":4259},"children":[],"decl_id":null,"docs":" A boolean.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4263},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/var.rs","byte_start":779215,"byte_end":779218,"line_start":22,"line_end":22,"column_start":5,"column_end":8},"name":"Int","qualname":"::ir::var::VarType::Int","value":"VarType::Int(i64)","parent":{"krate":0,"index":4259},"children":[],"decl_id":null,"docs":" An integer.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4266},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/var.rs","byte_start":779262,"byte_end":779267,"line_start":24,"line_end":24,"column_start":5,"column_end":10},"name":"Float","qualname":"::ir::var::VarType::Float","value":"VarType::Float(f64)","parent":{"krate":0,"index":4259},"children":[],"decl_id":null,"docs":" A floating point number.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4269},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/var.rs","byte_start":779299,"byte_end":779303,"line_start":26,"line_end":26,"column_start":5,"column_end":9},"name":"Char","qualname":"::ir::var::VarType::Char","value":"VarType::Char(u8)","parent":{"krate":0,"index":4259},"children":[],"decl_id":null,"docs":" A character.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4272},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/var.rs","byte_start":779366,"byte_end":779372,"line_start":28,"line_end":28,"column_start":5,"column_end":11},"name":"String","qualname":"::ir::var::VarType::String","value":"VarType::String(Vec<u8>)","parent":{"krate":0,"index":4259},"children":[],"decl_id":null,"docs":" A string, not necessarily well-formed utf-8.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4259},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/var.rs","byte_start":779146,"byte_end":779153,"line_start":18,"line_end":18,"column_start":10,"column_end":17},"name":"VarType","qualname":"::ir::var::VarType","value":"VarType::{Bool, Int, Float, Char, String}","parent":null,"children":[{"krate":0,"index":4260},{"krate":0,"index":4263},{"krate":0,"index":4266},{"krate":0,"index":4269},{"krate":0,"index":4272}],"decl_id":null,"docs":" The type for a constant variable.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4277},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/var.rs","byte_start":779476,"byte_end":779479,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"Var","qualname":"::ir::var::Var","value":"Var {  }","parent":null,"children":[{"krate":0,"index":4278},{"krate":0,"index":4279},{"krate":0,"index":4280},{"krate":0,"index":4281},{"krate":0,"index":4282}],"decl_id":null,"docs":" A `Var` is our intermediate representation of a variable.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2579},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/var.rs","byte_start":779873,"byte_end":779876,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"new","qualname":"<Var>::new","value":"fn (name: String, mangled_name: Option<String>, ty: TypeId, val: Option<VarType>, is_const: bool) -> Var","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Var`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2580},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/var.rs","byte_start":780247,"byte_end":780255,"line_start":66,"line_end":66,"column_start":12,"column_end":20},"name":"is_const","qualname":"<Var>::is_const","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this variable `const` qualified?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2581},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/var.rs","byte_start":780366,"byte_end":780369,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"val","qualname":"<Var>::val","value":"fn (&self) -> Option<&VarType>","parent":null,"children":[],"decl_id":null,"docs":" The value of this constant variable, if any.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2582},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/var.rs","byte_start":780477,"byte_end":780479,"line_start":76,"line_end":76,"column_start":12,"column_end":14},"name":"ty","qualname":"<Var>::ty","value":"fn (&self) -> TypeId","parent":null,"children":[],"decl_id":null,"docs":" Get this variable's type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2583},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/var.rs","byte_start":780567,"byte_end":780571,"line_start":81,"line_end":81,"column_start":12,"column_end":16},"name":"name","qualname":"<Var>::name","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Get this variable's name.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2584},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/var.rs","byte_start":780668,"byte_end":780680,"line_start":86,"line_end":86,"column_start":12,"column_end":24},"name":"mangled_name","qualname":"<Var>::mangled_name","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get this variable's mangled name.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4286},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/parse.rs","byte_start":791095,"byte_end":791102,"line_start":12,"line_end":12,"column_start":5,"column_end":12},"name":"Recurse","qualname":"::parse::ParseError::Recurse","value":"ParseError::Recurse","parent":{"krate":0,"index":4285},"children":[],"decl_id":null,"docs":" Recurse down the current AST node's children.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4288},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/parse.rs","byte_start":791262,"byte_end":791270,"line_start":15,"line_end":15,"column_start":5,"column_end":13},"name":"Continue","qualname":"::parse::ParseError::Continue","value":"ParseError::Continue","parent":{"krate":0,"index":4285},"children":[],"decl_id":null,"docs":" Continue on to the next sibling AST node, or back up to the parent's\n siblings if we've exhausted all of this node's siblings (and so on).\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4285},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/parse.rs","byte_start":791024,"byte_end":791034,"line_start":10,"line_end":10,"column_start":10,"column_end":20},"name":"ParseError","qualname":"::parse::ParseError","value":"ParseError::{Recurse, Continue}","parent":null,"children":[{"krate":0,"index":4286},{"krate":0,"index":4288}],"decl_id":null,"docs":" Not so much an error in the traditional sense, but a control flow message\n when walking over Clang's AST with a cursor.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4294},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/parse.rs","byte_start":791459,"byte_end":791474,"line_start":23,"line_end":23,"column_start":5,"column_end":20},"name":"AlreadyResolved","qualname":"::parse::ParseResult::AlreadyResolved","value":"ParseResult::AlreadyResolved(ItemId)","parent":{"krate":0,"index":4292},"children":[],"decl_id":null,"docs":" We've already resolved this item before, here is the extant `ItemId` for\n it.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4297},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/parse.rs","byte_start":791617,"byte_end":791620,"line_start":27,"line_end":27,"column_start":5,"column_end":8},"name":"New","qualname":"::parse::ParseResult::New","value":"ParseResult::New(T, Option<clang::Cursor>)","parent":{"krate":0,"index":4292},"children":[],"decl_id":null,"docs":" This is a newly parsed item. If the cursor is `Some`, it points to the\n AST node where the new `T` was declared.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4292},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/parse.rs","byte_start":791345,"byte_end":791356,"line_start":20,"line_end":20,"column_start":10,"column_end":21},"name":"ParseResult","qualname":"::parse::ParseResult","value":"ParseResult::{AlreadyResolved, New}","parent":null,"children":[{"krate":0,"index":4294},{"krate":0,"index":4297}],"decl_id":null,"docs":" The result of parsing a Clang AST node.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4313},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/time.rs","byte_start":796746,"byte_end":796751,"line_start":6,"line_end":6,"column_start":12,"column_end":17},"name":"Timer","qualname":"::time::Timer","value":"Timer {  }","parent":null,"children":[{"krate":0,"index":4315},{"krate":0,"index":4316},{"krate":0,"index":4317}],"decl_id":null,"docs":" RAII timer to measure how long phases take.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2653},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/time.rs","byte_start":796971,"byte_end":796974,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"new","qualname":"<Timer>::new","value":"fn (name: &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Timer with the given name, and starts it. By default,\n will print to stderr when it is `drop`'d\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2654},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/time.rs","byte_start":797210,"byte_end":797221,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"with_output","qualname":"<Timer>::with_output","value":"fn (mut self, output: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not the Timer will print a message\n when it is dropped.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2655},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/time.rs","byte_start":797377,"byte_end":797384,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Timer>::elapsed","value":"fn (&self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the time elapsed since the timer's creation\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2660},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/callbacks.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"callbacks","qualname":"::callbacks","value":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/callbacks.rs","parent":null,"children":[{"krate":0,"index":2661},{"krate":0,"index":2664},{"krate":0,"index":2665},{"krate":0,"index":2666},{"krate":0,"index":4321},{"krate":0,"index":4336},{"krate":0,"index":4334},{"krate":0,"index":4332},{"krate":0,"index":4329},{"krate":0,"index":4330},{"krate":0,"index":4326},{"krate":0,"index":4327},{"krate":0,"index":2667},{"krate":0,"index":2669}],"decl_id":null,"docs":" A public API for more fine-grained customization of bindgen behavior.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4322},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/callbacks.rs","byte_start":798445,"byte_end":798451,"line_start":13,"line_end":13,"column_start":5,"column_end":11},"name":"Ignore","qualname":"::callbacks::MacroParsingBehavior::Ignore","value":"MacroParsingBehavior::Ignore","parent":{"krate":0,"index":4321},"children":[],"decl_id":null,"docs":" Ignore the macro, generating no code for it, or anything that depends on\n it.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4324},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/callbacks.rs","byte_start":798516,"byte_end":798523,"line_start":15,"line_end":15,"column_start":5,"column_end":12},"name":"Default","qualname":"::callbacks::MacroParsingBehavior::Default","value":"MacroParsingBehavior::Default","parent":{"krate":0,"index":4321},"children":[],"decl_id":null,"docs":" The default behavior bindgen would have otherwise.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4321},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/callbacks.rs","byte_start":798325,"byte_end":798345,"line_start":10,"line_end":10,"column_start":10,"column_end":30},"name":"MacroParsingBehavior","qualname":"::callbacks::MacroParsingBehavior","value":"MacroParsingBehavior::{Ignore, Default}","parent":null,"children":[{"krate":0,"index":4322},{"krate":0,"index":4324}],"decl_id":null,"docs":" An enum to allow ignoring parsing of macros.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2669},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/callbacks.rs","byte_start":798739,"byte_end":798753,"line_start":26,"line_end":26,"column_start":11,"column_end":25},"name":"ParseCallbacks","qualname":"::callbacks::ParseCallbacks","value":"ParseCallbacks: fmt::Debug + UnwindSafe","parent":null,"children":[{"krate":0,"index":2670},{"krate":0,"index":2671},{"krate":0,"index":2672},{"krate":0,"index":2673},{"krate":0,"index":2674},{"krate":0,"index":2675}],"decl_id":null,"docs":" A trait to allow configuring different kinds of types in different\n situations.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2670},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/callbacks.rs","byte_start":798857,"byte_end":798873,"line_start":28,"line_end":28,"column_start":8,"column_end":24},"name":"will_parse_macro","qualname":"::callbacks::ParseCallbacks::will_parse_macro","value":"fn (&self, _name: &str) -> MacroParsingBehavior","parent":{"krate":0,"index":2669},"children":[],"decl_id":null,"docs":" This function will be run on every macro that is identified.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2671},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/callbacks.rs","byte_start":799125,"byte_end":799134,"line_start":34,"line_end":34,"column_start":8,"column_end":17},"name":"int_macro","qualname":"::callbacks::ParseCallbacks::int_macro","value":"fn (&self, _name: &str, _value: i64) -> Option<IntKind>","parent":{"krate":0,"index":2669},"children":[],"decl_id":null,"docs":" The integer kind an integer macro should have, given a name and the\n value of that macro, or `None` if you want the default to be chosen.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2672},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/callbacks.rs","byte_start":799407,"byte_end":799416,"line_start":40,"line_end":40,"column_start":8,"column_end":17},"name":"str_macro","qualname":"::callbacks::ParseCallbacks::str_macro","value":"fn (&self, _name: &str, _value: &[u8]) -> ()","parent":{"krate":0,"index":2669},"children":[],"decl_id":null,"docs":" This will be run on every string macro. The callback can not influence the further\n treatment of the macro, but may use the value to generate additional code or configuration.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2673},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/callbacks.rs","byte_start":799602,"byte_end":799623,"line_start":44,"line_end":44,"column_start":8,"column_end":29},"name":"enum_variant_behavior","qualname":"::callbacks::ParseCallbacks::enum_variant_behavior","value":"fn (&self, _enum_name: Option<&str>, _original_variant_name: &str, _variant_value: EnumVariantValue) -> Option<EnumVariantCustomBehavior>","parent":{"krate":0,"index":2669},"children":[],"decl_id":null,"docs":" This function should return whether, given an enum variant\n name, and value, this enum variant will forcibly be a constant.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2674},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/callbacks.rs","byte_start":799904,"byte_end":799921,"line_start":54,"line_end":54,"column_start":8,"column_end":25},"name":"enum_variant_name","qualname":"::callbacks::ParseCallbacks::enum_variant_name","value":"fn (&self, _enum_name: Option<&str>, _original_variant_name: &str, _variant_value: EnumVariantValue) -> Option<String>","parent":{"krate":0,"index":2669},"children":[],"decl_id":null,"docs":" Allows to rename an enum variant, replacing `_original_variant_name`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2675},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/callbacks.rs","byte_start":800172,"byte_end":800181,"line_start":64,"line_end":64,"column_start":8,"column_end":17},"name":"item_name","qualname":"::callbacks::ParseCallbacks::item_name","value":"fn (&self, _original_item_name: &str) -> Option<String>","parent":{"krate":0,"index":2669},"children":[],"decl_id":null,"docs":" Allows to rename an item, replacing `_original_item_name`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4337},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":3153,"byte_end":3166,"line_start":114,"line_end":114,"column_start":16,"column_end":29},"name":"CodegenConfig","qualname":"::CodegenConfig","value":"CodegenConfig {  }","parent":null,"children":[{"krate":0,"index":4338}],"decl_id":null,"docs":" A type used to indicate which kind of items we have to generate.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4379},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":3231,"byte_end":3240,"line_start":116,"line_end":116,"column_start":15,"column_end":24},"name":"FUNCTIONS","qualname":"::CodegenConfig::FUNCTIONS","value":"CodegenConfig","parent":{"krate":0,"index":4378},"children":[],"decl_id":null,"docs":" Whether to generate functions.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4380},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":3304,"byte_end":3309,"line_start":118,"line_end":118,"column_start":15,"column_end":20},"name":"TYPES","qualname":"::CodegenConfig::TYPES","value":"CodegenConfig","parent":{"krate":0,"index":4378},"children":[],"decl_id":null,"docs":" Whether to generate types.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4381},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":3377,"byte_end":3381,"line_start":120,"line_end":120,"column_start":15,"column_end":19},"name":"VARS","qualname":"::CodegenConfig::VARS","value":"CodegenConfig","parent":{"krate":0,"index":4378},"children":[],"decl_id":null,"docs":" Whether to generate constants.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4382},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":3447,"byte_end":3454,"line_start":122,"line_end":122,"column_start":15,"column_end":22},"name":"METHODS","qualname":"::CodegenConfig::METHODS","value":"CodegenConfig","parent":{"krate":0,"index":4378},"children":[],"decl_id":null,"docs":" Whether to generate methods.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4383},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":3524,"byte_end":3536,"line_start":124,"line_end":124,"column_start":15,"column_end":27},"name":"CONSTRUCTORS","qualname":"::CodegenConfig::CONSTRUCTORS","value":"CodegenConfig","parent":{"krate":0,"index":4378},"children":[],"decl_id":null,"docs":" Whether to generate constructors\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4384},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":3606,"byte_end":3617,"line_start":126,"line_end":126,"column_start":15,"column_end":26},"name":"DESTRUCTORS","qualname":"::CodegenConfig::DESTRUCTORS","value":"CodegenConfig","parent":{"krate":0,"index":4378},"children":[],"decl_id":null,"docs":" Whether to generate destructors.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2716},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":3724,"byte_end":3733,"line_start":132,"line_end":132,"column_start":12,"column_end":21},"name":"functions","qualname":"<CodegenConfig>::functions","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if functions should be generated.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2717},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":3867,"byte_end":3872,"line_start":137,"line_end":137,"column_start":12,"column_end":17},"name":"types","qualname":"<CodegenConfig>::types","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if types should be generated.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2718},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":4006,"byte_end":4010,"line_start":142,"line_end":142,"column_start":12,"column_end":16},"name":"vars","qualname":"<CodegenConfig>::vars","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if constants should be generated.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2719},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":4140,"byte_end":4147,"line_start":147,"line_end":147,"column_start":12,"column_end":19},"name":"methods","qualname":"<CodegenConfig>::methods","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if methds should be generated.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2720},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":4286,"byte_end":4298,"line_start":152,"line_end":152,"column_start":12,"column_end":24},"name":"constructors","qualname":"<CodegenConfig>::constructors","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if constructors should be generated.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2721},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":4441,"byte_end":4452,"line_start":157,"line_end":157,"column_start":12,"column_end":23},"name":"destructors","qualname":"<CodegenConfig>::destructors","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if destructors should be generated.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4448},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":5753,"byte_end":5760,"line_start":202,"line_end":202,"column_start":12,"column_end":19},"name":"Builder","qualname":"::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":4449},{"krate":0,"index":4450},{"krate":0,"index":4451}],"decl_id":null,"docs":" Configure and generate Rust bindings for a C/C++ header.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2724},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":6009,"byte_end":6016,"line_start":210,"line_end":210,"column_start":8,"column_end":15},"name":"builder","qualname":"::builder","value":"fn () -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Construct a new [`Builder`](./struct.Builder.html).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2726},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":6153,"byte_end":6171,"line_start":216,"line_end":216,"column_start":12,"column_end":30},"name":"command_line_flags","qualname":"<Builder>::command_line_flags","value":"fn (&self) -> Vec<String>","parent":null,"children":[],"decl_id":null,"docs":" Generates the command line flags use for creating `Builder`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2744},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":18098,"byte_end":18104,"line_start":614,"line_end":614,"column_start":12,"column_end":18},"name":"header","qualname":"<Builder>::header","value":"fn <T> (mut self, header: T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Add an input C/C++ header to generate bindings for.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2746},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":18367,"byte_end":18382,"line_start":622,"line_end":622,"column_start":12,"column_end":27},"name":"header_contents","qualname":"<Builder>::header_contents","value":"fn (mut self, name: &str, contents: &str) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Add `contents` as an input C/C++ header named `name`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2747},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":18645,"byte_end":18656,"line_start":631,"line_end":631,"column_start":12,"column_end":23},"name":"rust_target","qualname":"<Builder>::rust_target","value":"fn (mut self, rust_target: RustTarget) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the rust target","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2748},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":18846,"byte_end":18868,"line_start":637,"line_end":637,"column_start":12,"column_end":34},"name":"disable_untagged_union","qualname":"<Builder>::disable_untagged_union","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Disable support for native Rust unions, if supported.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2749},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":19017,"byte_end":19033,"line_start":643,"line_end":643,"column_start":12,"column_end":28},"name":"emit_ir_graphviz","qualname":"<Builder>::emit_ir_graphviz","value":"fn <T> (mut self, path: T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Set the output graphviz file.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2751},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":19540,"byte_end":19557,"line_start":657,"line_end":657,"column_start":12,"column_end":29},"name":"generate_comments","qualname":"<Builder>::generate_comments","value":"fn (mut self, doit: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Whether the generated bindings should contain documentation comments or\n not.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2752},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":21041,"byte_end":21062,"line_start":689,"line_end":689,"column_start":12,"column_end":33},"name":"whitelist_recursively","qualname":"<Builder>::whitelist_recursively","value":"fn (mut self, doit: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Whether to whitelist recursively or not. Defaults to true.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2753},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":21321,"byte_end":21338,"line_start":696,"line_end":696,"column_start":12,"column_end":29},"name":"objc_extern_crate","qualname":"<Builder>::objc_extern_crate","value":"fn (mut self, doit: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generate `#[macro_use] extern crate objc;` instead of `use objc;`\n in the prologue of the files generated from objective-c files\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2754},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":21516,"byte_end":21530,"line_start":702,"line_end":702,"column_start":12,"column_end":26},"name":"generate_block","qualname":"<Builder>::generate_block","value":"fn (mut self, doit: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generate proper block signatures instead of void pointers.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2755},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":21784,"byte_end":21802,"line_start":709,"line_end":709,"column_start":12,"column_end":30},"name":"block_extern_crate","qualname":"<Builder>::block_extern_crate","value":"fn (mut self, doit: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generate `#[macro_use] extern crate block;` instead of `use block;`\n in the prologue of the files generated from apple block files\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2756},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":22284,"byte_end":22304,"line_start":721,"line_end":721,"column_start":12,"column_end":32},"name":"trust_clang_mangling","qualname":"<Builder>::trust_clang_mangling","value":"fn (mut self, doit: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Whether to use the clang-provided name mangling. This is true by default\n and probably needed for C++ features.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2757},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":22568,"byte_end":22577,"line_start":729,"line_end":729,"column_start":12,"column_end":21},"name":"hide_type","qualname":"<Builder>::hide_type","value":"fn <T> (self, arg: T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Hide the given type from the generated bindings. Regular expressions are\n supported.\n","sig":null,"attributes":[{"value":"deprecated(note = \"Use blacklist_type instead\")","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":22506,"byte_end":22556,"line_start":728,"line_end":728,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2759},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":22771,"byte_end":22785,"line_start":735,"line_end":735,"column_start":12,"column_end":26},"name":"blacklist_type","qualname":"<Builder>::blacklist_type","value":"fn <T> (mut self, arg: T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Hide the given type from the generated bindings. Regular expressions are\n supported.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2761},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":23019,"byte_end":23037,"line_start":742,"line_end":742,"column_start":12,"column_end":30},"name":"blacklist_function","qualname":"<Builder>::blacklist_function","value":"fn <T> (mut self, arg: T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Hide the given function from the generated bindings. Regular expressions\n are supported.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2763},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":23337,"byte_end":23351,"line_start":750,"line_end":750,"column_start":12,"column_end":26},"name":"blacklist_item","qualname":"<Builder>::blacklist_item","value":"fn <T> (mut self, arg: T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Hide the given item from the generated bindings, regardless of\n whether it's a type, function, module, etc. Regular\n expressions are supported.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2765},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":23590,"byte_end":23601,"line_start":757,"line_end":757,"column_start":12,"column_end":23},"name":"opaque_type","qualname":"<Builder>::opaque_type","value":"fn <T> (mut self, arg: T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Treat the given type as opaque in the generated bindings. Regular\n expressions are supported.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2767},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":23958,"byte_end":23974,"line_start":766,"line_end":766,"column_start":12,"column_end":28},"name":"whitelisted_type","qualname":"<Builder>::whitelisted_type","value":"fn <T> (self, arg: T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Whitelist the given type so that it (and all types that it transitively\n refers to) appears in the generated bindings. Regular expressions are\n supported.\n","sig":null,"attributes":[{"value":"deprecated(note = \"use whitelist_type instead\")","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":23896,"byte_end":23946,"line_start":765,"line_end":765,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2769},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":24245,"byte_end":24259,"line_start":773,"line_end":773,"column_start":12,"column_end":26},"name":"whitelist_type","qualname":"<Builder>::whitelist_type","value":"fn <T> (mut self, arg: T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Whitelist the given type so that it (and all types that it transitively\n refers to) appears in the generated bindings. Regular expressions are\n supported.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2771},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":24570,"byte_end":24588,"line_start":781,"line_end":781,"column_start":12,"column_end":30},"name":"whitelist_function","qualname":"<Builder>::whitelist_function","value":"fn <T> (mut self, arg: T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Whitelist the given function so that it (and all types that it\n transitively refers to) appears in the generated bindings. Regular\n expressions are supported.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2773},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":24879,"byte_end":24899,"line_start":790,"line_end":790,"column_start":12,"column_end":32},"name":"whitelisted_function","qualname":"<Builder>::whitelisted_function","value":"fn <T> (self, arg: T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Whitelist the given function.","sig":null,"attributes":[{"value":"deprecated(note = \"use whitelist_function instead\")","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":24813,"byte_end":24867,"line_start":789,"line_end":789,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2775},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":25178,"byte_end":25191,"line_start":797,"line_end":797,"column_start":12,"column_end":25},"name":"whitelist_var","qualname":"<Builder>::whitelist_var","value":"fn <T> (mut self, arg: T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Whitelist the given variable so that it (and all types that it\n transitively refers to) appears in the generated bindings. Regular\n expressions are supported.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2777},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":25467,"byte_end":25482,"line_start":806,"line_end":806,"column_start":12,"column_end":27},"name":"whitelisted_var","qualname":"<Builder>::whitelisted_var","value":"fn <T> (self, arg: T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Whitelist the given variable.","sig":null,"attributes":[{"value":"deprecated(note = \"use whitelist_var instead\")","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":25406,"byte_end":25455,"line_start":805,"line_end":805,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2779},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":25635,"byte_end":25653,"line_start":811,"line_end":811,"column_start":12,"column_end":30},"name":"default_enum_style","qualname":"<Builder>::default_enum_style","value":"fn (mut self, arg: codegen::EnumVariation) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Set the default style of code to generate for enums\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2780},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":26060,"byte_end":26073,"line_start":824,"line_end":824,"column_start":12,"column_end":25},"name":"bitfield_enum","qualname":"<Builder>::bitfield_enum","value":"fn <T> (mut self, arg: T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Mark the given enum (or set of enums, if using a pattern) as being\n bitfield-like. Regular expressions are supported.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2782},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":26634,"byte_end":26648,"line_start":838,"line_end":838,"column_start":12,"column_end":26},"name":"rustified_enum","qualname":"<Builder>::rustified_enum","value":"fn <T> (mut self, arg: T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Mark the given enum (or set of enums, if using a pattern) as a Rust\n enum.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2784},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":27018,"byte_end":27047,"line_start":848,"line_end":848,"column_start":12,"column_end":41},"name":"rustified_non_exhaustive_enum","qualname":"<Builder>::rustified_non_exhaustive_enum","value":"fn <T> (mut self, arg: T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Mark the given enum (or set of enums, if using a pattern) as a Rust\n enum with the #[non_exhaustive] attribute.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2786},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":27347,"byte_end":27362,"line_start":858,"line_end":858,"column_start":12,"column_end":27},"name":"constified_enum","qualname":"<Builder>::constified_enum","value":"fn <T> (mut self, arg: T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Mark the given enum (or set of enums, if using a pattern) as a set of\n constants that are not to be put into a module.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2788},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":27764,"byte_end":27786,"line_start":868,"line_end":868,"column_start":12,"column_end":34},"name":"constified_enum_module","qualname":"<Builder>::constified_enum_module","value":"fn <T> (mut self, arg: T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Mark the given enum (or set of enums, if using a pattern) as a set of\n constants that should be put into a module.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2790},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":28044,"byte_end":28052,"line_start":875,"line_end":875,"column_start":12,"column_end":20},"name":"raw_line","qualname":"<Builder>::raw_line","value":"fn <T> (mut self, arg: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a string to prepend to the generated bindings. The string is passed\n through without any modification.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2792},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":28237,"byte_end":28252,"line_start":881,"line_end":881,"column_start":12,"column_end":27},"name":"module_raw_line","qualname":"<Builder>::module_raw_line","value":"fn <T, U> (mut self, mod_: T, line: U) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a given line to the beginning of module `mod`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2795},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":28608,"byte_end":28624,"line_start":895,"line_end":895,"column_start":12,"column_end":28},"name":"module_raw_lines","qualname":"<Builder>::module_raw_lines","value":"fn <T, I> (mut self, mod_: T, lines: I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a given set of lines to the beginning of module `mod`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2798},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":29033,"byte_end":29042,"line_start":910,"line_end":910,"column_start":12,"column_end":21},"name":"clang_arg","qualname":"<Builder>::clang_arg","value":"fn <T> (mut self, arg: T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Add an argument to be passed straight through to clang.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2800},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":29234,"byte_end":29244,"line_start":916,"line_end":916,"column_start":12,"column_end":22},"name":"clang_args","qualname":"<Builder>::clang_args","value":"fn <I> (mut self, iter: I) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Add arguments to be passed straight through to clang.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2802},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":29574,"byte_end":29587,"line_start":929,"line_end":929,"column_start":12,"column_end":25},"name":"emit_builtins","qualname":"<Builder>::emit_builtins","value":"fn (mut self) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Emit bindings for builtin definitions (for example `__builtin_va_list`)\n in the generated Rust.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2803},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":29739,"byte_end":29756,"line_start":935,"line_end":935,"column_start":12,"column_end":29},"name":"no_convert_floats","qualname":"<Builder>::no_convert_floats","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Avoid converting floats to `f32`/`f64` by default.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2804},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":29907,"byte_end":29919,"line_start":941,"line_end":941,"column_start":12,"column_end":24},"name":"layout_tests","qualname":"<Builder>::layout_tests","value":"fn (mut self, doit: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether layout tests should be generated.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2805},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":30116,"byte_end":30126,"line_start":947,"line_end":947,"column_start":12,"column_end":22},"name":"impl_debug","qualname":"<Builder>::impl_debug","value":"fn (mut self, doit: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `Debug` should be implemented, if it can not be derived automatically.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2806},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":30325,"byte_end":30339,"line_start":953,"line_end":953,"column_start":12,"column_end":26},"name":"impl_partialeq","qualname":"<Builder>::impl_partialeq","value":"fn (mut self, doit: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `PartialEq` should be implemented, if it can not be derived automatically.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2807},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":30504,"byte_end":30515,"line_start":959,"line_end":959,"column_start":12,"column_end":23},"name":"derive_copy","qualname":"<Builder>::derive_copy","value":"fn (mut self, doit: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `Copy` should be derived by default.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2808},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":30678,"byte_end":30690,"line_start":965,"line_end":965,"column_start":12,"column_end":24},"name":"derive_debug","qualname":"<Builder>::derive_debug","value":"fn (mut self, doit: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `Debug` should be derived by default.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2809},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":30856,"byte_end":30870,"line_start":971,"line_end":971,"column_start":12,"column_end":26},"name":"derive_default","qualname":"<Builder>::derive_default","value":"fn (mut self, doit: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `Default` should be derived by default.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2810},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":31035,"byte_end":31046,"line_start":977,"line_end":977,"column_start":12,"column_end":23},"name":"derive_hash","qualname":"<Builder>::derive_hash","value":"fn (mut self, doit: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `Hash` should be derived by default.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2811},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":31342,"byte_end":31359,"line_start":985,"line_end":985,"column_start":12,"column_end":29},"name":"derive_partialord","qualname":"<Builder>::derive_partialord","value":"fn (mut self, doit: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `PartialOrd` should be derived by default.\n If we don't compute partialord, we also cannot compute\n ord. Set the derive_ord to `false` when doit is `false`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2812},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":31719,"byte_end":31729,"line_start":996,"line_end":996,"column_start":12,"column_end":22},"name":"derive_ord","qualname":"<Builder>::derive_ord","value":"fn (mut self, doit: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `Ord` should be derived by default.\n We can't compute `Ord` without computing `PartialOrd`,\n so we set the same option to derive_partialord.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2813},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":32084,"byte_end":32100,"line_start":1006,"line_end":1006,"column_start":12,"column_end":28},"name":"derive_partialeq","qualname":"<Builder>::derive_partialeq","value":"fn (mut self, doit: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `PartialEq` should be derived by default.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2814},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":32480,"byte_end":32489,"line_start":1018,"line_end":1018,"column_start":12,"column_end":21},"name":"derive_eq","qualname":"<Builder>::derive_eq","value":"fn (mut self, doit: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `Eq` should be derived by default.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2815},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":32762,"byte_end":32773,"line_start":1028,"line_end":1028,"column_start":12,"column_end":23},"name":"time_phases","qualname":"<Builder>::time_phases","value":"fn (mut self, doit: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether or not to time bindgen phases, and print information to\n stderr.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2816},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":32902,"byte_end":32916,"line_start":1034,"line_end":1034,"column_start":12,"column_end":26},"name":"emit_clang_ast","qualname":"<Builder>::emit_clang_ast","value":"fn (mut self) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Emit Clang AST.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2817},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":33026,"byte_end":33033,"line_start":1040,"line_end":1040,"column_start":12,"column_end":19},"name":"emit_ir","qualname":"<Builder>::emit_ir","value":"fn (mut self) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Emit IR.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2818},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":33156,"byte_end":33177,"line_start":1046,"line_end":1046,"column_start":12,"column_end":33},"name":"enable_cxx_namespaces","qualname":"<Builder>::enable_cxx_namespaces","value":"fn (mut self) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Enable C++ namespaces.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2819},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":33594,"byte_end":33629,"line_start":1058,"line_end":1058,"column_start":12,"column_end":47},"name":"enable_function_attribute_detection","qualname":"<Builder>::enable_function_attribute_detection","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enable detecting must_use attributes on C functions.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2820},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":34244,"byte_end":34268,"line_start":1076,"line_end":1076,"column_start":12,"column_end":36},"name":"disable_name_namespacing","qualname":"<Builder>::disable_name_namespacing","value":"fn (mut self) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Disable name auto-namespacing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2821},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":35541,"byte_end":35571,"line_start":1109,"line_end":1109,"column_start":12,"column_end":42},"name":"conservative_inline_namespaces","qualname":"<Builder>::conservative_inline_namespaces","value":"fn (mut self) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Treat inline namespaces conservatively.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2822},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":35961,"byte_end":35986,"line_start":1119,"line_end":1119,"column_start":12,"column_end":37},"name":"generate_inline_functions","qualname":"<Builder>::generate_inline_functions","value":"fn (mut self, doit: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Whether inline functions should be generated or not.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2823},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":36131,"byte_end":36147,"line_start":1125,"line_end":1125,"column_start":12,"column_end":28},"name":"ignore_functions","qualname":"<Builder>::ignore_functions","value":"fn (mut self) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Ignore functions.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2824},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":36296,"byte_end":36310,"line_start":1131,"line_end":1131,"column_start":12,"column_end":26},"name":"ignore_methods","qualname":"<Builder>::ignore_methods","value":"fn (mut self) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Ignore methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2825},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":36586,"byte_end":36599,"line_start":1138,"line_end":1138,"column_start":12,"column_end":25},"name":"unstable_rust","qualname":"<Builder>::unstable_rust","value":"fn (self, doit: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Avoid generating any unstable Rust, such as Rust unions, in the generated bindings.\n","sig":null,"attributes":[{"value":"deprecated(note = \"please use `rust_target` instead\")","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":36518,"byte_end":36574,"line_start":1137,"line_end":1137,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2826},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":36873,"byte_end":36881,"line_start":1148,"line_end":1148,"column_start":12,"column_end":20},"name":"use_core","qualname":"<Builder>::use_core","value":"fn (mut self) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Use core instead of libstd in the generated bindings.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2827},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":37050,"byte_end":37063,"line_start":1154,"line_end":1154,"column_start":12,"column_end":25},"name":"ctypes_prefix","qualname":"<Builder>::ctypes_prefix","value":"fn <T> (mut self, prefix: T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Use the given prefix for the raw types instead of `::std::os::raw`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2829},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":37351,"byte_end":37366,"line_start":1161,"line_end":1161,"column_start":12,"column_end":27},"name":"parse_callbacks","qualname":"<Builder>::parse_callbacks","value":"fn (mut self, cb: Box<dyn callbacks::ParseCallbacks>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allows configuring types in different situations, see the\n [`ParseCallbacks`](./callbacks/trait.ParseCallbacks.html) documentation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2830},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":37626,"byte_end":37645,"line_start":1171,"line_end":1171,"column_start":12,"column_end":31},"name":"with_codegen_config","qualname":"<Builder>::with_codegen_config","value":"fn (mut self, config: CodegenConfig) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Choose what to generate using a\n [`CodegenConfig`](./struct.CodegenConfig.html).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2831},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":37823,"byte_end":37843,"line_start":1177,"line_end":1177,"column_start":12,"column_end":32},"name":"detect_include_paths","qualname":"<Builder>::detect_include_paths","value":"fn (mut self, doit: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Whether to detect include paths using clang_sys.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2832},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":38021,"byte_end":38038,"line_start":1183,"line_end":1183,"column_start":12,"column_end":29},"name":"prepend_enum_name","qualname":"<Builder>::prepend_enum_name","value":"fn (mut self, doit: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Prepend the enum name to constant or bitfield variants.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2833},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":38215,"byte_end":38231,"line_start":1189,"line_end":1189,"column_start":12,"column_end":28},"name":"rustfmt_bindings","qualname":"<Builder>::rustfmt_bindings","value":"fn (mut self, doit: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether rustfmt should format the generated bindings.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2834},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":38411,"byte_end":38425,"line_start":1195,"line_end":1195,"column_start":12,"column_end":26},"name":"record_matches","qualname":"<Builder>::record_matches","value":"fn (mut self, doit: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether we should record matched items in our regex sets.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2835},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":38654,"byte_end":38680,"line_start":1202,"line_end":1202,"column_start":12,"column_end":38},"name":"rustfmt_configuration_file","qualname":"<Builder>::rustfmt_configuration_file","value":"fn (mut self, path: Option<PathBuf>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the absolute path to the rustfmt configuration file, if None, the standard rustfmt\n options are used.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2836},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":38933,"byte_end":38945,"line_start":1209,"line_end":1209,"column_start":12,"column_end":24},"name":"with_rustfmt","qualname":"<Builder>::with_rustfmt","value":"fn <P> (mut self, path: P) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets an explicit path to rustfmt, to be used when rustfmt is enabled.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2838},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":39151,"byte_end":39159,"line_start":1215,"line_end":1215,"column_start":12,"column_end":20},"name":"generate","qualname":"<Builder>::generate","value":"fn (mut self) -> Result<Bindings, ()>","parent":null,"children":[],"decl_id":null,"docs":" Generate the Rust bindings using the options built up thus far.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2841},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":40617,"byte_end":40640,"line_start":1252,"line_end":1252,"column_start":12,"column_end":35},"name":"dump_preprocessed_input","qualname":"<Builder>::dump_preprocessed_input","value":"fn (&self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Preprocess and dump the input header files to disk.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2844},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":43373,"byte_end":43385,"line_start":1340,"line_end":1340,"column_start":12,"column_end":24},"name":"no_partialeq","qualname":"<Builder>::no_partialeq","value":"fn <T> (mut self, arg: T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Don't derive `PartialEq` for a given type. Regular\n expressions are supported.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2846},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":43614,"byte_end":43621,"line_start":1347,"line_end":1347,"column_start":12,"column_end":19},"name":"no_copy","qualname":"<Builder>::no_copy","value":"fn <T> (mut self, arg: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Don't derive `Copy` for a given type. Regular\n expressions are supported.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2848},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":43842,"byte_end":43849,"line_start":1354,"line_end":1354,"column_start":12,"column_end":19},"name":"no_hash","qualname":"<Builder>::no_hash","value":"fn <T> (mut self, arg: T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Don't derive `Hash` for a given type. Regular\n expressions are supported.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2850},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":44081,"byte_end":44108,"line_start":1360,"line_end":1360,"column_start":12,"column_end":39},"name":"array_pointers_in_arguments","qualname":"<Builder>::array_pointers_in_arguments","value":"fn (mut self, doit: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `arr[size]` should be treated as `*mut T` or `*mut [T; size]` (same for mut)\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4534},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":57285,"byte_end":57293,"line_start":1744,"line_end":1744,"column_start":12,"column_end":20},"name":"Bindings","qualname":"::Bindings","value":"Bindings {  }","parent":null,"children":[{"krate":0,"index":4535},{"krate":0,"index":4536}],"decl_id":null,"docs":" Generated Rust bindings.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2865},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":61991,"byte_end":62000,"line_start":1893,"line_end":1893,"column_start":12,"column_end":21},"name":"to_string","qualname":"<Bindings>::to_string","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Convert these bindings into source text (with raw lines prepended).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2866},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":62344,"byte_end":62357,"line_start":1902,"line_end":1902,"column_start":12,"column_end":25},"name":"write_to_file","qualname":"<Bindings>::write_to_file","value":"fn <P> (&self, path: P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write these bindings as source text to a file.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2868},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":62702,"byte_end":62707,"line_start":1913,"line_end":1913,"column_start":12,"column_end":17},"name":"write","qualname":"<Bindings>::write","value":"fn <'a> (&self, mut writer: Box<dyn Write + 'a>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write these bindings as source text to the given `Write`able.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4540},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":68777,"byte_end":68789,"line_start":2107,"line_end":2107,"column_start":12,"column_end":24},"name":"ClangVersion","qualname":"::ClangVersion","value":"ClangVersion { parsed, full }","parent":null,"children":[{"krate":0,"index":4541},{"krate":0,"index":4542}],"decl_id":null,"docs":" Extracted Clang version data\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4541},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":68858,"byte_end":68864,"line_start":2109,"line_end":2109,"column_start":9,"column_end":15},"name":"parsed","qualname":"::ClangVersion::parsed","value":"std::option::Option<(u32, u32)>","parent":{"krate":0,"index":4540},"children":[],"decl_id":null,"docs":" Major and minor semver, if parsing was successful\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4542},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":68922,"byte_end":68926,"line_start":2111,"line_end":2111,"column_start":9,"column_end":13},"name":"full","qualname":"::ClangVersion::full","value":"std::string::String","parent":{"krate":0,"index":4540},"children":[],"decl_id":null,"docs":" full version string\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2886},"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":69012,"byte_end":69025,"line_start":2115,"line_end":2115,"column_start":8,"column_end":21},"name":"clang_version","qualname":"::clang_version","value":"fn () -> ClangVersion","parent":null,"children":[],"decl_id":null,"docs":" Get the major and the minor semver numbers of Clang's version\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":73965,"byte_end":73971,"line_start":26,"line_end":26,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":74266,"byte_end":74272,"line_start":39,"line_end":39,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":96115,"byte_end":96124,"line_start":730,"line_end":730,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":96963,"byte_end":96972,"line_start":761,"line_end":761,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":97611,"byte_end":97621,"line_start":786,"line_end":786,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":97888,"byte_end":97898,"line_start":796,"line_end":796,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":98150,"byte_end":98168,"line_start":808,"line_end":808,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":99212,"byte_end":99218,"line_start":847,"line_end":847,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":99345,"byte_end":99351,"line_start":853,"line_end":853,"column_start":13,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":99370,"byte_end":99376,"line_start":855,"line_end":855,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":99608,"byte_end":99612,"line_start":867,"line_end":867,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":99735,"byte_end":99739,"line_start":873,"line_end":873,"column_start":13,"column_end":17},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":99764,"byte_end":99768,"line_start":875,"line_end":875,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":100745,"byte_end":100756,"line_start":907,"line_end":907,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":101190,"byte_end":101194,"line_start":922,"line_end":922,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":195},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":112858,"byte_end":112882,"line_start":1283,"line_end":1283,"column_start":6,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":113233,"byte_end":113256,"line_start":1302,"line_end":1302,"column_start":19,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":113633,"byte_end":113656,"line_start":1317,"line_end":1317,"column_start":28,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":113945,"byte_end":113959,"line_start":1330,"line_end":1330,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":114494,"byte_end":114508,"line_start":1347,"line_end":1347,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":114946,"byte_end":114953,"line_start":1365,"line_end":1365,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":116060,"byte_end":116083,"line_start":1403,"line_end":1403,"column_start":19,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":116778,"byte_end":116803,"line_start":1433,"line_end":1433,"column_start":19,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":117526,"byte_end":117530,"line_start":1462,"line_end":1462,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":118317,"byte_end":118322,"line_start":1492,"line_end":1492,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":118812,"byte_end":118817,"line_start":1508,"line_end":1508,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":118939,"byte_end":118944,"line_start":1514,"line_end":1514,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":119378,"byte_end":119393,"line_start":1536,"line_end":1536,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":119516,"byte_end":119531,"line_start":1542,"line_end":1542,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":275},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":121439,"byte_end":121454,"line_start":1608,"line_end":1608,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":121690,"byte_end":121700,"line_start":1621,"line_end":1621,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":287},{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":122191,"byte_end":122201,"line_start":1637,"line_end":1637,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":122608,"byte_end":122619,"line_start":1655,"line_end":1655,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":123175,"byte_end":123186,"line_start":1673,"line_end":1673,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":130815,"byte_end":130825,"line_start":1934,"line_end":1934,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":133662,"byte_end":133672,"line_start":2026,"line_end":2026,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":133983,"byte_end":133993,"line_start":2041,"line_end":2041,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/error.rs","byte_start":272368,"byte_end":272373,"line_start":16,"line_end":16,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/error.rs","byte_start":272523,"byte_end":272528,"line_start":22,"line_end":22,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/impl_debug.rs","byte_start":283754,"byte_end":283763,"line_start":68,"line_end":68,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/impl_debug.rs","byte_start":284119,"byte_end":284131,"line_start":84,"line_end":84,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":406},{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/impl_debug.rs","byte_start":284993,"byte_end":284997,"line_start":113,"line_end":113,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/struct_layout.rs","byte_start":295954,"byte_end":295973,"line_start":80,"line_end":80,"column_start":10,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":138653,"byte_end":138666,"line_start":146,"line_end":146,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":565},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":141096,"byte_end":141109,"line_start":235,"line_end":235,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":576},{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":141261,"byte_end":141274,"line_start":243,"line_end":243,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":141566,"byte_end":141577,"line_start":255,"line_end":255,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":142133,"byte_end":142144,"line_start":275,"line_end":275,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":588}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":143947,"byte_end":143951,"line_start":338,"line_end":338,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":145387,"byte_end":145393,"line_start":387,"line_end":387,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":599},{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":148329,"byte_end":148332,"line_start":478,"line_end":478,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":605},{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":152785,"byte_end":152789,"line_start":604,"line_end":604,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":610},{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":161631,"byte_end":161637,"line_start":835,"line_end":835,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":161925,"byte_end":161931,"line_start":849,"line_end":849,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":628},{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":162579,"byte_end":162585,"line_start":872,"line_end":872,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":162761,"byte_end":162767,"line_start":878,"line_end":878,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":636},{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":163073,"byte_end":163094,"line_start":893,"line_end":893,"column_start":24,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":639},{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":166192,"byte_end":166197,"line_start":984,"line_end":984,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":650},{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":167597,"byte_end":167606,"line_start":1036,"line_end":1036,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":656},{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":172416,"byte_end":172428,"line_start":1188,"line_end":1188,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":172737,"byte_end":172745,"line_start":1201,"line_end":1201,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":174085,"byte_end":174097,"line_start":1242,"line_end":1242,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":667},{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":177888,"byte_end":177896,"line_start":1368,"line_end":1368,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":675},{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":181373,"byte_end":181381,"line_start":1469,"line_end":1469,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":680},{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":202481,"byte_end":202487,"line_start":2061,"line_end":2061,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":207458,"byte_end":207471,"line_start":2222,"line_end":2222,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":698},{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":207898,"byte_end":207911,"line_start":2240,"line_end":2240,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":208016,"byte_end":208029,"line_start":2246,"line_end":2246,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":703},{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":209541,"byte_end":209552,"line_start":2290,"line_end":2290,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":730}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":218607,"byte_end":218611,"line_start":2565,"line_end":2565,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":733},{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":230697,"byte_end":230698,"line_start":2904,"line_end":2904,"column_start":22,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":231898,"byte_end":231899,"line_start":2938,"line_end":2938,"column_start":36,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":763},{"krate":0,"index":764}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":233643,"byte_end":233644,"line_start":2986,"line_end":2986,"column_start":33,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":772},{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":233989,"byte_end":233990,"line_start":3002,"line_end":3002,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":777},{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":234265,"byte_end":234266,"line_start":3017,"line_end":3017,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":781},{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":234556,"byte_end":234560,"line_start":3032,"line_end":3032,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":784},{"krate":0,"index":785}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":234792,"byte_end":234796,"line_start":3044,"line_end":3044,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":787},{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":235046,"byte_end":235050,"line_start":3056,"line_end":3056,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":790},{"krate":0,"index":791}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":235294,"byte_end":235298,"line_start":3068,"line_end":3068,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":793},{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":243426,"byte_end":243447,"line_start":3261,"line_end":3261,"column_start":22,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":799},{"krate":0,"index":800}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":243734,"byte_end":243755,"line_start":3275,"line_end":3275,"column_start":22,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":802},{"krate":0,"index":803}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":246081,"byte_end":246092,"line_start":3342,"line_end":3342,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":808},{"krate":0,"index":809}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":246906,"byte_end":246914,"line_start":3367,"line_end":3367,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":811},{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":252468,"byte_end":252481,"line_start":3542,"line_end":3542,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":816},{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/features.rs","byte_start":312646,"byte_end":312658,"line_start":214,"line_end":214,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":863}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/template_params.rs","byte_start":335193,"byte_end":335215,"line_start":164,"line_end":164,"column_start":12,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":891},{"krate":0,"index":895},{"krate":0,"index":896}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/template_params.rs","byte_start":343212,"byte_end":343234,"line_start":374,"line_end":374,"column_start":34,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":909},{"krate":0,"index":912},{"krate":0,"index":914}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/template_params.rs","byte_start":351554,"byte_end":351561,"line_start":596,"line_end":596,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":918}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/derive.rs","byte_start":355513,"byte_end":355525,"line_start":106,"line_end":106,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":953},{"krate":0,"index":955},{"krate":0,"index":958}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/derive.rs","byte_start":367767,"byte_end":367778,"line_start":431,"line_end":431,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":964},{"krate":0,"index":966},{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":977}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/derive.rs","byte_start":373028,"byte_end":373039,"line_start":596,"line_end":596,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":979}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/derive.rs","byte_start":373446,"byte_end":373458,"line_start":609,"line_end":609,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":989},{"krate":0,"index":991}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/derive.rs","byte_start":376373,"byte_end":376380,"line_start":696,"line_end":696,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":995}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/has_vtable.rs","byte_start":377740,"byte_end":377755,"line_start":25,"line_end":25,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1018}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/has_vtable.rs","byte_start":377827,"byte_end":377842,"line_start":31,"line_end":31,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1020}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/has_vtable.rs","byte_start":378001,"byte_end":378016,"line_start":38,"line_end":38,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1022},{"krate":0,"index":1023}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/has_vtable.rs","byte_start":378161,"byte_end":378176,"line_start":46,"line_end":46,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1025}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/has_vtable.rs","byte_start":379524,"byte_end":379541,"line_start":80,"line_end":80,"column_start":12,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1031}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/has_vtable.rs","byte_start":381006,"byte_end":381023,"line_start":133,"line_end":133,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1043}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/has_vtable.rs","byte_start":383622,"byte_end":383629,"line_start":215,"line_end":215,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1047}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/has_destructor.rs","byte_start":386395,"byte_end":386416,"line_start":42,"line_end":42,"column_start":12,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1074},{"krate":0,"index":1075}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/has_destructor.rs","byte_start":387309,"byte_end":387330,"line_start":69,"line_end":69,"column_start":34,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1079},{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1088}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/has_destructor.rs","byte_start":390825,"byte_end":390832,"line_start":172,"line_end":172,"column_start":50,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1092}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/has_type_param_in_array.rs","byte_start":392608,"byte_end":392631,"line_start":42,"line_end":42,"column_start":12,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1111},{"krate":0,"index":1112}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/has_type_param_in_array.rs","byte_start":394033,"byte_end":394056,"line_start":86,"line_end":86,"column_start":34,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1121},{"krate":0,"index":1125}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/has_type_param_in_array.rs","byte_start":399759,"byte_end":399766,"line_start":248,"line_end":248,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1129}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/has_float.rs","byte_start":401400,"byte_end":401408,"line_start":42,"line_end":42,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1148},{"krate":0,"index":1149}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/has_float.rs","byte_start":402606,"byte_end":402614,"line_start":80,"line_end":80,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1155},{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":1163}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/has_float.rs","byte_start":408407,"byte_end":408414,"line_start":248,"line_end":248,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1167}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/sizedness.rs","byte_start":410610,"byte_end":410625,"line_start":65,"line_end":65,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1188}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/sizedness.rs","byte_start":410704,"byte_end":410719,"line_start":71,"line_end":71,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1190}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/sizedness.rs","byte_start":410878,"byte_end":410893,"line_start":78,"line_end":78,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1192},{"krate":0,"index":1193}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/sizedness.rs","byte_start":411038,"byte_end":411053,"line_start":86,"line_end":86,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1195}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/sizedness.rs","byte_start":411895,"byte_end":411912,"line_start":113,"line_end":113,"column_start":12,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1198},{"krate":0,"index":1199},{"krate":0,"index":1200}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/sizedness.rs","byte_start":413515,"byte_end":413532,"line_start":165,"line_end":165,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1203},{"krate":0,"index":1204},{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1210},{"krate":0,"index":1212},{"krate":0,"index":1216}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/sizedness.rs","byte_start":419245,"byte_end":419252,"line_start":337,"line_end":337,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1220}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/mod.rs","byte_start":320463,"byte_end":320478,"line_start":133,"line_end":133,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1247}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/mod.rs","byte_start":320567,"byte_end":320582,"line_start":139,"line_end":139,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1249},{"krate":0,"index":1250}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/mod.rs","byte_start":320883,"byte_end":320898,"line_start":151,"line_end":151,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1252}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/annotations.rs","byte_start":422553,"byte_end":422564,"line_start":74,"line_end":74,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1263}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/annotations.rs","byte_start":422898,"byte_end":422909,"line_start":89,"line_end":89,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1265},{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1268},{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1272},{"krate":0,"index":1273},{"krate":0,"index":1274},{"krate":0,"index":1277}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":431342,"byte_end":431352,"line_start":55,"line_end":55,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1325},{"krate":0,"index":1326}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":432261,"byte_end":432267,"line_start":88,"line_end":88,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1334}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":434367,"byte_end":434379,"line_start":172,"line_end":172,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1344},{"krate":0,"index":1345},{"krate":0,"index":1346}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":435098,"byte_end":435103,"line_start":201,"line_end":201,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1348}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":435450,"byte_end":435455,"line_start":213,"line_end":213,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1350},{"krate":0,"index":1351}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":435985,"byte_end":435990,"line_start":233,"line_end":233,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1354}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":437199,"byte_end":437208,"line_start":273,"line_end":273,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1357}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":437564,"byte_end":437572,"line_start":291,"line_end":291,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1360}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":438544,"byte_end":438552,"line_start":331,"line_end":331,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1369}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":440681,"byte_end":440689,"line_start":401,"line_end":401,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1374},{"krate":0,"index":1375},{"krate":0,"index":1376},{"krate":0,"index":1377}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":441513,"byte_end":441521,"line_start":438,"line_end":438,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1379}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":442061,"byte_end":442069,"line_start":461,"line_end":461,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1381},{"krate":0,"index":1382},{"krate":0,"index":1383},{"krate":0,"index":1384},{"krate":0,"index":1385},{"krate":0,"index":1386},{"krate":0,"index":1387}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":450144,"byte_end":450154,"line_start":700,"line_end":700,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1400}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":450261,"byte_end":450271,"line_start":706,"line_end":706,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1402},{"krate":0,"index":1403},{"krate":0,"index":1404}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":454718,"byte_end":454728,"line_start":834,"line_end":834,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1414},{"krate":0,"index":1415}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":456028,"byte_end":456037,"line_start":882,"line_end":882,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1418},{"krate":0,"index":1420},{"krate":0,"index":1421},{"krate":0,"index":1423},{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1426}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":457189,"byte_end":457193,"line_start":940,"line_end":940,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1428},{"krate":0,"index":1429}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":460654,"byte_end":460662,"line_start":1046,"line_end":1046,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1431},{"krate":0,"index":1432},{"krate":0,"index":1433},{"krate":0,"index":1434},{"krate":0,"index":1435},{"krate":0,"index":1436},{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1439},{"krate":0,"index":1440},{"krate":0,"index":1441},{"krate":0,"index":1442},{"krate":0,"index":1443},{"krate":0,"index":1449},{"krate":0,"index":1451},{"krate":0,"index":1452},{"krate":0,"index":1453},{"krate":0,"index":1454},{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1459},{"krate":0,"index":1460}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":481474,"byte_end":481482,"line_start":1600,"line_end":1600,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1463}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":482906,"byte_end":482914,"line_start":1653,"line_end":1653,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1466},{"krate":0,"index":1467}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":485104,"byte_end":485112,"line_start":1706,"line_end":1706,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1472}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":485251,"byte_end":485259,"line_start":1712,"line_end":1712,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1474},{"krate":0,"index":1475}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":492760,"byte_end":492766,"line_start":195,"line_end":195,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1548}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":492925,"byte_end":492931,"line_start":202,"line_end":202,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1551}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":493105,"byte_end":493106,"line_start":212,"line_end":212,"column_start":28,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1554}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":493317,"byte_end":493318,"line_start":221,"line_end":221,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1557}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":493532,"byte_end":493533,"line_start":230,"line_end":230,"column_start":27,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1560}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":493738,"byte_end":493739,"line_start":239,"line_end":239,"column_start":27,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1563}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":493950,"byte_end":493951,"line_start":248,"line_end":248,"column_start":33,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1566}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":494238,"byte_end":494239,"line_start":259,"line_end":259,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1569}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":494517,"byte_end":494518,"line_start":270,"line_end":270,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1572}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":494827,"byte_end":494828,"line_start":282,"line_end":282,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1575}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":502243,"byte_end":502268,"line_start":477,"line_end":477,"column_start":25,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1583},{"krate":0,"index":1584}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":502574,"byte_end":502599,"line_start":493,"line_end":493,"column_start":12,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1587}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":503901,"byte_end":503915,"line_start":541,"line_end":541,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1594},{"krate":0,"index":1595},{"krate":0,"index":1597},{"krate":0,"index":1598},{"krate":0,"index":1599},{"krate":0,"index":1600},{"krate":0,"index":1601},{"krate":0,"index":1603},{"krate":0,"index":1604},{"krate":0,"index":1605},{"krate":0,"index":1606},{"krate":0,"index":1607},{"krate":0,"index":1609},{"krate":0,"index":1611},{"krate":0,"index":1613},{"krate":0,"index":1616},{"krate":0,"index":1617},{"krate":0,"index":1618},{"krate":0,"index":1620},{"krate":0,"index":1623},{"krate":0,"index":1625},{"krate":0,"index":1628},{"krate":0,"index":1632},{"krate":0,"index":1635},{"krate":0,"index":1636},{"krate":0,"index":1638},{"krate":0,"index":1639},{"krate":0,"index":1640},{"krate":0,"index":1641},{"krate":0,"index":1642},{"krate":0,"index":1643},{"krate":0,"index":1644},{"krate":0,"index":1645},{"krate":0,"index":1647},{"krate":0,"index":1649},{"krate":0,"index":1651},{"krate":0,"index":1652},{"krate":0,"index":1653},{"krate":0,"index":1654},{"krate":0,"index":1655},{"krate":0,"index":1656},{"krate":0,"index":1658},{"krate":0,"index":1660},{"krate":0,"index":1662},{"krate":0,"index":1663},{"krate":0,"index":1664},{"krate":0,"index":1665},{"krate":0,"index":1672},{"krate":0,"index":1676},{"krate":0,"index":1679},{"krate":0,"index":1684},{"krate":0,"index":1685},{"krate":0,"index":1686},{"krate":0,"index":1687},{"krate":0,"index":1688},{"krate":0,"index":1690},{"krate":0,"index":1691},{"krate":0,"index":1692},{"krate":0,"index":1693},{"krate":0,"index":1694},{"krate":0,"index":1695},{"krate":0,"index":1696},{"krate":0,"index":1698},{"krate":0,"index":1699},{"krate":0,"index":1700},{"krate":0,"index":1701},{"krate":0,"index":1703},{"krate":0,"index":1705},{"krate":0,"index":1706},{"krate":0,"index":1707},{"krate":0,"index":1712},{"krate":0,"index":1713},{"krate":0,"index":1714},{"krate":0,"index":1715},{"krate":0,"index":1716},{"krate":0,"index":1718},{"krate":0,"index":1719},{"krate":0,"index":1721},{"krate":0,"index":1722},{"krate":0,"index":1723},{"krate":0,"index":1725},{"krate":0,"index":1726},{"krate":0,"index":1728},{"krate":0,"index":1730},{"krate":0,"index":1731},{"krate":0,"index":1733},{"krate":0,"index":1734},{"krate":0,"index":1736},{"krate":0,"index":1737},{"krate":0,"index":1738}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":581807,"byte_end":581813,"line_start":2627,"line_end":2627,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1740}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":581966,"byte_end":581978,"line_start":2634,"line_end":2634,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1743}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":582089,"byte_end":582101,"line_start":2643,"line_end":2643,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1745},{"krate":0,"index":1747},{"krate":0,"index":1748},{"krate":0,"index":1749}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":583991,"byte_end":584002,"line_start":2703,"line_end":2703,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1752},{"krate":0,"index":1753},{"krate":0,"index":1754}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":584536,"byte_end":584547,"line_start":2722,"line_end":2722,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1756},{"krate":0,"index":1757}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/derive.rs","byte_start":589353,"byte_end":589362,"line_start":110,"line_end":110,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1780}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/derive.rs","byte_start":589434,"byte_end":589443,"line_start":116,"line_end":116,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1782}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/derive.rs","byte_start":589602,"byte_end":589611,"line_start":123,"line_end":123,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1784},{"krate":0,"index":1785}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/derive.rs","byte_start":589745,"byte_end":589754,"line_start":131,"line_end":131,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1787}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/enum_ty.rs","byte_start":593515,"byte_end":593519,"line_start":38,"line_end":38,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1819},{"krate":0,"index":1820},{"krate":0,"index":1821},{"krate":0,"index":1822},{"krate":0,"index":1832},{"krate":0,"index":1834}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/enum_ty.rs","byte_start":600007,"byte_end":600018,"line_start":241,"line_end":241,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1836},{"krate":0,"index":1837},{"krate":0,"index":1838},{"krate":0,"index":1839},{"krate":0,"index":1841},{"krate":0,"index":1843}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":601959,"byte_end":601971,"line_start":28,"line_end":28,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1872}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":604117,"byte_end":604125,"line_start":95,"line_end":95,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1874},{"krate":0,"index":1875},{"krate":0,"index":1876},{"krate":0,"index":1878},{"krate":0,"index":1879},{"krate":0,"index":1880}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":605106,"byte_end":605114,"line_start":141,"line_end":141,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1882}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":606004,"byte_end":606007,"line_start":183,"line_end":183,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1886}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":606223,"byte_end":606226,"line_start":193,"line_end":193,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1888}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":611413,"byte_end":611424,"line_start":345,"line_end":345,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1898},{"krate":0,"index":1899},{"krate":0,"index":1903},{"krate":0,"index":1904},{"krate":0,"index":1905},{"krate":0,"index":1906},{"krate":0,"index":1907},{"krate":0,"index":1908}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":618805,"byte_end":618813,"line_start":551,"line_end":551,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1910}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":621006,"byte_end":621017,"line_start":616,"line_end":616,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1913},{"krate":0,"index":1914}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/int.rs","byte_start":622882,"byte_end":622889,"line_start":88,"line_end":88,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1918},{"krate":0,"index":1920},{"krate":0,"index":1922}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":627941,"byte_end":627957,"line_start":107,"line_end":107,"column_start":14,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3943},{"krate":0,"index":3944},{"krate":0,"index":3945}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":628369,"byte_end":628386,"line_start":128,"line_end":128,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2003}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":628628,"byte_end":628645,"line_start":138,"line_end":138,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2007},{"krate":0,"index":2008}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":629075,"byte_end":629076,"line_start":157,"line_end":157,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2011},{"krate":0,"index":2012}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":629351,"byte_end":629355,"line_start":172,"line_end":172,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2014},{"krate":0,"index":2015}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":629574,"byte_end":629582,"line_start":184,"line_end":184,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2017},{"krate":0,"index":2018}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":629980,"byte_end":629981,"line_start":201,"line_end":201,"column_start":31,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2021}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":630293,"byte_end":630294,"line_start":214,"line_end":214,"column_start":31,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2024},{"krate":0,"index":2025}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":630910,"byte_end":630911,"line_start":238,"line_end":238,"column_start":27,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2028}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":631103,"byte_end":631107,"line_start":247,"line_end":247,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2031}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":631251,"byte_end":631253,"line_start":253,"line_end":253,"column_start":20,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2035},{"krate":0,"index":2036}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":631504,"byte_end":631508,"line_start":267,"line_end":267,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2039},{"krate":0,"index":2040}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":633410,"byte_end":633414,"line_start":313,"line_end":313,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2043}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":633555,"byte_end":633559,"line_start":319,"line_end":319,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2045}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":633701,"byte_end":633705,"line_start":325,"line_end":325,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2047}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":633841,"byte_end":633845,"line_start":331,"line_end":331,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2049}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":633987,"byte_end":633991,"line_start":337,"line_end":337,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2051}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":634144,"byte_end":634148,"line_start":343,"line_end":343,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2053}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":634292,"byte_end":634296,"line_start":349,"line_end":349,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2055}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":634427,"byte_end":634431,"line_start":355,"line_end":355,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2057}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":636636,"byte_end":636640,"line_start":416,"line_end":416,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2059}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":636708,"byte_end":636712,"line_start":422,"line_end":422,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2061},{"krate":0,"index":2062},{"krate":0,"index":2063},{"krate":0,"index":2064},{"krate":0,"index":2065},{"krate":0,"index":2067},{"krate":0,"index":2070},{"krate":0,"index":2072},{"krate":0,"index":2073},{"krate":0,"index":2074},{"krate":0,"index":2075},{"krate":0,"index":2076},{"krate":0,"index":2077},{"krate":0,"index":2078},{"krate":0,"index":2079},{"krate":0,"index":2080},{"krate":0,"index":2081},{"krate":0,"index":2082},{"krate":0,"index":2083},{"krate":0,"index":2085},{"krate":0,"index":2086},{"krate":0,"index":2088},{"krate":0,"index":2089},{"krate":0,"index":2090},{"krate":0,"index":2091},{"krate":0,"index":2092},{"krate":0,"index":2098},{"krate":0,"index":2101},{"krate":0,"index":2108},{"krate":0,"index":2110},{"krate":0,"index":2111},{"krate":0,"index":2112},{"krate":0,"index":2113},{"krate":0,"index":2114},{"krate":0,"index":2115}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":657190,"byte_end":657191,"line_start":1016,"line_end":1016,"column_start":22,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2122},{"krate":0,"index":2123}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":657523,"byte_end":657527,"line_start":1031,"line_end":1031,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2125},{"krate":0,"index":2126}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":657944,"byte_end":657945,"line_start":1045,"line_end":1045,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2130},{"krate":0,"index":2132}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":658590,"byte_end":658594,"line_start":1068,"line_end":1068,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2135},{"krate":0,"index":2136}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":658825,"byte_end":658826,"line_start":1078,"line_end":1078,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2139}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":659105,"byte_end":659109,"line_start":1089,"line_end":1089,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2142}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":659253,"byte_end":659254,"line_start":1095,"line_end":1095,"column_start":33,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2145}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":659570,"byte_end":659574,"line_start":1108,"line_end":1108,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2147}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":659852,"byte_end":659853,"line_start":1118,"line_end":1118,"column_start":22,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2150}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":660130,"byte_end":660134,"line_start":1131,"line_end":1131,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2152}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":660444,"byte_end":660448,"line_start":1144,"line_end":1144,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2155}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":661003,"byte_end":661004,"line_start":1169,"line_end":1169,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2159}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":661260,"byte_end":661264,"line_start":1179,"line_end":1179,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2162}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":661422,"byte_end":661430,"line_start":1185,"line_end":1185,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2164}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":662660,"byte_end":662664,"line_start":1225,"line_end":1225,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2169},{"krate":0,"index":2170},{"krate":0,"index":2174},{"krate":0,"index":2175},{"krate":0,"index":2177},{"krate":0,"index":2178},{"krate":0,"index":2184}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":683297,"byte_end":683301,"line_start":1809,"line_end":1809,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2189}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":684010,"byte_end":684014,"line_start":1829,"line_end":1829,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2191},{"krate":0,"index":2192}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":685483,"byte_end":685494,"line_start":1881,"line_end":1881,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2195},{"krate":0,"index":2196},{"krate":0,"index":2197},{"krate":0,"index":2198}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item_kind.rs","byte_start":686981,"byte_end":686989,"line_start":28,"line_end":28,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2208},{"krate":0,"index":2209},{"krate":0,"index":2210},{"krate":0,"index":2211},{"krate":0,"index":2212},{"krate":0,"index":2213},{"krate":0,"index":2214},{"krate":0,"index":2215},{"krate":0,"index":2216},{"krate":0,"index":2217},{"krate":0,"index":2218},{"krate":0,"index":2219},{"krate":0,"index":2220},{"krate":0,"index":2221}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item_kind.rs","byte_start":689929,"byte_end":689937,"line_start":129,"line_end":129,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2223}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/layout.rs","byte_start":691411,"byte_end":691417,"line_start":35,"line_end":35,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2235},{"krate":0,"index":2236},{"krate":0,"index":2237},{"krate":0,"index":2238},{"krate":0,"index":2239},{"krate":0,"index":2240},{"krate":0,"index":2241}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/layout.rs","byte_start":693125,"byte_end":693131,"line_start":99,"line_end":99,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2243},{"krate":0,"index":2244},{"krate":0,"index":2245},{"krate":0,"index":2246}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/module.rs","byte_start":695479,"byte_end":695485,"line_start":31,"line_end":31,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2260},{"krate":0,"index":2261},{"krate":0,"index":2263},{"krate":0,"index":2264},{"krate":0,"index":2265}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/module.rs","byte_start":696233,"byte_end":696239,"line_start":62,"line_end":62,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2267}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/module.rs","byte_start":696512,"byte_end":696518,"line_start":75,"line_end":75,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2270}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/objc.rs","byte_start":698441,"byte_end":698454,"line_start":55,"line_end":55,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2296},{"krate":0,"index":2297},{"krate":0,"index":2298},{"krate":0,"index":2299},{"krate":0,"index":2300},{"krate":0,"index":2301},{"krate":0,"index":2303}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/objc.rs","byte_start":702722,"byte_end":702732,"line_start":173,"line_end":173,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2305},{"krate":0,"index":2306},{"krate":0,"index":2307},{"krate":0,"index":2308},{"krate":0,"index":2309},{"krate":0,"index":2310}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/objc.rs","byte_start":705086,"byte_end":705099,"line_start":259,"line_end":259,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2315},{"krate":0,"index":2316}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/template.rs","byte_start":712647,"byte_end":712668,"line_start":198,"line_end":198,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2346},{"krate":0,"index":2348},{"krate":0,"index":2349},{"krate":0,"index":2350}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/template.rs","byte_start":715783,"byte_end":715804,"line_start":293,"line_end":293,"column_start":19,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2361},{"krate":0,"index":2362}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/template.rs","byte_start":716995,"byte_end":717016,"line_start":329,"line_end":329,"column_start":16,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2365},{"krate":0,"index":2366}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/traversal.rs","byte_start":717900,"byte_end":717904,"line_start":20,"line_end":20,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2377}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/traversal.rs","byte_start":718097,"byte_end":718101,"line_start":27,"line_end":27,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2379}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/traversal.rs","byte_start":725015,"byte_end":725022,"line_start":255,"line_end":255,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2394},{"krate":0,"index":2395}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/traversal.rs","byte_start":725533,"byte_end":725538,"line_start":271,"line_end":271,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2398},{"krate":0,"index":2399}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/traversal.rs","byte_start":726995,"byte_end":726998,"line_start":318,"line_end":318,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2404},{"krate":0,"index":2405}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/traversal.rs","byte_start":727175,"byte_end":727183,"line_start":328,"line_end":328,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2407},{"krate":0,"index":2408}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/traversal.rs","byte_start":727762,"byte_end":727763,"line_start":349,"line_end":349,"column_start":20,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2414}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/traversal.rs","byte_start":729369,"byte_end":729382,"line_start":403,"line_end":403,"column_start":5,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2434}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/traversal.rs","byte_start":730223,"byte_end":730236,"line_start":437,"line_end":437,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2441}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/traversal.rs","byte_start":730805,"byte_end":730818,"line_start":458,"line_end":458,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2447},{"krate":0,"index":2448}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":733720,"byte_end":733724,"line_start":45,"line_end":45,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2488},{"krate":0,"index":2489},{"krate":0,"index":2490},{"krate":0,"index":2491},{"krate":0,"index":2492},{"krate":0,"index":2493},{"krate":0,"index":2495},{"krate":0,"index":2496},{"krate":0,"index":2497},{"krate":0,"index":2498},{"krate":0,"index":2499},{"krate":0,"index":2500},{"krate":0,"index":2501},{"krate":0,"index":2502},{"krate":0,"index":2503},{"krate":0,"index":2504},{"krate":0,"index":2505},{"krate":0,"index":2506},{"krate":0,"index":2507},{"krate":0,"index":2508},{"krate":0,"index":2509},{"krate":0,"index":2510},{"krate":0,"index":2511},{"krate":0,"index":2512},{"krate":0,"index":2513},{"krate":0,"index":2515},{"krate":0,"index":2516},{"krate":0,"index":2519},{"krate":0,"index":2522},{"krate":0,"index":2524},{"krate":0,"index":2526}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":744083,"byte_end":744087,"line_start":392,"line_end":392,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2528},{"krate":0,"index":2529}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":744574,"byte_end":744578,"line_start":408,"line_end":408,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2531},{"krate":0,"index":2532}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":744804,"byte_end":744812,"line_start":420,"line_end":420,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2534},{"krate":0,"index":2535}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":745193,"byte_end":745197,"line_start":436,"line_end":436,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2537}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":745928,"byte_end":745936,"line_start":465,"line_end":465,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2540}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":746358,"byte_end":746366,"line_start":488,"line_end":488,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2543}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":748882,"byte_end":748886,"line_start":566,"line_end":566,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2545}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":749044,"byte_end":749052,"line_start":572,"line_end":572,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2547}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":752961,"byte_end":752965,"line_start":711,"line_end":711,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2549}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":776611,"byte_end":776615,"line_start":1220,"line_end":1220,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2554},{"krate":0,"index":2555}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/var.rs","byte_start":779825,"byte_end":779828,"line_start":46,"line_end":46,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":2579},{"krate":0,"index":2580},{"krate":0,"index":2581},{"krate":0,"index":2582},{"krate":0,"index":2583},{"krate":0,"index":2584}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/var.rs","byte_start":780787,"byte_end":780790,"line_start":91,"line_end":91,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2587}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/var.rs","byte_start":781695,"byte_end":781698,"line_start":131,"line_end":131,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2591}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/regex_set.rs","byte_start":794564,"byte_end":794572,"line_start":18,"line_end":18,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2633},{"krate":0,"index":2634},{"krate":0,"index":2636},{"krate":0,"index":2637},{"krate":0,"index":2640},{"krate":0,"index":2642}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/time.rs","byte_start":796827,"byte_end":796832,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2653},{"krate":0,"index":2654},{"krate":0,"index":2655},{"krate":0,"index":2656}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/time.rs","byte_start":797934,"byte_end":797939,"line_start":48,"line_end":48,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2659}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/callbacks.rs","byte_start":798545,"byte_end":798565,"line_start":18,"line_end":18,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2668}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":3642,"byte_end":3655,"line_start":130,"line_end":130,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2716},{"krate":0,"index":2717},{"krate":0,"index":2718},{"krate":0,"index":2719},{"krate":0,"index":2720},{"krate":0,"index":2721}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":4545,"byte_end":4558,"line_start":162,"line_end":162,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2723}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":6063,"byte_end":6070,"line_start":214,"line_end":214,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2726},{"krate":0,"index":2744},{"krate":0,"index":2746},{"krate":0,"index":2747},{"krate":0,"index":2748},{"krate":0,"index":2749},{"krate":0,"index":2751},{"krate":0,"index":2752},{"krate":0,"index":2753},{"krate":0,"index":2754},{"krate":0,"index":2755},{"krate":0,"index":2756},{"krate":0,"index":2757},{"krate":0,"index":2759},{"krate":0,"index":2761},{"krate":0,"index":2763},{"krate":0,"index":2765},{"krate":0,"index":2767},{"krate":0,"index":2769},{"krate":0,"index":2771},{"krate":0,"index":2773},{"krate":0,"index":2775},{"krate":0,"index":2777},{"krate":0,"index":2779},{"krate":0,"index":2780},{"krate":0,"index":2782},{"krate":0,"index":2784},{"krate":0,"index":2786},{"krate":0,"index":2788},{"krate":0,"index":2790},{"krate":0,"index":2792},{"krate":0,"index":2795},{"krate":0,"index":2798},{"krate":0,"index":2800},{"krate":0,"index":2802},{"krate":0,"index":2803},{"krate":0,"index":2804},{"krate":0,"index":2805},{"krate":0,"index":2806},{"krate":0,"index":2807},{"krate":0,"index":2808},{"krate":0,"index":2809},{"krate":0,"index":2810},{"krate":0,"index":2811},{"krate":0,"index":2812},{"krate":0,"index":2813},{"krate":0,"index":2814},{"krate":0,"index":2815},{"krate":0,"index":2816},{"krate":0,"index":2817},{"krate":0,"index":2818},{"krate":0,"index":2819},{"krate":0,"index":2820},{"krate":0,"index":2821},{"krate":0,"index":2822},{"krate":0,"index":2823},{"krate":0,"index":2824},{"krate":0,"index":2825},{"krate":0,"index":2826},{"krate":0,"index":2827},{"krate":0,"index":2829},{"krate":0,"index":2830},{"krate":0,"index":2831},{"krate":0,"index":2832},{"krate":0,"index":2833},{"krate":0,"index":2834},{"krate":0,"index":2835},{"krate":0,"index":2836},{"krate":0,"index":2838},{"krate":0,"index":2841},{"krate":0,"index":2844},{"krate":0,"index":2846},{"krate":0,"index":2848},{"krate":0,"index":2850}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":52599,"byte_end":52613,"line_start":1607,"line_end":1607,"column_start":35,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":52623,"byte_end":52637,"line_start":1609,"line_end":1609,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2853},{"krate":0,"index":2854},{"krate":0,"index":2855}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":53840,"byte_end":53854,"line_start":1647,"line_end":1647,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2857}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Inherent","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":57371,"byte_end":57379,"line_start":1749,"line_end":1749,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2860},{"krate":0,"index":2865},{"krate":0,"index":2866},{"krate":0,"index":2868},{"krate":0,"index":2870},{"krate":0,"index":2872}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":2046,"byte_end":2055,"line_start":77,"line_end":77,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":2660}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":73965,"byte_end":73971,"line_start":26,"line_end":26,"column_start":21,"column_end":27},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":2888},"to":{"krate":2,"index":7573}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":74266,"byte_end":74272,"line_start":39,"line_end":39,"column_start":6,"column_end":12},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":2888},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":96115,"byte_end":96124,"line_start":730,"line_end":730,"column_start":10,"column_end":19},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":131},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":96963,"byte_end":96972,"line_start":761,"line_end":761,"column_start":19,"column_end":28},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":131},"to":{"krate":2,"index":1731}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":97611,"byte_end":97621,"line_start":786,"line_end":786,"column_start":6,"column_end":16},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":2893},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":97888,"byte_end":97898,"line_start":796,"line_end":796,"column_start":15,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2893},"to":{"krate":2,"index":1731}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":98150,"byte_end":98168,"line_start":808,"line_end":808,"column_start":23,"column_end":41},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":149},"to":{"krate":2,"index":3602}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":99212,"byte_end":99218,"line_start":847,"line_end":847,"column_start":20,"column_end":26},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2888},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":99345,"byte_end":99351,"line_start":853,"line_end":853,"column_start":13,"column_end":19},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2888},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":99370,"byte_end":99376,"line_start":855,"line_end":855,"column_start":15,"column_end":21},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2888},"to":{"krate":2,"index":7215}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":99608,"byte_end":99612,"line_start":867,"line_end":867,"column_start":20,"column_end":24},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2898},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":99735,"byte_end":99739,"line_start":873,"line_end":873,"column_start":13,"column_end":17},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2898},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":99764,"byte_end":99768,"line_start":875,"line_end":875,"column_start":21,"column_end":25},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2898},"to":{"krate":2,"index":7573}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":100745,"byte_end":100756,"line_start":907,"line_end":907,"column_start":36,"column_end":47},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":2903},"to":{"krate":2,"index":2227}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":101190,"byte_end":101194,"line_start":922,"line_end":922,"column_start":6,"column_end":10},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":2898},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":112858,"byte_end":112882,"line_start":1283,"line_end":1283,"column_start":6,"column_end":30},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2941},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":113233,"byte_end":113256,"line_start":1302,"line_end":1302,"column_start":19,"column_end":42},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":217},"to":{"krate":2,"index":3602}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":113633,"byte_end":113656,"line_start":1317,"line_end":1317,"column_start":28,"column_end":51},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":217},"to":{"krate":2,"index":3888}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":113945,"byte_end":113959,"line_start":1330,"line_end":1330,"column_start":6,"column_end":20},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":114494,"byte_end":114508,"line_start":1347,"line_end":1347,"column_start":23,"column_end":37},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":7578}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":114946,"byte_end":114953,"line_start":1365,"line_end":1365,"column_start":6,"column_end":13},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":232},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":116060,"byte_end":116083,"line_start":1403,"line_end":1403,"column_start":19,"column_end":42},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":239},"to":{"krate":2,"index":3602}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":116778,"byte_end":116803,"line_start":1433,"line_end":1433,"column_start":19,"column_end":44},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":3602}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":117526,"byte_end":117530,"line_start":1462,"line_end":1462,"column_start":6,"column_end":10},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":256},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":118317,"byte_end":118322,"line_start":1492,"line_end":1492,"column_start":6,"column_end":11},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":262},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":118812,"byte_end":118817,"line_start":1508,"line_end":1508,"column_start":21,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":262},"to":{"krate":2,"index":7573}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":118939,"byte_end":118944,"line_start":1514,"line_end":1514,"column_start":15,"column_end":20},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":262},"to":{"krate":2,"index":1731}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":119378,"byte_end":119393,"line_start":1536,"line_end":1536,"column_start":21,"column_end":36},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":270},"to":{"krate":2,"index":7573}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":119516,"byte_end":119531,"line_start":1542,"line_end":1542,"column_start":6,"column_end":21},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":270},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":121439,"byte_end":121454,"line_start":1608,"line_end":1608,"column_start":15,"column_end":30},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":270},"to":{"krate":2,"index":1731}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":121690,"byte_end":121700,"line_start":1621,"line_end":1621,"column_start":6,"column_end":16},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":284},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":122191,"byte_end":122201,"line_start":1637,"line_end":1637,"column_start":15,"column_end":25},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":284},"to":{"krate":2,"index":1731}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":122608,"byte_end":122619,"line_start":1655,"line_end":1655,"column_start":6,"column_end":17},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":123175,"byte_end":123186,"line_start":1673,"line_end":1673,"column_start":21,"column_end":32},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":291},"to":{"krate":2,"index":7573}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":130815,"byte_end":130825,"line_start":1934,"line_end":1934,"column_start":6,"column_end":16},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":2962},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":133662,"byte_end":133672,"line_start":2026,"line_end":2026,"column_start":15,"column_end":25},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":2962},"to":{"krate":2,"index":1731}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/clang.rs","byte_start":133983,"byte_end":133993,"line_start":2041,"line_end":2041,"column_start":6,"column_end":16},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":2966},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/error.rs","byte_start":272368,"byte_end":272373,"line_start":16,"line_end":16,"column_start":23,"column_end":28},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":2971},"to":{"krate":2,"index":7578}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/error.rs","byte_start":272523,"byte_end":272528,"line_start":22,"line_end":22,"column_start":23,"column_end":28},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":2971},"to":{"krate":1,"index":1625}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/impl_debug.rs","byte_start":283754,"byte_end":283763,"line_start":68,"line_end":68,"column_start":28,"column_end":37},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":3418},"to":{"krate":0,"index":396}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/impl_debug.rs","byte_start":284119,"byte_end":284131,"line_start":84,"line_end":84,"column_start":28,"column_end":40},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":3380},"to":{"krate":0,"index":396}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/impl_debug.rs","byte_start":284993,"byte_end":284997,"line_start":113,"line_end":113,"column_start":28,"column_end":32},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":3946},"to":{"krate":0,"index":396}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/struct_layout.rs","byte_start":295954,"byte_end":295973,"line_start":80,"line_end":80,"column_start":10,"column_end":29},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":2993},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":138653,"byte_end":138666,"line_start":146,"line_end":146,"column_start":10,"column_end":23},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":542},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":141096,"byte_end":141109,"line_start":235,"line_end":235,"column_start":25,"column_end":38},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":542},"to":{"krate":2,"index":1709}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":141261,"byte_end":141274,"line_start":243,"line_end":243,"column_start":28,"column_end":41},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":542},"to":{"krate":2,"index":1720}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":141566,"byte_end":141577,"line_start":255,"line_end":255,"column_start":29,"column_end":40},"kind":{"Impl":{"id":46}},"from":{"krate":29,"index":486},"to":{"krate":0,"index":581}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":142133,"byte_end":142144,"line_start":275,"line_end":275,"column_start":52,"column_end":63},"kind":{"Impl":{"id":47}},"from":{"krate":29,"index":486},"to":{"krate":0,"index":585}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":143947,"byte_end":143951,"line_start":338,"line_end":338,"column_start":24,"column_end":28},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":3946},"to":{"krate":0,"index":590}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":145387,"byte_end":145393,"line_start":387,"line_end":387,"column_start":24,"column_end":30},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":4045},"to":{"krate":0,"index":590}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":148329,"byte_end":148332,"line_start":478,"line_end":478,"column_start":24,"column_end":27},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":4277},"to":{"krate":0,"index":590}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":152785,"byte_end":152789,"line_start":604,"line_end":604,"column_start":24,"column_end":28},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":4164},"to":{"krate":0,"index":590}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":161631,"byte_end":161637,"line_start":835,"line_end":835,"column_start":10,"column_end":16},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":618},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":161925,"byte_end":161931,"line_start":849,"line_end":849,"column_start":28,"column_end":34},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":618},"to":{"krate":0,"index":590}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":162579,"byte_end":162585,"line_start":872,"line_end":872,"column_start":32,"column_end":38},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":618},"to":{"krate":0,"index":1981}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":162761,"byte_end":162767,"line_start":878,"line_end":878,"column_start":26,"column_end":32},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":618},"to":{"krate":0,"index":754}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":163073,"byte_end":163094,"line_start":893,"line_end":893,"column_start":24,"column_end":45},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":4070},"to":{"krate":0,"index":590}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":166192,"byte_end":166197,"line_start":984,"line_end":984,"column_start":31,"column_end":36},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":3386},"to":{"krate":0,"index":642}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":167597,"byte_end":167606,"line_start":1036,"line_end":1036,"column_start":31,"column_end":40},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":3418},"to":{"krate":0,"index":642}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":172416,"byte_end":172428,"line_start":1188,"line_end":1188,"column_start":6,"column_end":18},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":3380},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":172737,"byte_end":172745,"line_start":1201,"line_end":1201,"column_start":6,"column_end":14},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":3395},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":174085,"byte_end":174097,"line_start":1242,"line_end":1242,"column_start":31,"column_end":43},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":3380},"to":{"krate":0,"index":642}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":177888,"byte_end":177896,"line_start":1368,"line_end":1368,"column_start":31,"column_end":39},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":3395},"to":{"krate":0,"index":642}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":181373,"byte_end":181381,"line_start":1469,"line_end":1469,"column_start":24,"column_end":32},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":3453},"to":{"krate":0,"index":590}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":202481,"byte_end":202487,"line_start":2061,"line_end":2061,"column_start":24,"column_end":30},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":3374},"to":{"krate":0,"index":691}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":207458,"byte_end":207471,"line_start":2222,"line_end":2222,"column_start":6,"column_end":19},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":3024},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":207898,"byte_end":207911,"line_start":2240,"line_end":2240,"column_start":18,"column_end":31},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":3024},"to":{"krate":2,"index":2210}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":208016,"byte_end":208029,"line_start":2246,"line_end":2246,"column_start":28,"column_end":41},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":3024},"to":{"krate":2,"index":6751}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":209541,"byte_end":209552,"line_start":2290,"line_end":2290,"column_start":10,"column_end":21},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":705},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":218607,"byte_end":218611,"line_start":2565,"line_end":2565,"column_start":24,"column_end":28},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":3758},"to":{"krate":0,"index":590}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":230255,"byte_end":230266,"line_start":2888,"line_end":2888,"column_start":17,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":743},"to":{"krate":0,"index":748}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":230697,"byte_end":230698,"line_start":2904,"line_end":2904,"column_start":22,"column_end":23},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":753},"to":{"krate":0,"index":748}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":231633,"byte_end":231644,"line_start":2928,"line_end":2928,"column_start":28,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":754},"to":{"krate":0,"index":757}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":231647,"byte_end":231658,"line_start":2928,"line_end":2928,"column_start":42,"column_end":53},"kind":"SuperTrait","from":{"krate":0,"index":743},"to":{"krate":0,"index":757}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":231898,"byte_end":231899,"line_start":2938,"line_end":2938,"column_start":36,"column_end":37},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":762},"to":{"krate":0,"index":757}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":233406,"byte_end":233417,"line_start":2976,"line_end":2976,"column_start":25,"column_end":36},"kind":"SuperTrait","from":{"krate":0,"index":754},"to":{"krate":0,"index":766}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":233420,"byte_end":233428,"line_start":2976,"line_end":2976,"column_start":39,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":748},"to":{"krate":0,"index":766}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":233643,"byte_end":233644,"line_start":2986,"line_end":2986,"column_start":33,"column_end":34},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":771},"to":{"krate":0,"index":766}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":233989,"byte_end":233990,"line_start":3002,"line_end":3002,"column_start":25,"column_end":26},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":776},"to":{"krate":0,"index":743}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":234265,"byte_end":234266,"line_start":3017,"line_end":3017,"column_start":25,"column_end":26},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":780},"to":{"krate":0,"index":754}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":234556,"byte_end":234560,"line_start":3032,"line_end":3032,"column_start":22,"column_end":26},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":3946},"to":{"krate":0,"index":743}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":234792,"byte_end":234796,"line_start":3044,"line_end":3044,"column_start":22,"column_end":26},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":3946},"to":{"krate":0,"index":754}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":235046,"byte_end":235050,"line_start":3056,"line_end":3056,"column_start":22,"column_end":26},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":4164},"to":{"krate":0,"index":743}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":235294,"byte_end":235298,"line_start":3068,"line_end":3068,"column_start":22,"column_end":26},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":4164},"to":{"krate":0,"index":754}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":243426,"byte_end":243447,"line_start":3261,"line_end":3261,"column_start":22,"column_end":43},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":4070},"to":{"krate":0,"index":743}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":243734,"byte_end":243755,"line_start":3275,"line_end":3275,"column_start":22,"column_end":43},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":4070},"to":{"krate":0,"index":754}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":246081,"byte_end":246092,"line_start":3342,"line_end":3342,"column_start":22,"column_end":33},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":3855},"to":{"krate":0,"index":754}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":246906,"byte_end":246914,"line_start":3367,"line_end":3367,"column_start":24,"column_end":32},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":3825},"to":{"krate":0,"index":590}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/codegen/mod.rs","byte_start":252468,"byte_end":252481,"line_start":3542,"line_end":3542,"column_start":24,"column_end":37},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":4053},"to":{"krate":0,"index":590}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/features.rs","byte_start":312646,"byte_end":312658,"line_start":214,"line_end":214,"column_start":18,"column_end":30},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":3108},"to":{"krate":2,"index":2210}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/template_params.rs","byte_start":335193,"byte_end":335215,"line_start":164,"line_end":164,"column_start":12,"column_end":34},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":3135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/template_params.rs","byte_start":343212,"byte_end":343234,"line_start":374,"line_end":374,"column_start":34,"column_end":56},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":3135},"to":{"krate":0,"index":1237}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/template_params.rs","byte_start":351554,"byte_end":351561,"line_start":596,"line_end":596,"column_start":51,"column_end":58},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2707},"to":{"krate":2,"index":2227}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/derive.rs","byte_start":355513,"byte_end":355525,"line_start":106,"line_end":106,"column_start":12,"column_end":24},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":3165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/derive.rs","byte_start":367767,"byte_end":367778,"line_start":431,"line_end":431,"column_start":6,"column_end":17},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":3149},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/derive.rs","byte_start":373028,"byte_end":373039,"line_start":596,"line_end":596,"column_start":23,"column_end":34},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":3149},"to":{"krate":2,"index":7578}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/derive.rs","byte_start":373446,"byte_end":373458,"line_start":609,"line_end":609,"column_start":34,"column_end":46},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":3165},"to":{"krate":0,"index":1237}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/derive.rs","byte_start":376373,"byte_end":376380,"line_start":696,"line_end":696,"column_start":41,"column_end":48},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2707},"to":{"krate":2,"index":2227}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/has_vtable.rs","byte_start":377740,"byte_end":377755,"line_start":25,"line_end":25,"column_start":18,"column_end":33},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":3178},"to":{"krate":2,"index":2210}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/has_vtable.rs","byte_start":377827,"byte_end":377842,"line_start":31,"line_end":31,"column_start":6,"column_end":21},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":3178},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/has_vtable.rs","byte_start":378001,"byte_end":378016,"line_start":38,"line_end":38,"column_start":21,"column_end":36},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":3178},"to":{"krate":2,"index":1664}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/has_vtable.rs","byte_start":378161,"byte_end":378176,"line_start":46,"line_end":46,"column_start":27,"column_end":42},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":3178},"to":{"krate":2,"index":1690}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/has_vtable.rs","byte_start":379524,"byte_end":379541,"line_start":80,"line_end":80,"column_start":12,"column_end":29},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":3200},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/has_vtable.rs","byte_start":381006,"byte_end":381023,"line_start":133,"line_end":133,"column_start":34,"column_end":51},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":3200},"to":{"krate":0,"index":1237}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/has_vtable.rs","byte_start":383622,"byte_end":383629,"line_start":215,"line_end":215,"column_start":46,"column_end":53},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2707},"to":{"krate":2,"index":2227}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/has_destructor.rs","byte_start":386395,"byte_end":386416,"line_start":42,"line_end":42,"column_start":12,"column_end":33},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":3212},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/has_destructor.rs","byte_start":387309,"byte_end":387330,"line_start":69,"line_end":69,"column_start":34,"column_end":55},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":3212},"to":{"krate":0,"index":1237}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/has_destructor.rs","byte_start":390825,"byte_end":390832,"line_start":172,"line_end":172,"column_start":50,"column_end":57},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2710},"to":{"krate":2,"index":2227}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/has_type_param_in_array.rs","byte_start":392608,"byte_end":392631,"line_start":42,"line_end":42,"column_start":12,"column_end":35},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":3223},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/has_type_param_in_array.rs","byte_start":394033,"byte_end":394056,"line_start":86,"line_end":86,"column_start":34,"column_end":57},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":3223},"to":{"krate":0,"index":1237}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/has_type_param_in_array.rs","byte_start":399759,"byte_end":399766,"line_start":248,"line_end":248,"column_start":52,"column_end":59},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2710},"to":{"krate":2,"index":2227}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/has_float.rs","byte_start":401400,"byte_end":401408,"line_start":42,"line_end":42,"column_start":12,"column_end":20},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":3234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/has_float.rs","byte_start":402606,"byte_end":402614,"line_start":80,"line_end":80,"column_start":34,"column_end":42},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":3234},"to":{"krate":0,"index":1237}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/has_float.rs","byte_start":408407,"byte_end":408414,"line_start":248,"line_end":248,"column_start":37,"column_end":44},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2710},"to":{"krate":2,"index":2227}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/sizedness.rs","byte_start":410610,"byte_end":410625,"line_start":65,"line_end":65,"column_start":18,"column_end":33},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":3245},"to":{"krate":2,"index":2210}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/sizedness.rs","byte_start":410704,"byte_end":410719,"line_start":71,"line_end":71,"column_start":6,"column_end":21},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":3245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/sizedness.rs","byte_start":410878,"byte_end":410893,"line_start":78,"line_end":78,"column_start":21,"column_end":36},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":3245},"to":{"krate":2,"index":1664}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/sizedness.rs","byte_start":411038,"byte_end":411053,"line_start":86,"line_end":86,"column_start":27,"column_end":42},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":3245},"to":{"krate":2,"index":1690}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/sizedness.rs","byte_start":411895,"byte_end":411912,"line_start":113,"line_end":113,"column_start":12,"column_end":29},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":3267},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/sizedness.rs","byte_start":413515,"byte_end":413532,"line_start":165,"line_end":165,"column_start":34,"column_end":51},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":3267},"to":{"krate":0,"index":1237}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/sizedness.rs","byte_start":419245,"byte_end":419252,"line_start":337,"line_end":337,"column_start":46,"column_end":53},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2707},"to":{"krate":2,"index":2227}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/mod.rs","byte_start":318159,"byte_end":318164,"line_start":76,"line_end":76,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":1543},"to":{"krate":0,"index":1237}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/mod.rs","byte_start":318172,"byte_end":318177,"line_start":76,"line_end":76,"column_start":43,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":7573},"to":{"krate":0,"index":1237}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/mod.rs","byte_start":320463,"byte_end":320478,"line_start":133,"line_end":133,"column_start":18,"column_end":33},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":3276},"to":{"krate":2,"index":2210}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/mod.rs","byte_start":320567,"byte_end":320582,"line_start":139,"line_end":139,"column_start":21,"column_end":36},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":3276},"to":{"krate":2,"index":1664}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/analysis/mod.rs","byte_start":320883,"byte_end":320898,"line_start":151,"line_end":151,"column_start":27,"column_end":42},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":3276},"to":{"krate":2,"index":1690}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/annotations.rs","byte_start":422553,"byte_end":422564,"line_start":74,"line_end":74,"column_start":18,"column_end":29},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":3309},"to":{"krate":2,"index":2210}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/annotations.rs","byte_start":422898,"byte_end":422909,"line_start":89,"line_end":89,"column_start":6,"column_end":17},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":3309},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":431342,"byte_end":431352,"line_start":55,"line_end":55,"column_start":6,"column_end":16},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":3352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":432261,"byte_end":432267,"line_start":88,"line_end":88,"column_start":6,"column_end":12},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":3374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":434367,"byte_end":434379,"line_start":172,"line_end":172,"column_start":6,"column_end":18},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":3380},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":435098,"byte_end":435103,"line_start":201,"line_end":201,"column_start":6,"column_end":11},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":3386},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":435450,"byte_end":435455,"line_start":213,"line_end":213,"column_start":16,"column_end":21},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":3386},"to":{"krate":0,"index":2415}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":435985,"byte_end":435990,"line_start":233,"line_end":233,"column_start":24,"column_end":29},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":3386},"to":{"krate":0,"index":1798}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":437199,"byte_end":437208,"line_start":273,"line_end":273,"column_start":24,"column_end":33},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":3418},"to":{"krate":0,"index":1798}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":437564,"byte_end":437572,"line_start":291,"line_end":291,"column_start":24,"column_end":32},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":3395},"to":{"krate":0,"index":1798}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":438544,"byte_end":438552,"line_start":331,"line_end":331,"column_start":6,"column_end":14},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":3395},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":440681,"byte_end":440689,"line_start":401,"line_end":401,"column_start":23,"column_end":31},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":3395},"to":{"krate":0,"index":1335}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":441513,"byte_end":441521,"line_start":438,"line_end":438,"column_start":6,"column_end":14},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":3402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":442061,"byte_end":442069,"line_start":461,"line_end":461,"column_start":23,"column_end":31},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":3402},"to":{"krate":0,"index":1335}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":450144,"byte_end":450154,"line_start":700,"line_end":700,"column_start":18,"column_end":28},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":3407},"to":{"krate":2,"index":2210}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":450261,"byte_end":450271,"line_start":706,"line_end":706,"column_start":6,"column_end":16},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":3407},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":454718,"byte_end":454728,"line_start":834,"line_end":834,"column_start":16,"column_end":26},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":3407},"to":{"krate":0,"index":2415}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":456028,"byte_end":456037,"line_start":882,"line_end":882,"column_start":23,"column_end":32},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":3418},"to":{"krate":0,"index":1335}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":457189,"byte_end":457193,"line_start":940,"line_end":940,"column_start":6,"column_end":10},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":3445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":460654,"byte_end":460662,"line_start":1046,"line_end":1046,"column_start":6,"column_end":14},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":3453},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":481474,"byte_end":481482,"line_start":1600,"line_end":1600,"column_start":24,"column_end":32},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":3453},"to":{"krate":0,"index":1798}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":482906,"byte_end":482914,"line_start":1653,"line_end":1653,"column_start":19,"column_end":27},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":3453},"to":{"krate":0,"index":1986}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":485104,"byte_end":485112,"line_start":1706,"line_end":1706,"column_start":29,"column_end":37},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":3453},"to":{"krate":0,"index":2334}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/comp.rs","byte_start":485251,"byte_end":485259,"line_start":1712,"line_end":1712,"column_start":16,"column_end":24},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":3453},"to":{"krate":0,"index":2415}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":492760,"byte_end":492766,"line_start":195,"line_end":195,"column_start":6,"column_end":12},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":3472},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":492925,"byte_end":492931,"line_start":202,"line_end":202,"column_start":38,"column_end":44},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":3472},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":493105,"byte_end":493106,"line_start":212,"line_end":212,"column_start":28,"column_end":29},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1553},"to":{"krate":0,"index":1763}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":493317,"byte_end":493318,"line_start":221,"line_end":221,"column_start":30,"column_end":31},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1556},"to":{"krate":0,"index":1767}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":493532,"byte_end":493533,"line_start":230,"line_end":230,"column_start":27,"column_end":28},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1559},"to":{"krate":0,"index":1765}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":493738,"byte_end":493739,"line_start":239,"line_end":239,"column_start":27,"column_end":28},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1562},"to":{"krate":0,"index":1769}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":493950,"byte_end":493951,"line_start":248,"line_end":248,"column_start":33,"column_end":34},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1565},"to":{"krate":0,"index":1773}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":494238,"byte_end":494239,"line_start":259,"line_end":259,"column_start":32,"column_end":33},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1568},"to":{"krate":0,"index":1771}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":494517,"byte_end":494518,"line_start":270,"line_end":270,"column_start":25,"column_end":26},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1571},"to":{"krate":0,"index":1775}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":494827,"byte_end":494828,"line_start":282,"line_end":282,"column_start":26,"column_end":27},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1574},"to":{"krate":0,"index":1777}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":502243,"byte_end":502268,"line_start":477,"line_end":477,"column_start":25,"column_end":50},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1576},"to":{"krate":2,"index":3602}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":502574,"byte_end":502599,"line_start":493,"line_end":493,"column_start":12,"column_end":37},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1576},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":503901,"byte_end":503915,"line_start":541,"line_end":541,"column_start":6,"column_end":20},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":3657},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":581807,"byte_end":581813,"line_start":2627,"line_end":2627,"column_start":6,"column_end":12},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":3472},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":581966,"byte_end":581978,"line_start":2634,"line_end":2634,"column_start":21,"column_end":33},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":3694},"to":{"krate":2,"index":2227}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":582089,"byte_end":582101,"line_start":2643,"line_end":2643,"column_start":6,"column_end":18},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":3694},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":583991,"byte_end":584002,"line_start":2703,"line_end":2703,"column_start":6,"column_end":17},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":3703},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/context.rs","byte_start":584536,"byte_end":584547,"line_start":2722,"line_end":2722,"column_start":29,"column_end":40},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":3703},"to":{"krate":0,"index":2334}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/derive.rs","byte_start":589353,"byte_end":589362,"line_start":110,"line_end":110,"column_start":18,"column_end":27},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":3718},"to":{"krate":2,"index":2210}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/derive.rs","byte_start":589434,"byte_end":589443,"line_start":116,"line_end":116,"column_start":6,"column_end":15},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":3718},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/derive.rs","byte_start":589602,"byte_end":589611,"line_start":123,"line_end":123,"column_start":21,"column_end":30},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":3718},"to":{"krate":2,"index":1664}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/derive.rs","byte_start":589745,"byte_end":589754,"line_start":131,"line_end":131,"column_start":27,"column_end":36},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":3718},"to":{"krate":2,"index":1690}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/enum_ty.rs","byte_start":593515,"byte_end":593519,"line_start":38,"line_end":38,"column_start":6,"column_end":10},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":3758},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/enum_ty.rs","byte_start":600007,"byte_end":600018,"line_start":241,"line_end":241,"column_start":6,"column_end":17},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":3763},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":601959,"byte_end":601971,"line_start":28,"line_end":28,"column_start":6,"column_end":18},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3800},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":604117,"byte_end":604125,"line_start":95,"line_end":95,"column_start":6,"column_end":14},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":3825},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":605106,"byte_end":605114,"line_start":141,"line_end":141,"column_start":24,"column_end":32},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":3825},"to":{"krate":0,"index":1798}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":606004,"byte_end":606007,"line_start":183,"line_end":183,"column_start":6,"column_end":9},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":3834},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":606223,"byte_end":606226,"line_start":193,"line_end":193,"column_start":26,"column_end":29},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":3834},"to":{"krate":28,"index":82}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":611413,"byte_end":611424,"line_start":345,"line_end":345,"column_start":6,"column_end":17},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":3855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":618805,"byte_end":618813,"line_start":551,"line_end":551,"column_start":29,"column_end":37},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":3825},"to":{"krate":0,"index":2619}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/function.rs","byte_start":621006,"byte_end":621017,"line_start":616,"line_end":616,"column_start":16,"column_end":27},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":3855},"to":{"krate":0,"index":2415}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/int.rs","byte_start":622882,"byte_end":622889,"line_start":88,"line_end":88,"column_start":6,"column_end":13},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":3863},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":627941,"byte_end":627957,"line_start":107,"line_end":107,"column_start":14,"column_end":30},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":3940},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":628369,"byte_end":628386,"line_start":128,"line_end":128,"column_start":10,"column_end":27},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":1996},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":628628,"byte_end":628645,"line_start":138,"line_end":138,"column_start":23,"column_end":40},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":1996},"to":{"krate":2,"index":3602}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":629075,"byte_end":629076,"line_start":157,"line_end":157,"column_start":29,"column_end":30},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":2010},"to":{"krate":0,"index":2341}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":629351,"byte_end":629355,"line_start":172,"line_end":172,"column_start":26,"column_end":30},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3946},"to":{"krate":0,"index":2341}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":629574,"byte_end":629582,"line_start":184,"line_end":184,"column_start":26,"column_end":34},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":3990},"to":{"krate":0,"index":2341}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":629980,"byte_end":629981,"line_start":201,"line_end":201,"column_start":31,"column_end":32},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":2020},"to":{"krate":0,"index":1981}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":630293,"byte_end":630294,"line_start":214,"line_end":214,"column_start":31,"column_end":32},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":2023},"to":{"krate":0,"index":1983}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":630910,"byte_end":630911,"line_start":238,"line_end":238,"column_start":27,"column_end":28},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":2027},"to":{"krate":0,"index":1993}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":631103,"byte_end":631107,"line_start":247,"line_end":247,"column_start":24,"column_end":28},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":3946},"to":{"krate":0,"index":1993}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":631251,"byte_end":631253,"line_start":253,"line_end":253,"column_start":20,"column_end":22},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":2034},"to":{"krate":0,"index":2415}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":631504,"byte_end":631508,"line_start":267,"line_end":267,"column_start":16,"column_end":20},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":3946},"to":{"krate":0,"index":2415}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":633410,"byte_end":633414,"line_start":313,"line_end":313,"column_start":25,"column_end":29},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":3946},"to":{"krate":0,"index":1763}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":633555,"byte_end":633559,"line_start":319,"line_end":319,"column_start":27,"column_end":31},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":3946},"to":{"krate":0,"index":1767}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":633701,"byte_end":633705,"line_start":325,"line_end":325,"column_start":24,"column_end":28},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":3946},"to":{"krate":0,"index":1765}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":633841,"byte_end":633845,"line_start":331,"line_end":331,"column_start":24,"column_end":28},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":3946},"to":{"krate":0,"index":1769}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":633987,"byte_end":633991,"line_start":337,"line_end":337,"column_start":30,"column_end":34},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":3946},"to":{"krate":0,"index":1773}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":634144,"byte_end":634148,"line_start":343,"line_end":343,"column_start":29,"column_end":33},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":3946},"to":{"krate":0,"index":1771}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":634292,"byte_end":634296,"line_start":349,"line_end":349,"column_start":22,"column_end":26},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":3946},"to":{"krate":0,"index":1775}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":634427,"byte_end":634431,"line_start":355,"line_end":355,"column_start":23,"column_end":27},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":3946},"to":{"krate":0,"index":1777}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":636636,"byte_end":636640,"line_start":416,"line_end":416,"column_start":24,"column_end":28},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":3946},"to":{"krate":2,"index":2218}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":636708,"byte_end":636712,"line_start":422,"line_end":422,"column_start":6,"column_end":10},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":3946},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":657190,"byte_end":657191,"line_start":1016,"line_end":1016,"column_start":22,"column_end":23},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":2121},"to":{"krate":0,"index":1986}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":657523,"byte_end":657527,"line_start":1031,"line_end":1031,"column_start":19,"column_end":23},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":3946},"to":{"krate":0,"index":1986}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":657944,"byte_end":657945,"line_start":1045,"line_end":1045,"column_start":23,"column_end":24},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":2129},"to":{"krate":0,"index":1048}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":658590,"byte_end":658594,"line_start":1068,"line_end":1068,"column_start":20,"column_end":24},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":3946},"to":{"krate":0,"index":1048}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":658825,"byte_end":658826,"line_start":1078,"line_end":1078,"column_start":23,"column_end":24},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":2138},"to":{"krate":0,"index":1221}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":659105,"byte_end":659109,"line_start":1089,"line_end":1089,"column_start":20,"column_end":24},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":3946},"to":{"krate":0,"index":1221}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":659253,"byte_end":659254,"line_start":1095,"line_end":1095,"column_start":33,"column_end":34},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":2144},"to":{"krate":0,"index":1989}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":659570,"byte_end":659574,"line_start":1108,"line_end":1108,"column_start":30,"column_end":34},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":3946},"to":{"krate":0,"index":1989}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":659852,"byte_end":659853,"line_start":1118,"line_end":1118,"column_start":22,"column_end":23},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":2149},"to":{"krate":0,"index":1991}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":660130,"byte_end":660134,"line_start":1131,"line_end":1131,"column_start":19,"column_end":23},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":3946},"to":{"krate":0,"index":1991}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":660444,"byte_end":660448,"line_start":1144,"line_end":1144,"column_start":24,"column_end":28},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":3946},"to":{"krate":0,"index":1798}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":661003,"byte_end":661004,"line_start":1169,"line_end":1169,"column_start":32,"column_end":33},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":2158},"to":{"krate":0,"index":2334}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":661260,"byte_end":661264,"line_start":1179,"line_end":1179,"column_start":29,"column_end":33},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":3946},"to":{"krate":0,"index":2334}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":661422,"byte_end":661430,"line_start":1185,"line_end":1185,"column_start":29,"column_end":37},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":3990},"to":{"krate":0,"index":2334}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":662660,"byte_end":662664,"line_start":1225,"line_end":1225,"column_start":26,"column_end":30},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":3946},"to":{"krate":0,"index":2621}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":683297,"byte_end":683301,"line_start":1809,"line_end":1809,"column_start":28,"column_end":32},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":3946},"to":{"krate":0,"index":1981}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":684010,"byte_end":684014,"line_start":1829,"line_end":1829,"column_start":28,"column_end":32},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":3946},"to":{"krate":0,"index":1983}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item.rs","byte_start":685483,"byte_end":685494,"line_start":1881,"line_end":1881,"column_start":10,"column_end":21},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":3981},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item_kind.rs","byte_start":686981,"byte_end":686989,"line_start":28,"line_end":28,"column_start":6,"column_end":14},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":3990},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/item_kind.rs","byte_start":689929,"byte_end":689937,"line_start":129,"line_end":129,"column_start":24,"column_end":32},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":3990},"to":{"krate":0,"index":1798}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/layout.rs","byte_start":691411,"byte_end":691417,"line_start":35,"line_end":35,"column_start":6,"column_end":12},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":4005},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/layout.rs","byte_start":693125,"byte_end":693131,"line_start":99,"line_end":99,"column_start":6,"column_end":12},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":4018},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/module.rs","byte_start":695479,"byte_end":695485,"line_start":31,"line_end":31,"column_start":6,"column_end":12},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":4045},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/module.rs","byte_start":696233,"byte_end":696239,"line_start":62,"line_end":62,"column_start":24,"column_end":30},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":4045},"to":{"krate":0,"index":1798}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/module.rs","byte_start":696512,"byte_end":696518,"line_start":75,"line_end":75,"column_start":29,"column_end":35},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":4045},"to":{"krate":0,"index":2619}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/objc.rs","byte_start":698441,"byte_end":698454,"line_start":55,"line_end":55,"column_start":6,"column_end":19},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":4053},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/objc.rs","byte_start":702722,"byte_end":702732,"line_start":173,"line_end":173,"column_start":6,"column_end":16},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":4062},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/objc.rs","byte_start":705086,"byte_end":705099,"line_start":259,"line_end":259,"column_start":16,"column_end":29},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":4053},"to":{"krate":0,"index":2415}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/template.rs","byte_start":709090,"byte_end":709095,"line_start":102,"line_end":102,"column_start":31,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":1543},"to":{"krate":0,"index":2334}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/template.rs","byte_start":712647,"byte_end":712668,"line_start":198,"line_end":198,"column_start":6,"column_end":27},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":4070},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/template.rs","byte_start":715783,"byte_end":715804,"line_start":293,"line_end":293,"column_start":19,"column_end":40},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":4070},"to":{"krate":0,"index":1986}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/template.rs","byte_start":716995,"byte_end":717016,"line_start":329,"line_end":329,"column_start":16,"column_end":37},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":4070},"to":{"krate":0,"index":2415}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/traversal.rs","byte_start":717900,"byte_end":717904,"line_start":20,"line_end":20,"column_start":6,"column_end":10},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":4077},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/traversal.rs","byte_start":718097,"byte_end":718101,"line_start":27,"line_end":27,"column_start":23,"column_end":27},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":4077},"to":{"krate":2,"index":2224}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/traversal.rs","byte_start":725015,"byte_end":725022,"line_start":255,"line_end":255,"column_start":39,"column_end":46},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":2153},"to":{"krate":0,"index":2388}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/traversal.rs","byte_start":725533,"byte_end":725538,"line_start":271,"line_end":271,"column_start":39,"column_end":44},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":4156},"to":{"krate":0,"index":2388}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/traversal.rs","byte_start":726780,"byte_end":726787,"line_start":310,"line_end":310,"column_start":27,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2210},"to":{"krate":0,"index":2400}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/traversal.rs","byte_start":726995,"byte_end":726998,"line_start":318,"line_end":318,"column_start":25,"column_end":28},"kind":{"Impl":{"id":234}},"from":{"krate":5,"index":3822},"to":{"krate":0,"index":2400}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/traversal.rs","byte_start":727175,"byte_end":727183,"line_start":328,"line_end":328,"column_start":25,"column_end":33},"kind":{"Impl":{"id":235}},"from":{"krate":5,"index":2068},"to":{"krate":0,"index":2400}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/traversal.rs","byte_start":727762,"byte_end":727763,"line_start":349,"line_end":349,"column_start":20,"column_end":21},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":2413},"to":{"krate":0,"index":2409}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/traversal.rs","byte_start":729369,"byte_end":729382,"line_start":403,"line_end":403,"column_start":5,"column_end":18},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":2419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/traversal.rs","byte_start":730223,"byte_end":730236,"line_start":437,"line_end":437,"column_start":9,"column_end":22},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":2419},"to":{"krate":0,"index":2409}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/traversal.rs","byte_start":730805,"byte_end":730818,"line_start":458,"line_end":458,"column_start":9,"column_end":22},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":2419},"to":{"krate":2,"index":3602}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":733720,"byte_end":733724,"line_start":45,"line_end":45,"column_start":6,"column_end":10},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":4164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":744083,"byte_end":744087,"line_start":392,"line_end":392,"column_start":19,"column_end":23},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":4164},"to":{"krate":0,"index":1986}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":744574,"byte_end":744578,"line_start":408,"line_end":408,"column_start":26,"column_end":30},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":4164},"to":{"krate":0,"index":2341}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":744804,"byte_end":744812,"line_start":420,"line_end":420,"column_start":26,"column_end":34},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":4188},"to":{"krate":0,"index":2341}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":745193,"byte_end":745197,"line_start":436,"line_end":436,"column_start":24,"column_end":28},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":4164},"to":{"krate":0,"index":1798}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":745928,"byte_end":745936,"line_start":465,"line_end":465,"column_start":24,"column_end":32},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":4188},"to":{"krate":0,"index":1798}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":746358,"byte_end":746366,"line_start":488,"line_end":488,"column_start":6,"column_end":14},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":4188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":748882,"byte_end":748886,"line_start":566,"line_end":566,"column_start":29,"column_end":33},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":4164},"to":{"krate":0,"index":2334}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":749044,"byte_end":749052,"line_start":572,"line_end":572,"column_start":29,"column_end":37},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":4188},"to":{"krate":0,"index":2334}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":752961,"byte_end":752965,"line_start":711,"line_end":711,"column_start":6,"column_end":10},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":4164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/ty.rs","byte_start":776611,"byte_end":776615,"line_start":1220,"line_end":1220,"column_start":16,"column_end":20},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":4164},"to":{"krate":0,"index":2415}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/var.rs","byte_start":779825,"byte_end":779828,"line_start":46,"line_end":46,"column_start":6,"column_end":9},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":4277},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/var.rs","byte_start":780787,"byte_end":780790,"line_start":91,"line_end":91,"column_start":24,"column_end":27},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":4277},"to":{"krate":0,"index":1798}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/ir/var.rs","byte_start":781695,"byte_end":781698,"line_start":131,"line_end":131,"column_start":29,"column_end":32},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":4277},"to":{"krate":0,"index":2619}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/parse.rs","byte_start":791834,"byte_end":791839,"line_start":32,"line_end":32,"column_start":31,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":1543},"to":{"krate":0,"index":2619}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/parse.rs","byte_start":792275,"byte_end":792280,"line_start":44,"line_end":44,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":1543},"to":{"krate":0,"index":2621}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/regex_set.rs","byte_start":794564,"byte_end":794572,"line_start":18,"line_end":18,"column_start":6,"column_end":14},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":4304},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/time.rs","byte_start":796827,"byte_end":796832,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":4313},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/time.rs","byte_start":797934,"byte_end":797939,"line_start":48,"line_end":48,"column_start":19,"column_end":24},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":4313},"to":{"krate":2,"index":1731}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/callbacks.rs","byte_start":798545,"byte_end":798565,"line_start":18,"line_end":18,"column_start":18,"column_end":38},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":4321},"to":{"krate":2,"index":2210}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/callbacks.rs","byte_start":798760,"byte_end":798765,"line_start":26,"line_end":26,"column_start":32,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":7573},"to":{"krate":0,"index":2669}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/callbacks.rs","byte_start":798768,"byte_end":798778,"line_start":26,"line_end":26,"column_start":40,"column_end":50},"kind":"SuperTrait","from":{"krate":1,"index":3722},"to":{"krate":0,"index":2669}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":3642,"byte_end":3655,"line_start":130,"line_end":130,"column_start":6,"column_end":19},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":4337},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":4545,"byte_end":4558,"line_start":162,"line_end":162,"column_start":18,"column_end":31},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":4337},"to":{"krate":2,"index":2210}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":6063,"byte_end":6070,"line_start":214,"line_end":214,"column_start":6,"column_end":13},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":4448},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":52599,"byte_end":52613,"line_start":1607,"line_end":1607,"column_start":35,"column_end":49},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":4456},"to":{"krate":1,"index":3722}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":52623,"byte_end":52637,"line_start":1609,"line_end":1609,"column_start":6,"column_end":20},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":4456},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":53840,"byte_end":53854,"line_start":1647,"line_end":1647,"column_start":18,"column_end":32},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":4456},"to":{"krate":2,"index":2210}},{"span":{"file_name":"/Users/kalomidin/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.51.1/src/lib.rs","byte_start":57371,"byte_end":57379,"line_start":1749,"line_end":1749,"column_start":6,"column_end":14},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":4534},"to":{"krate":4294967295,"index":4294967295}}]}